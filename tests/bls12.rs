#[cfg(all(not(target_arch = "wasm32"), not(target_arch = "x86")))]
mod bls12_test {
    use libcrux::bls12::{
        bls12_add, bls12_from_montgomery, bls12_mul, bls12_opp, bls12_square, bls12_sub,
        bls12_to_montgomery, felem_as_words, Fp2_add, Fp2_sub,
    };

    #[test]
    fn addition() {
        let mut a: felem_as_words = [
            11671922859260663127,
            11050707557586042878,
            284884720401305268,
            17749945728364010941,
            8613774818643959860,
            145621051382923523,
        ];
        let mut b: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut out: felem_as_words = [0, 0, 0, 0, 0, 0];
        bls12_add(&mut out, &mut a, &mut b);
        assert_eq!(
            out,
            [
                3019382075174660787,
                18360049640511111161,
                1424423602006526342,
                14962752346981848241,
                6175385945800696072,
                728105256914617617
            ]
        );
    }

    #[test]
    fn sub() {
        let mut a: felem_as_words = [
            11671922859260663127,
            11050707557586042878,
            284884720401305268,
            17749945728364010941,
            8613774818643959860,
            145621051382923523,
        ];
        let mut b: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut out: felem_as_words = [0, 0, 0, 0, 0, 0];
        bls12_sub(&mut out, &mut b, &mut a);
        assert_eq!(
            out,
            [
                16569024504072437765,
                14705378599048577019,
                854654161203915805,
                16356349037672929591,
                7394580382222327966,
                436863154148770570
            ]
        );
    }

    #[test]
    fn mul() {
        let mut a: felem_as_words = [
            11671922859260663127,
            11050707557586042878,
            284884720401305268,
            17749945728364010941,
            8613774818643959860,
            145621051382923523,
        ];
        let mut b: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut out: felem_as_words = [0, 0, 0, 0, 0, 0];
        bls12_mul(&mut out, &mut b, &mut a);
        assert_eq!(
            out,
            [
                8505329371266088957,
                17002214543764226050,
                6865905132761471162,
                8632934651105793861,
                6631298214892334189,
                1582556514881692819
            ]
        );
    }

    #[test]
    fn square() {
        let mut b: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut out: felem_as_words = [0, 0, 0, 0, 0, 0];
        bls12_square(&mut out, &mut b);
        assert_eq!(
            out,
            [
                12260768510540316659,
                6038201419376623626,
                5156596810353639551,
                12813724723179037911,
                10288881524157229871,
                708830206584151678
            ]
        );
    }

    #[test]
    fn opp() {
        let mut b: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut out: felem_as_words = [0, 0, 0, 0, 0, 0];
        bls12_opp(&mut out, &mut b);
        assert_eq!(
            out,
            [
                3608227726454314319,
                13347543502301691909,
                6296135691958860625,
                10026531341796875211,
                7850492651313966083,
                1291314412115845772
            ]
        );
    }

    #[test]
    fn to_montgomery() {
        let mut b: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut out: felem_as_words = [0, 0, 0, 0, 0, 0];
        bls12_to_montgomery(&mut out, &mut b);
        assert_eq!(
            out,
            [
                9961893758399620810,
                2912195846164837915,
                12868779101874716318,
                17948961859856965117,
                7008958234625322835,
                1211754212739384799
            ]
        );
    }

    #[test]
    fn from_montgomery() {
        let mut b: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut out: felem_as_words = [0, 0, 0, 0, 0, 0];
        bls12_from_montgomery(&mut out, &mut b);
        assert_eq!(
            out,
            [
                13402431016077863593,
                2210141511517208575,
                7435674573564081700,
                7239337960414712511,
                5412103778470702295,
                1873798617647539866
            ]
        );
    }

    #[test]
    fn fp2_add() {
        let mut ar: felem_as_words = [
            9000203289623549276,
            7000342082925068282,
            1000538881605221074,
            10009550692327388916,
            10008355200866287827,
            500084205531694093,
        ];
        let mut ai: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut br: felem_as_words = [
            11671922859260663127,
            11050707557586042878,
            284884720401305268,
            17749945728364010941,
            8613774818643959860,
            145621051382923523,
        ];
        let mut bi: felem_as_words = [
            10001922859260663127,
            10000707557586042878,
            200084720401305268,
            10009945728364010941,
            8000774818643959860,
            100021051382923523,
        ];
        let mut outr: felem_as_words = [0, 0, 0, 0, 0, 0];
        let mut outi: felem_as_words = [0, 0, 0, 0, 0, 0];
        Fp2_add(&mut outr, &mut outi, &mut ar, &mut ai, &mut br, &mut bi);
        assert_eq!(
            outr,
            [
                2225382075174660787,
                18051049640511111161,
                1285423602006526342,
                9312752346981848241,
                175385945800696072,
                645705256914617617
            ]
        );
        assert_eq!(
            outi,
            [
                1349382075174660787,
                17310049640511111161,
                1339623602006526342,
                7222752346981848241,
                5562385945800696072,
                682505256914617617
            ]
        );
    }

    #[test]
    fn fp2_sub() {
        let mut ar: felem_as_words = [
            9000203289623549276,
            7000342082925068282,
            1000538881605221074,
            10009550692327388916,
            10008355200866287827,
            500084205531694093,
        ];
        let mut ai: felem_as_words = [
            9794203289623549276,
            7309342082925068282,
            1139538881605221074,
            15659550692327388916,
            16008355200866287827,
            582484205531694093,
        ];
        let mut br: felem_as_words = [
            11671922859260663127,
            11050707557586042878,
            284884720401305268,
            17749945728364010941,
            8613774818643959860,
            145621051382923523,
        ];
        let mut bi: felem_as_words = [
            10001922859260663127,
            10000707557586042878,
            200084720401305268,
            10009945728364010941,
            8000774818643959860,
            100021051382923523,
        ];
        let mut outr: felem_as_words = [0, 0, 0, 0, 0, 0];
        let mut outi: felem_as_words = [0, 0, 0, 0, 0, 0];
        Fp2_sub(&mut outr, &mut outi, &mut ar, &mut ai, &mut br, &mut bi);
        assert_eq!(
            outr,
            [
                15775024504072437765,
                14396378599048577019,
                715654161203915805,
                10706349037672929591,
                1394580382222327966,
                354463154148770570
            ]
        );
        assert_eq!(
            outi,
            [
                18239024504072437765,
                15755378599048577019,
                939454161203915805,
                5649604963963377975,
                8007580382222327967,
                482463154148770570
            ]
        );
    }
}
