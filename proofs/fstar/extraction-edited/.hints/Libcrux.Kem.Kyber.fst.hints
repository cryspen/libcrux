[
  "Ýè\u0003ÌÞö—Û5ßCI0_£­",
  [
    [
      "Libcrux.Kem.Kyber.t_MlKemSharedSecret",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok", "equation_Lib.IntTypes.bits",
        "equation_Prims.nat", "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_typing",
        "lemma_Rust_primitives.Integers.pow2_values",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype"
      ],
      0,
      "6be4b5f0252b800ac411288eb0008b95"
    ],
    [
      "Libcrux.Kem.Kyber.v_KEY_GENERATION_SEED_SIZE",
      1,
      2,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented",
        "@fuel_irrelevance_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok", "equation_Lib.IntTypes.bits",
        "equation_Libcrux.Kem.Kyber.Constants.v_CPA_PKE_KEY_GENERATION_SEED_SIZE",
        "equation_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "equation_Libcrux.Kem.Kyber.Constants.v_SHARED_SECRET_SIZE",
        "equation_Prims.nat", "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v",
        "equation_with_fuel_Prims.pow2.fuel_instrumented", "int_typing",
        "lemma_Rust_primitives.Integers.pow2_values",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_LessThanOrEqual", "primitive_Prims.op_Multiply",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_83845a86f2550cdf941eeb1d9b59602b",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "typing_Lib.IntTypes.v",
        "typing_Libcrux.Kem.Kyber.Constants.v_CPA_PKE_KEY_GENERATION_SEED_SIZE",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.range",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.S32@tok"
      ],
      0,
      "4615ff38e1820bf88a3ae7196294b70e"
    ],
    [
      "Libcrux.Kem.Kyber.update_at_range_lemma",
      1,
      0,
      1,
      [
        "@MaxIFuel_assumption", "@query",
        "Core.Ops.Range_pretyping_8c1282eb47159d8b2b296f7b8e0bee8f",
        "b2t_def", "bool_inversion", "bool_typing",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equation_Core.Ops.Range.impl_index_range_slice",
        "equation_Lib.IntTypes.v",
        "equation_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "equation_Prims.nat", "equation_Rust_primitives.Arrays.length",
        "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Arrays.t_Slice",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.max_usize",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v",
        "fuel_guarded_inversion_Core.Ops.Range.t_Range", "int_inversion",
        "interpretation_Tm_abs_3fed82ae903d42e820576b470eb7bc5b",
        "l_and-interp", "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Core.Ops.Index.Mkt_Index_in_range",
        "proj_equation_Core.Ops.Range.Mkt_Range_f_end",
        "proj_equation_Core.Ops.Range.Mkt_Range_f_start",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Core.Ops.Index.Mkt_Index_in_range",
        "refinement_interpretation_Tm_refine_079adb77fdd07c88556550f7147f31e6",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5d8a78473c1f3b4c16d9774daca415a8",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_83845a86f2550cdf941eeb1d9b59602b",
        "refinement_interpretation_Tm_refine_8e225234fe5d971652ec3c68ba1abc2e",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_b4ee50178190a9f313b0f3ba0ddf1805",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_e696346fede031f8955ec37b59bf1a31",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__in_range",
        "typing_Core.Ops.Range.__proj__Mkt_Range__item__f_start",
        "typing_FStar.Seq.Base.length", "typing_Lib.IntTypes.v",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Rust_primitives.Arrays.length",
        "typing_Rust_primitives.Integers.int_t",
        "typing_Rust_primitives.Integers.minint",
        "typing_Rust_primitives.Integers.range",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.S32@tok"
      ],
      0,
      "b1e84745b56bf13d8b8fad5116329349"
    ],
    [
      "Libcrux.Kem.Kyber.serialize_kem_secret_key",
      1,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Libcrux.Digest.Algorithm_Sha3_256_",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Libcrux.Digest.Algorithm_Sha3_256_@tok",
        "equation_Core.Ops.Index.in_range",
        "equation_Core.Ops.Range.impl_index_range_slice",
        "equation_Core.Ops.Range.impl_range_index_array",
        "equation_Core.Slice.impl__copy_from_slice",
        "equation_Core.Slice.impl__len", "equation_FStar.Int.fits",
        "equation_FStar.Int.int_t", "equation_FStar.Int.max_int",
        "equation_FStar.Int.min_int", "equation_FStar.Int.size",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.maxint",
        "equation_Lib.IntTypes.minint", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.pub_int_v", "equation_Lib.IntTypes.range",
        "equation_Lib.IntTypes.unsigned", "equation_Lib.IntTypes.v",
        "equation_Libcrux.Digest.digest_size",
        "equation_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "equation_Libcrux.Kem.Kyber.Constants.v_H_DIGEST_SIZE",
        "equation_Prims.nat", "equation_Rust_primitives.Arrays.concat",
        "equation_Rust_primitives.Arrays.length",
        "equation_Rust_primitives.Arrays.slice",
        "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Arrays.t_Slice",
        "equation_Rust_primitives.Integers.add",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.max_usize",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.u8",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v",
        "equation_Rust_primitives.array_to_slice_unsize",
        "equation_Rust_primitives.unsize", "equation_Spec.Kyber.params",
        "equation_Spec.Kyber.v_CPA_PKE_PUBLIC_KEY_SIZE",
        "equation_Spec.Kyber.v_CPA_PKE_SECRET_KEY_SIZE",
        "equation_Spec.Kyber.v_H_DIGEST_SIZE",
        "equation_Spec.Kyber.v_SECRET_KEY_SIZE",
        "equation_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "equation_Spec.Kyber.valid_params",
        "fuel_guarded_inversion_Spec.Kyber.params_",
        "function_token_typing_Lib.IntTypes.byte_t",
        "function_token_typing_Rust_primitives.Integers.u8", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_3fed82ae903d42e820576b470eb7bc5b",
        "interpretation_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "interpretation_Tm_abs_bc0ae3740b8cfb7a7b7143f61a432dbc",
        "interpretation_Tm_abs_f5770e15f23008f76908f7a623d8cb34",
        "interpretation_Tm_abs_fa65ac303f30fcb41df8f1fc6e9818e3",
        "l_and-interp", "lemma_FStar.Seq.Base.lemma_eq_elim",
        "lemma_FStar.Seq.Base.lemma_eq_intro",
        "lemma_FStar.Seq.Base.lemma_index_slice",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Lib.IntTypes.v_injective",
        "lemma_Libcrux.Kem.Kyber.update_at_range_lemma",
        "lemma_Rust_primitives.Arrays.eq_intro",
        "lemma_Rust_primitives.Integers.mk_int_v_lemma",
        "lemma_Rust_primitives.Integers.pow2_values",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Core.Ops.Index.Mkt_Index_f_Output",
        "proj_equation_Core.Ops.Index.Mkt_Index_in_range",
        "proj_equation_Core.Ops.Range.Mkt_Range_f_end",
        "proj_equation_Core.Ops.Range.Mkt_Range_f_start",
        "proj_equation_Rust_primitives.Mkunsize_tc_output",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Core.Ops.Index.Mkt_Index_f_Output",
        "projection_inverse_Core.Ops.Index.Mkt_Index_in_range",
        "projection_inverse_Core.Ops.Range.Mkt_Range_f_end",
        "projection_inverse_Core.Ops.Range.Mkt_Range_f_start",
        "projection_inverse_Rust_primitives.Mkunsize_tc_output",
        "projection_inverse_Rust_primitives.Mkunsize_tc_unsize",
        "refinement_interpretation_Tm_refine_079adb77fdd07c88556550f7147f31e6",
        "refinement_interpretation_Tm_refine_221edc532b512849362f091b0318b99d",
        "refinement_interpretation_Tm_refine_331c14d442c5ee89a4fce6ea305c920f",
        "refinement_interpretation_Tm_refine_35a0739c434508f48d0bb1d5cd5df9e8",
        "refinement_interpretation_Tm_refine_4639d389381bee5cf8cf77b7a6585074",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_83845a86f2550cdf941eeb1d9b59602b",
        "refinement_interpretation_Tm_refine_8e225234fe5d971652ec3c68ba1abc2e",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_a8b8ce82aa512fe82521200c7486fcf4",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_c156ecc6eab05d1687a383ef171435eb",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d83f8da8ef6c1cb9f71d1465c1bb1c55",
        "refinement_interpretation_Tm_refine_d8958f2388129bdac6873f4cda807036",
        "refinement_interpretation_Tm_refine_e44c15fb5d8160f1569ee39a0b3d9688",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__in_range",
        "token_correspondence_Core.Ops.Index.in_range",
        "token_correspondence_Rust_primitives.unsize",
        "typing_FStar.Int32.v", "typing_FStar.Seq.Base.length",
        "typing_Lib.IntTypes.v",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Rust_primitives.Arrays.length",
        "typing_Rust_primitives.Integers.add",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.minint",
        "typing_Rust_primitives.Integers.range",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v",
        "typing_Spec.Kyber.v_CPA_PKE_SECRET_KEY_SIZE",
        "typing_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "typing_Spec.Kyber.valid_params", "typing_tok_Lib.IntTypes.PUB@tok",
        "typing_tok_Lib.IntTypes.S32@tok", "typing_tok_Lib.IntTypes.U32@tok",
        "typing_tok_Lib.IntTypes.U64@tok"
      ],
      0,
      "15cd4309d6689580302de0595c52488e"
    ],
    [
      "Libcrux.Kem.Kyber.decapsulate",
      1,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok", "equation_Lib.IntTypes.bits",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Spec.Kyber.params", "equation_Spec.Kyber.valid_params",
        "fuel_guarded_inversion_Libcrux.Kem.Kyber.Types.t_KyberCiphertext",
        "fuel_guarded_inversion_Libcrux.Kem.Kyber.Types.t_KyberPrivateKey",
        "fuel_guarded_inversion_Spec.Kyber.params_",
        "lemma_Rust_primitives.Integers.pow2_values",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_dfdb011166f9b557b207249cfa9e4348",
        "refinement_interpretation_Tm_refine_e44c15fb5d8160f1569ee39a0b3d9688",
        "typing_FStar.UInt32.t", "typing_FStar.UInt64.t",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype"
      ],
      0,
      "87ffb5879e37b3c06cc08b2c4b4f1ce0"
    ],
    [
      "Libcrux.Kem.Kyber.decapsulate",
      2,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "Rust_primitives_interpretation_Tm_arrow_0dc9533934fadb6b25c05502d946f2d2",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_Libcrux.Kem.Kyber.Types.Mkt_MlKemCiphertext",
        "data_elim_Libcrux.Kem.Kyber.Types.Mkt_MlKemPrivateKey",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Core.Convert.f_as_ref",
        "equation_Core.Ops.Index.in_range",
        "equation_Core.Ops.Range.impl_index_range_from_slice",
        "equation_Core.Ops.Range.impl_range_from_index_array",
        "equation_Core.Slice.impl__copy_from_slice",
        "equation_FStar.Int.fits", "equation_FStar.Int.int_t",
        "equation_FStar.Int.max_int", "equation_FStar.Int.min_int",
        "equation_FStar.Int.size", "equation_FStar.UInt.fits",
        "equation_FStar.UInt.max_int", "equation_FStar.UInt.min_int",
        "equation_FStar.UInt.size", "equation_FStar.UInt.uint_t",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.minint",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.pub_int_v",
        "equation_Lib.IntTypes.range", "equation_Lib.IntTypes.unsigned",
        "equation_Lib.IntTypes.v",
        "equation_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "equation_Libcrux.Kem.Kyber.Constants.v_H_DIGEST_SIZE",
        "equation_Libcrux.Kem.Kyber.Constants.v_SHARED_SECRET_SIZE",
        "equation_Libcrux.Kem.Kyber.Types.impl_1",
        "equation_Libcrux.Kem.Kyber.Types.impl_12__split_at",
        "equation_Prims.eqtype", "equation_Prims.nat", "equation_Prims.pos",
        "equation_Rust_primitives.Arrays.length",
        "equation_Rust_primitives.Arrays.slice",
        "equation_Rust_primitives.Arrays.split",
        "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Arrays.t_Slice",
        "equation_Rust_primitives.Integers.add",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.lt",
        "equation_Rust_primitives.Integers.lte",
        "equation_Rust_primitives.Integers.max_usize",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sub",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.u8",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v",
        "equation_Rust_primitives.array_to_slice_unsize",
        "equation_Rust_primitives.unsize",
        "equation_Spec.Kyber.ind_cca_decapsulate",
        "equation_Spec.Kyber.t_KyberCiphertext",
        "equation_Spec.Kyber.v_CPA_PKE_CIPHERTEXT_SIZE",
        "equation_Spec.Kyber.v_CPA_PKE_PUBLIC_KEY_SIZE",
        "equation_Spec.Kyber.v_CPA_PKE_SECRET_KEY_SIZE",
        "equation_Spec.Kyber.v_H_DIGEST_SIZE",
        "equation_Spec.Kyber.v_IMPLICIT_REJECTION_HASH_INPUT_SIZE",
        "equation_Spec.Kyber.v_J", "equation_Spec.Kyber.v_SECRET_KEY_SIZE",
        "equation_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "equation_Spec.Kyber.v_T_AS_NTT_ENCODED_SIZE",
        "equation_Spec.Kyber.valid_params",
        "fuel_guarded_inversion_Libcrux.Kem.Kyber.Types.t_MlKemCiphertext",
        "fuel_guarded_inversion_Libcrux.Kem.Kyber.Types.t_MlKemPrivateKey",
        "function_token_typing_Lib.IntTypes.byte_t", "int_inversion",
        "int_typing",
        "interpretation_Tm_abs_4bb6412701dfeac9ce6df5500b93361d",
        "interpretation_Tm_abs_8250816dcffbfdfac865c84d71b3978b",
        "interpretation_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "interpretation_Tm_abs_bc0ae3740b8cfb7a7b7143f61a432dbc",
        "interpretation_Tm_abs_c383c10040deb921f8edacb536247c52",
        "interpretation_Tm_abs_e1cd43864f2714f04d56bbbc7a05f4c2",
        "interpretation_Tm_abs_f5770e15f23008f76908f7a623d8cb34",
        "l_and-interp", "lemma_FStar.Seq.Base.lemma_len_append",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_FStar.Seq.Properties.slice_slice", "lemma_FStar.UInt8.vu_inv",
        "lemma_Lib.IntTypes.pow2_3", "lemma_Lib.IntTypes.v_injective",
        "lemma_Rust_primitives.Integers.mk_int_v_lemma",
        "lemma_Rust_primitives.Integers.pow2_values",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Division",
        "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Multiply", "primitive_Prims.op_Negation",
        "primitive_Prims.op_Subtraction", "primitive_Prims.op_disEquality",
        "proj_equation_Core.Ops.Index.Mkt_Index_f_Output",
        "proj_equation_Core.Ops.Index.Mkt_Index_in_range",
        "proj_equation_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_MlKemCiphertext_f_value",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_MlKemPrivateKey_f_value",
        "proj_equation_Rust_primitives.Mkunsize_tc_output",
        "proj_equation_Spec.Kyber.Mkparams__v_ETA1",
        "proj_equation_Spec.Kyber.Mkparams__v_ETA2",
        "proj_equation_Spec.Kyber.Mkparams__v_RANK",
        "proj_equation_Spec.Kyber.Mkparams__v_VECTOR_U_COMPRESSION_FACTOR",
        "proj_equation_Spec.Kyber.Mkparams__v_VECTOR_V_COMPRESSION_FACTOR",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Core.Convert.Mkt_AsRef_f_as_ref",
        "projection_inverse_Core.Ops.Index.Mkt_Index_f_Output",
        "projection_inverse_Core.Ops.Index.Mkt_Index_in_range",
        "projection_inverse_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Rust_primitives.Mkunsize_tc_output",
        "projection_inverse_Rust_primitives.Mkunsize_tc_unsize",
        "projection_inverse_Spec.Kyber.Mkparams__v_ETA1",
        "projection_inverse_Spec.Kyber.Mkparams__v_ETA2",
        "projection_inverse_Spec.Kyber.Mkparams__v_RANK",
        "projection_inverse_Spec.Kyber.Mkparams__v_VECTOR_U_COMPRESSION_FACTOR",
        "projection_inverse_Spec.Kyber.Mkparams__v_VECTOR_V_COMPRESSION_FACTOR",
        "refinement_interpretation_Tm_refine_079adb77fdd07c88556550f7147f31e6",
        "refinement_interpretation_Tm_refine_0e1d8acba93710c332370f20ed925486",
        "refinement_interpretation_Tm_refine_117f68d1f96cf8c1d2700eebe70084e5",
        "refinement_interpretation_Tm_refine_1ba8fd8bb363097813064c67740b2de5",
        "refinement_interpretation_Tm_refine_221edc532b512849362f091b0318b99d",
        "refinement_interpretation_Tm_refine_22c4c3434777aa29bd8e74c62e8ffd5c",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_4c253f027b5d09b5555e1c4f903eeb5c",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_5a22dcb00202fadb94fa290c95542daa",
        "refinement_interpretation_Tm_refine_774ba3f728d91ead8ef40be66c9802e5",
        "refinement_interpretation_Tm_refine_790ef91134217408f1ba2895d20e36c7",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_83845a86f2550cdf941eeb1d9b59602b",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_c156ecc6eab05d1687a383ef171435eb",
        "refinement_interpretation_Tm_refine_d3d07693cd71377864ef84dc97d10ec1",
        "refinement_interpretation_Tm_refine_d8958f2388129bdac6873f4cda807036",
        "refinement_interpretation_Tm_refine_f13070840248fced9d9d60d77bdae3ec",
        "token_correspondence_Core.Convert.f_as_ref",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__in_range",
        "token_correspondence_Core.Ops.Index.in_range",
        "token_correspondence_Prims.pow2.fuel_instrumented",
        "token_correspondence_Rust_primitives.unsize",
        "typing_Core.Slice.impl__split_at", "typing_FStar.Int32.v",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt.fits",
        "typing_FStar.UInt32.t", "typing_FStar.UInt64.t",
        "typing_Lib.IntTypes.v",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Libcrux.Kem.Kyber.Types.__proj__Mkt_MlKemPrivateKey__item__f_value",
        "typing_Libcrux.Kem.Kyber.Types.impl_12__split_at",
        "typing_Rust_primitives.Integers.add",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.minint",
        "typing_Rust_primitives.Integers.mk_int",
        "typing_Rust_primitives.Integers.range",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v",
        "typing_Spec.Kyber.v_C1_BLOCK_SIZE", "typing_Spec.Kyber.v_C2_SIZE",
        "typing_Spec.Kyber.v_CPA_PKE_CIPHERTEXT_SIZE",
        "typing_Spec.Kyber.v_IMPLICIT_REJECTION_HASH_INPUT_SIZE",
        "typing_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "typing_Spec.Kyber.v_T_AS_NTT_ENCODED_SIZE",
        "typing_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.S32@tok",
        "typing_tok_Lib.IntTypes.U32@tok", "typing_tok_Lib.IntTypes.U64@tok"
      ],
      0,
      "7fc015d58d5c1baea067181bdfa1e7dd"
    ],
    [
      "Libcrux.Kem.Kyber.encapsulate",
      1,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok", "equation_Lib.IntTypes.bits",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "lemma_Rust_primitives.Integers.pow2_values",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_ccc6e24ff06b6c7a9126c30a9c6c5a23",
        "typing_FStar.UInt32.t", "typing_FStar.UInt64.t",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype"
      ],
      0,
      "bcf9b65a50bb42498a095b71fbcdea4e"
    ],
    [
      "Libcrux.Kem.Kyber.encapsulate",
      2,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "Core.Array_pretyping_452a2008417cf175d4b3928fdb38d4d2",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Core.Result.Result_Ok",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "data_elim_Libcrux.Kem.Kyber.Types.Mkt_MlKemPublicKey",
        "disc_equation_Core.Result.Result_Ok",
        "equality_tok_Core.Array.TryFromSliceError@tok",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Core.Clone.clone_all",
        "equation_Core.Clone.f_clone", "equation_Core.Convert.f_from",
        "equation_Core.Convert.f_into", "equation_Core.Convert.f_try_into",
        "equation_Core.Convert.impl_6",
        "equation_Core.Convert.into_from_from",
        "equation_Core.Ops.Index.in_range",
        "equation_Core.Ops.Range.impl_index_range_from_slice",
        "equation_Core.Ops.Range.impl_range_from_index_array",
        "equation_Core.Result.impl__unwrap",
        "equation_Core.Slice.impl__copy_from_slice",
        "equation_Core.Slice.impl__len", "equation_FStar.Int.fits",
        "equation_FStar.Int.int_t", "equation_FStar.Int.max_int",
        "equation_FStar.Int.min_int", "equation_FStar.Int.size",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.pub_int_v",
        "equation_Lib.IntTypes.v",
        "equation_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "equation_Libcrux.Kem.Kyber.Constants.v_H_DIGEST_SIZE",
        "equation_Libcrux.Kem.Kyber.Constants.v_SHARED_SECRET_SIZE",
        "equation_Libcrux.Kem.Kyber.Types.impl_18__as_slice",
        "equation_Libcrux.Kem.Kyber.Types.impl_3", "equation_Prims.nat",
        "equation_Rust_primitives.Arrays.length",
        "equation_Rust_primitives.Arrays.slice",
        "equation_Rust_primitives.Arrays.split",
        "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Arrays.t_Slice",
        "equation_Rust_primitives.Integers.add",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.lt",
        "equation_Rust_primitives.Integers.lte",
        "equation_Rust_primitives.Integers.max_usize",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.u8",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v",
        "equation_Rust_primitives.array_to_slice_unsize",
        "equation_Rust_primitives.unsize",
        "equation_Spec.Kyber.ind_cca_encapsulate",
        "equation_Spec.Kyber.t_KyberCiphertext",
        "equation_Spec.Kyber.v_H_DIGEST_SIZE",
        "equation_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "equation_Spec.Kyber.valid_params",
        "fuel_guarded_inversion_Libcrux.Kem.Kyber.Types.t_MlKemPublicKey",
        "int_typing",
        "interpretation_Tm_abs_13d076882bd1335519e03f36214a448b",
        "interpretation_Tm_abs_34b58233e1255b6eba3ce7c341357779",
        "interpretation_Tm_abs_3a1d55e938f1977c08f303fe7b42f7ef",
        "interpretation_Tm_abs_4bb6412701dfeac9ce6df5500b93361d",
        "interpretation_Tm_abs_65ca3503e4f90241c7f6a4464be9e9ad",
        "interpretation_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "interpretation_Tm_abs_99a4114d073ad5d8baa4a916e7f78dd4",
        "interpretation_Tm_abs_a5c83a391084b3d9146ba51c53498493",
        "interpretation_Tm_abs_bc0ae3740b8cfb7a7b7143f61a432dbc",
        "interpretation_Tm_abs_c383c10040deb921f8edacb536247c52",
        "interpretation_Tm_abs_db8cd405d3f0871788b1d0edf4fda3fa",
        "interpretation_Tm_abs_f5770e15f23008f76908f7a623d8cb34",
        "interpretation_Tm_abs_fc413d795e9c18d46bf344f13a23c593",
        "l_and-interp", "lemma_Rust_primitives.Integers.mk_int_v_lemma",
        "lemma_Rust_primitives.Integers.pow2_values",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Core.Ops.Index.Mkt_Index_in_range",
        "proj_equation_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "proj_equation_Core.Result.Result_Ok_v",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_MlKemCiphertext_f_value",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_MlKemPublicKey_f_value",
        "proj_equation_Rust_primitives.Mkunsize_tc_output",
        "proj_equation_Spec.Kyber.Mkparams__v_ETA1",
        "proj_equation_Spec.Kyber.Mkparams__v_ETA2",
        "proj_equation_Spec.Kyber.Mkparams__v_RANK",
        "proj_equation_Spec.Kyber.Mkparams__v_VECTOR_U_COMPRESSION_FACTOR",
        "proj_equation_Spec.Kyber.Mkparams__v_VECTOR_V_COMPRESSION_FACTOR",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Core.Clone.Mkt_Clone_f_clone",
        "projection_inverse_Core.Convert.Mkt_From_f_from",
        "projection_inverse_Core.Convert.Mkt_Into_f_into",
        "projection_inverse_Core.Convert.Mktry_into_tc_f_Error",
        "projection_inverse_Core.Convert.Mktry_into_tc_f_try_into",
        "projection_inverse_Core.Ops.Index.Mkt_Index_in_range",
        "projection_inverse_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "projection_inverse_Core.Result.Result_Ok_e",
        "projection_inverse_Core.Result.Result_Ok_t",
        "projection_inverse_Core.Result.Result_Ok_v",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_MlKemCiphertext_f_value",
        "projection_inverse_Rust_primitives.Mkunsize_tc_output",
        "projection_inverse_Rust_primitives.Mkunsize_tc_unsize",
        "projection_inverse_Spec.Kyber.Mkparams__v_ETA1",
        "projection_inverse_Spec.Kyber.Mkparams__v_ETA2",
        "projection_inverse_Spec.Kyber.Mkparams__v_RANK",
        "projection_inverse_Spec.Kyber.Mkparams__v_VECTOR_U_COMPRESSION_FACTOR",
        "projection_inverse_Spec.Kyber.Mkparams__v_VECTOR_V_COMPRESSION_FACTOR",
        "refinement_interpretation_Tm_refine_079adb77fdd07c88556550f7147f31e6",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_c156ecc6eab05d1687a383ef171435eb",
        "token_correspondence_Core.Clone.f_clone",
        "token_correspondence_Core.Convert.f_from",
        "token_correspondence_Core.Convert.f_into",
        "token_correspondence_Core.Convert.f_try_into",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__in_range",
        "token_correspondence_Core.Ops.Index.in_range",
        "token_correspondence_Rust_primitives.unsize",
        "typing_FStar.Int32.v",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.minint",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v",
        "typing_tok_Core.Array.TryFromSliceError@tok",
        "typing_tok_Lib.IntTypes.S32@tok"
      ],
      0,
      "893917412cd0b64011704d2e089a36f9"
    ],
    [
      "Libcrux.Kem.Kyber.encapsulate",
      3,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "Core.Array_pretyping_452a2008417cf175d4b3928fdb38d4d2",
        "bool_inversion", "bool_typing",
        "constructor_distinct_Core.Result.Result_Ok",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U128",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "constructor_distinct_Libcrux.Digest.Algorithm_Sha3_256_",
        "data_elim_Libcrux.Kem.Kyber.Types.Mkt_KyberPublicKey",
        "disc_equation_Core.Result.Result_Ok",
        "equality_tok_Core.Array.TryFromSliceError@tok",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equality_tok_Libcrux.Digest.Algorithm_Sha3_256_@tok",
        "equation_Core.Clone.clone_all", "equation_Core.Clone.f_clone",
        "equation_Core.Convert.f_from", "equation_Core.Convert.f_into",
        "equation_Core.Convert.f_try_into", "equation_Core.Convert.impl_6",
        "equation_Core.Convert.into_from_from",
        "equation_Core.Ops.Index.in_range",
        "equation_Core.Ops.Range.impl_index_range_from_slice",
        "equation_Core.Ops.Range.impl_range_from_index_array",
        "equation_Core.Result.impl__unwrap",
        "equation_Core.Slice.impl__copy_from_slice",
        "equation_Core.Slice.impl__len", "equation_FStar.Int.fits",
        "equation_FStar.Int.int_t", "equation_FStar.Int.max_int",
        "equation_FStar.Int.min_int", "equation_FStar.Int.size",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.int_t",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.pub_int_v",
        "equation_Lib.IntTypes.v", "equation_Libcrux.Digest.digest_size",
        "equation_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "equation_Libcrux.Kem.Kyber.Constants.v_H_DIGEST_SIZE",
        "equation_Libcrux.Kem.Kyber.Constants.v_SHARED_SECRET_SIZE",
        "equation_Libcrux.Kem.Kyber.Types.impl_18__as_slice",
        "equation_Libcrux.Kem.Kyber.Types.impl_3", "equation_Prims.nat",
        "equation_Rust_primitives.Arrays.length",
        "equation_Rust_primitives.Arrays.slice",
        "equation_Rust_primitives.Arrays.split",
        "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Arrays.t_Slice",
        "equation_Rust_primitives.Integers.add",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.lt",
        "equation_Rust_primitives.Integers.lte",
        "equation_Rust_primitives.Integers.max_usize",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.u8",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v",
        "equation_Rust_primitives.array_to_slice_unsize",
        "equation_Rust_primitives.unsize",
        "equation_Spec.Kyber.ind_cca_encapsulate",
        "equation_Spec.Kyber.t_KyberCiphertext",
        "equation_Spec.Kyber.v_H_DIGEST_SIZE",
        "equation_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "equation_Spec.Kyber.valid_params",
        "fuel_guarded_inversion_Libcrux.Kem.Kyber.Types.t_KyberPublicKey",
        "int_typing",
        "interpretation_Tm_abs_06a3905348d584bb1a3419bf1d50f728",
        "interpretation_Tm_abs_13d076882bd1335519e03f36214a448b",
        "interpretation_Tm_abs_34b58233e1255b6eba3ce7c341357779",
        "interpretation_Tm_abs_4bb6412701dfeac9ce6df5500b93361d",
        "interpretation_Tm_abs_65ca3503e4f90241c7f6a4464be9e9ad",
        "interpretation_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "interpretation_Tm_abs_99a4114d073ad5d8baa4a916e7f78dd4",
        "interpretation_Tm_abs_a5c83a391084b3d9146ba51c53498493",
        "interpretation_Tm_abs_bc0ae3740b8cfb7a7b7143f61a432dbc",
        "interpretation_Tm_abs_c383c10040deb921f8edacb536247c52",
        "interpretation_Tm_abs_db8cd405d3f0871788b1d0edf4fda3fa",
        "interpretation_Tm_abs_f5770e15f23008f76908f7a623d8cb34",
        "interpretation_Tm_abs_fc413d795e9c18d46bf344f13a23c593",
        "l_and-interp", "lemma_Rust_primitives.Integers.mk_int_v_lemma",
        "lemma_Rust_primitives.Integers.pow2_values",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Core.Ops.Index.Mkt_Index_in_range",
        "proj_equation_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "proj_equation_Core.Result.Result_Ok_v",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_KyberCiphertext_f_value",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_KyberPublicKey_f_value",
        "proj_equation_Rust_primitives.Mkunsize_tc_output",
        "proj_equation_Spec.Kyber.Mkparams__v_ETA1",
        "proj_equation_Spec.Kyber.Mkparams__v_ETA2",
        "proj_equation_Spec.Kyber.Mkparams__v_RANK",
        "proj_equation_Spec.Kyber.Mkparams__v_VECTOR_U_COMPRESSION_FACTOR",
        "proj_equation_Spec.Kyber.Mkparams__v_VECTOR_V_COMPRESSION_FACTOR",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Core.Clone.Mkt_Clone_f_clone",
        "projection_inverse_Core.Convert.Mkt_From_f_from",
        "projection_inverse_Core.Convert.Mkt_Into_f_into",
        "projection_inverse_Core.Convert.Mktry_into_tc_f_Error",
        "projection_inverse_Core.Convert.Mktry_into_tc_f_try_into",
        "projection_inverse_Core.Ops.Index.Mkt_Index_in_range",
        "projection_inverse_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "projection_inverse_Core.Result.Result_Ok_e",
        "projection_inverse_Core.Result.Result_Ok_t",
        "projection_inverse_Core.Result.Result_Ok_v",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_KyberCiphertext_f_value",
        "projection_inverse_Rust_primitives.Mkunsize_tc_output",
        "projection_inverse_Rust_primitives.Mkunsize_tc_unsize",
        "projection_inverse_Spec.Kyber.Mkparams__v_ETA1",
        "projection_inverse_Spec.Kyber.Mkparams__v_ETA2",
        "projection_inverse_Spec.Kyber.Mkparams__v_RANK",
        "projection_inverse_Spec.Kyber.Mkparams__v_VECTOR_U_COMPRESSION_FACTOR",
        "projection_inverse_Spec.Kyber.Mkparams__v_VECTOR_V_COMPRESSION_FACTOR",
        "refinement_interpretation_Tm_refine_079adb77fdd07c88556550f7147f31e6",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_c156ecc6eab05d1687a383ef171435eb",
        "token_correspondence_Core.Clone.f_clone",
        "token_correspondence_Core.Convert.f_from",
        "token_correspondence_Core.Convert.f_into",
        "token_correspondence_Core.Convert.f_try_into",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__in_range",
        "token_correspondence_Core.Ops.Index.in_range",
        "token_correspondence_Rust_primitives.unsize",
        "typing_FStar.Int32.v",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.minint",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v",
        "typing_tok_Core.Array.TryFromSliceError@tok",
        "typing_tok_Lib.IntTypes.S32@tok"
      ],
      0,
      "bbb6b63d610b9b6d78de6d2bcb696a91"
    ],
    [
      "Libcrux.Kem.Kyber.validate_public_key",
      1,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok",
        "equation_Core.Ops.Index.f_index",
        "equation_Core.Ops.Index.in_range",
        "equation_Core.Ops.Range.impl_index_range_from_slice",
        "equation_Core.Ops.Range.impl_index_range_to_slice",
        "equation_Core.Ops.Range.impl_range_from_index_array",
        "equation_Core.Ops.Range.impl_range_to_index_array",
        "equation_Core.Ops.op_String_Access", "equation_FStar.Int.fits",
        "equation_FStar.Int.max_int", "equation_FStar.Int.min_int",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.minint",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.range",
        "equation_Lib.IntTypes.unsigned", "equation_Lib.IntTypes.v",
        "equation_Prims.eqtype", "equation_Prims.nat",
        "equation_Rust_primitives.Arrays.length",
        "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Arrays.t_Slice",
        "equation_Rust_primitives.Integers.add",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.u8",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v", "equation_Spec.Kyber.params",
        "equation_Spec.Kyber.v_CPA_PKE_PUBLIC_KEY_SIZE",
        "equation_Spec.Kyber.v_H_DIGEST_SIZE",
        "equation_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "equation_Spec.Kyber.v_T_AS_NTT_ENCODED_SIZE",
        "equation_Spec.Kyber.valid_params",
        "fuel_guarded_inversion_Spec.Kyber.params_",
        "function_token_typing_Lib.IntTypes.byte_t",
        "haseqTm_refine_53d7089a905511e9e713c7dbc2f68178", "int_typing",
        "interpretation_Tm_abs_05e11496368b55c93278e0c1a2cef5c6",
        "interpretation_Tm_abs_0956da15530cc0f64a16a4548bf6da82",
        "interpretation_Tm_abs_0cb90ffdaac009e5428b856a53fc2c98",
        "interpretation_Tm_abs_4bb6412701dfeac9ce6df5500b93361d",
        "interpretation_Tm_abs_bc0ae3740b8cfb7a7b7143f61a432dbc",
        "interpretation_Tm_abs_c383c10040deb921f8edacb536247c52",
        "interpretation_Tm_abs_d9386b413ca358f7b51026b6adfc9221",
        "interpretation_Tm_abs_efab849ed2b09d0ecb6a8d3f4d35f6d2",
        "interpretation_Tm_abs_f2456aabd1fc7a1b33affc2a77ba7b3e",
        "interpretation_Tm_abs_f8f66a0d95ba9bd5e7d77f6d4806c3ff",
        "l_and-interp", "lemma_FStar.Seq.Base.hasEq_lemma",
        "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Rust_primitives.Integers.mk_int_v_lemma",
        "lemma_Rust_primitives.Integers.pow2_values",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Core.Ops.Index.Mkt_Index_f_Output",
        "proj_equation_Core.Ops.Index.Mkt_Index_f_index",
        "proj_equation_Core.Ops.Index.Mkt_Index_in_range",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Core.Ops.Index.Mkt_Index_f_Output",
        "projection_inverse_Core.Ops.Index.Mkt_Index_f_index",
        "projection_inverse_Core.Ops.Index.Mkt_Index_in_range",
        "projection_inverse_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "projection_inverse_Core.Ops.Range.Mkt_RangeTo_f_end",
        "refinement_interpretation_Tm_refine_079adb77fdd07c88556550f7147f31e6",
        "refinement_interpretation_Tm_refine_414d0a9f578ab0048252f8c8f552b99f",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_83845a86f2550cdf941eeb1d9b59602b",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_d8958f2388129bdac6873f4cda807036",
        "refinement_interpretation_Tm_refine_e44c15fb5d8160f1569ee39a0b3d9688",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__f_index",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__in_range",
        "token_correspondence_Core.Ops.Index.f_index",
        "token_correspondence_Core.Ops.Index.in_range",
        "token_correspondence_Core.Ops.op_String_Access",
        "typing_FStar.Seq.Base.length", "typing_FStar.UInt8.t",
        "typing_Lib.IntTypes.v",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.minint",
        "typing_Rust_primitives.Integers.range",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v",
        "typing_Spec.Kyber.v_RANKED_BYTES_PER_RING_ELEMENT",
        "typing_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "typing_Spec.Kyber.valid_params", "typing_tok_Lib.IntTypes.PUB@tok",
        "typing_tok_Lib.IntTypes.S32@tok", "typing_tok_Lib.IntTypes.U32@tok",
        "typing_tok_Lib.IntTypes.U64@tok"
      ],
      0,
      "949995bc0e6adfa3fd871c10099bf228"
    ],
    [
      "Libcrux.Kem.Kyber.generate_keypair",
      1,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "bool_inversion", "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Lib.IntTypes.bits",
        "equation_Prims.nat", "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.u8",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Spec.Kyber.v_KEY_GENERATION_SEED_SIZE",
        "lemma_Rust_primitives.Integers.pow2_values",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_7dcfe512132d3af043fc86d8f641a16b",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_f2f124f4ff354f341e763b0410e68fde",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Spec.Kyber.v_KEY_GENERATION_SEED_SIZE"
      ],
      0,
      "9407f1771f52667f1f28c692c0a9c912"
    ],
    [
      "Libcrux.Kem.Kyber.generate_keypair",
      2,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "Rust_primitives_interpretation_Tm_arrow_0dc9533934fadb6b25c05502d946f2d2",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Core.Clone.clone_all",
        "equation_Core.Clone.f_clone", "equation_Core.Convert.f_from",
        "equation_Core.Convert.f_into",
        "equation_Core.Convert.into_from_from",
        "equation_Core.Ops.Index.f_index",
        "equation_Core.Ops.Index.in_range",
        "equation_Core.Ops.Range.impl_index_range_from_slice",
        "equation_Core.Ops.Range.impl_index_range_slice",
        "equation_Core.Ops.Range.impl_range_from_index_array",
        "equation_Core.Ops.Range.impl_range_index_array",
        "equation_Core.Ops.op_String_Access", "equation_FStar.Int.fits",
        "equation_FStar.Int.int_t", "equation_FStar.Int.max_int",
        "equation_FStar.Int.min_int", "equation_FStar.Int.size",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.minint",
        "equation_Lib.IntTypes.pub_int_t", "equation_Lib.IntTypes.pub_int_v",
        "equation_Lib.IntTypes.range", "equation_Lib.IntTypes.unsigned",
        "equation_Lib.IntTypes.v",
        "equation_Libcrux.Kem.Kyber.Constants.v_CPA_PKE_KEY_GENERATION_SEED_SIZE",
        "equation_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "equation_Libcrux.Kem.Kyber.Types.impl_15",
        "equation_Libcrux.Kem.Kyber.Types.impl_9",
        "equation_Libcrux.Kem.Kyber.Types.impl__from", "equation_Prims.nat",
        "equation_Rust_primitives.Arrays.length",
        "equation_Rust_primitives.Arrays.split",
        "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Arrays.t_Slice",
        "equation_Rust_primitives.Integers.add",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.lt",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sub",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.u8",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v",
        "equation_Rust_primitives.array_to_slice_unsize",
        "equation_Rust_primitives.unsize",
        "equation_Spec.Kyber.ind_cca_generate_keypair",
        "equation_Spec.Kyber.params",
        "equation_Spec.Kyber.t_KyberPrivateKey",
        "equation_Spec.Kyber.t_KyberPublicKey",
        "equation_Spec.Kyber.v_CPA_PKE_KEY_GENERATION_SEED_SIZE",
        "equation_Spec.Kyber.v_CPA_PKE_PUBLIC_KEY_SIZE",
        "equation_Spec.Kyber.v_CPA_PKE_SECRET_KEY_SIZE",
        "equation_Spec.Kyber.v_H_DIGEST_SIZE",
        "equation_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "equation_Spec.Kyber.valid_params",
        "fuel_guarded_inversion_Spec.Kyber.params_",
        "function_token_typing_Lib.IntTypes.byte_t", "int_typing",
        "interpretation_Tm_abs_0956da15530cc0f64a16a4548bf6da82",
        "interpretation_Tm_abs_0cb90ffdaac009e5428b856a53fc2c98",
        "interpretation_Tm_abs_34b58233e1255b6eba3ce7c341357779",
        "interpretation_Tm_abs_3fed82ae903d42e820576b470eb7bc5b",
        "interpretation_Tm_abs_4bb6412701dfeac9ce6df5500b93361d",
        "interpretation_Tm_abs_572e0e093c6cc78cd0d8e5493e04bc44",
        "interpretation_Tm_abs_65ca3503e4f90241c7f6a4464be9e9ad",
        "interpretation_Tm_abs_8d67808eb83ec356a662570df3de282b",
        "interpretation_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "interpretation_Tm_abs_99a4114d073ad5d8baa4a916e7f78dd4",
        "interpretation_Tm_abs_a5c83a391084b3d9146ba51c53498493",
        "interpretation_Tm_abs_b3488160bd206c09ce676bc441b5de6a",
        "interpretation_Tm_abs_bc0ae3740b8cfb7a7b7143f61a432dbc",
        "interpretation_Tm_abs_c383c10040deb921f8edacb536247c52",
        "interpretation_Tm_abs_ccf3d19b470b18b9c4deddd46df7ed66",
        "interpretation_Tm_abs_db8cd405d3f0871788b1d0edf4fda3fa",
        "interpretation_Tm_abs_efab849ed2b09d0ecb6a8d3f4d35f6d2",
        "interpretation_Tm_abs_f5770e15f23008f76908f7a623d8cb34",
        "interpretation_Tm_abs_fa65ac303f30fcb41df8f1fc6e9818e3",
        "l_and-interp", "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Rust_primitives.Integers.mk_int_v_lemma",
        "lemma_Rust_primitives.Integers.pow2_values",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_Addition", "primitive_Prims.op_AmpAmp",
        "primitive_Prims.op_BarBar", "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Core.Ops.Index.Mkt_Index_f_Output",
        "proj_equation_Core.Ops.Index.Mkt_Index_f_index",
        "proj_equation_Core.Ops.Index.Mkt_Index_in_range",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_MlKemKeyPair_f_pk",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_MlKemKeyPair_f_sk",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_MlKemPrivateKey_f_value",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_MlKemPublicKey_f_value",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Core.Clone.Mkt_Clone_f_clone",
        "projection_inverse_Core.Convert.Mkt_From_f_from",
        "projection_inverse_Core.Convert.Mkt_Into_f_into",
        "projection_inverse_Core.Ops.Index.Mkt_Index_f_Output",
        "projection_inverse_Core.Ops.Index.Mkt_Index_f_index",
        "projection_inverse_Core.Ops.Index.Mkt_Index_in_range",
        "projection_inverse_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "projection_inverse_Core.Ops.Range.Mkt_Range_f_end",
        "projection_inverse_Core.Ops.Range.Mkt_Range_f_start",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_MlKemKeyPair_f_pk",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_MlKemKeyPair_f_sk",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_MlKemPrivateKey_f_value",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_MlKemPublicKey_f_value",
        "projection_inverse_Rust_primitives.Mkunsize_tc_unsize",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_83845a86f2550cdf941eeb1d9b59602b",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_c156ecc6eab05d1687a383ef171435eb",
        "refinement_interpretation_Tm_refine_d2b7a44d1c8ca8e58166045d25c3c829",
        "refinement_interpretation_Tm_refine_d8958f2388129bdac6873f4cda807036",
        "refinement_interpretation_Tm_refine_e44c15fb5d8160f1569ee39a0b3d9688",
        "token_correspondence_Core.Clone.f_clone",
        "token_correspondence_Core.Convert.f_from",
        "token_correspondence_Core.Convert.f_into",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__f_index",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__in_range",
        "token_correspondence_Core.Ops.Index.f_index",
        "token_correspondence_Core.Ops.Index.in_range",
        "token_correspondence_Core.Ops.op_String_Access",
        "token_correspondence_Rust_primitives.unsize",
        "typing_FStar.Int32.v", "typing_FStar.Seq.Base.length",
        "typing_Lib.IntTypes.v",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Libcrux.Kem.Kyber.Hash_functions.v_H",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.minint",
        "typing_Rust_primitives.Integers.range",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v", "typing_Spec.Kyber.v_G",
        "typing_Spec.Kyber.v_RANKED_BYTES_PER_RING_ELEMENT",
        "typing_Spec.Kyber.valid_params",
        "typing_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "typing_tok_Lib.IntTypes.PUB@tok", "typing_tok_Lib.IntTypes.S32@tok",
        "typing_tok_Lib.IntTypes.U32@tok", "typing_tok_Lib.IntTypes.U64@tok"
      ],
      0,
      "23e03913bbf91d4de7e3d825ec7282ac"
    ],
    [
      "Libcrux.Kem.Kyber.generate_keypair",
      3,
      0,
      1,
      [
        "@MaxFuel_assumption", "@MaxIFuel_assumption",
        "@fuel_correspondence_Prims.pow2.fuel_instrumented", "@query",
        "Rust_primitives_interpretation_Tm_arrow_0dc9533934fadb6b25c05502d946f2d2",
        "b2t_def", "bool_inversion", "bool_typing",
        "constructor_distinct_Lib.IntTypes.PUB",
        "constructor_distinct_Lib.IntTypes.S16",
        "constructor_distinct_Lib.IntTypes.S32",
        "constructor_distinct_Lib.IntTypes.S8",
        "constructor_distinct_Lib.IntTypes.U1",
        "constructor_distinct_Lib.IntTypes.U16",
        "constructor_distinct_Lib.IntTypes.U32",
        "constructor_distinct_Lib.IntTypes.U64",
        "constructor_distinct_Lib.IntTypes.U8",
        "equality_tok_Lib.IntTypes.PUB@tok",
        "equality_tok_Lib.IntTypes.S32@tok",
        "equality_tok_Lib.IntTypes.U32@tok",
        "equality_tok_Lib.IntTypes.U64@tok",
        "equality_tok_Lib.IntTypes.U8@tok", "equation_Core.Clone.clone_all",
        "equation_Core.Clone.f_clone", "equation_Core.Convert.f_from",
        "equation_Core.Convert.f_into",
        "equation_Core.Convert.into_from_from",
        "equation_Core.Ops.Index.f_index",
        "equation_Core.Ops.Index.in_range",
        "equation_Core.Ops.Range.impl_index_range_from_slice",
        "equation_Core.Ops.Range.impl_index_range_slice",
        "equation_Core.Ops.Range.impl_range_from_index_array",
        "equation_Core.Ops.Range.impl_range_index_array",
        "equation_Core.Ops.op_String_Access", "equation_FStar.Int.fits",
        "equation_FStar.Int.int_t", "equation_FStar.Int.max_int",
        "equation_FStar.Int.min_int", "equation_FStar.Int.size",
        "equation_Lib.IntTypes.bits", "equation_Lib.IntTypes.byte_t",
        "equation_Lib.IntTypes.int_t", "equation_Lib.IntTypes.pub_int_t",
        "equation_Lib.IntTypes.pub_int_v", "equation_Lib.IntTypes.v",
        "equation_Libcrux.Kem.Kyber.Constants.v_CPA_PKE_KEY_GENERATION_SEED_SIZE",
        "equation_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "equation_Libcrux.Kem.Kyber.Types.impl_15",
        "equation_Libcrux.Kem.Kyber.Types.impl_9",
        "equation_Libcrux.Kem.Kyber.Types.impl__from", "equation_Prims.nat",
        "equation_Rust_primitives.Arrays.length",
        "equation_Rust_primitives.Arrays.split",
        "equation_Rust_primitives.Arrays.t_Array",
        "equation_Rust_primitives.Arrays.t_Slice",
        "equation_Rust_primitives.Integers.bits",
        "equation_Rust_primitives.Integers.i32",
        "equation_Rust_primitives.Integers.int_t",
        "equation_Rust_primitives.Integers.inttype",
        "equation_Rust_primitives.Integers.lt",
        "equation_Rust_primitives.Integers.maxint",
        "equation_Rust_primitives.Integers.minint",
        "equation_Rust_primitives.Integers.range",
        "equation_Rust_primitives.Integers.range_t",
        "equation_Rust_primitives.Integers.sub",
        "equation_Rust_primitives.Integers.sz",
        "equation_Rust_primitives.Integers.u8",
        "equation_Rust_primitives.Integers.unsigned",
        "equation_Rust_primitives.Integers.usize",
        "equation_Rust_primitives.Integers.v",
        "equation_Rust_primitives.array_to_slice_unsize",
        "equation_Rust_primitives.unsize",
        "equation_Spec.Kyber.ind_cca_generate_keypair",
        "equation_Spec.Kyber.params",
        "equation_Spec.Kyber.t_KyberPrivateKey",
        "equation_Spec.Kyber.t_KyberPublicKey",
        "equation_Spec.Kyber.v_CPA_PKE_KEY_GENERATION_SEED_SIZE",
        "equation_Spec.Kyber.v_CPA_PKE_SECRET_KEY_SIZE",
        "equation_Spec.Kyber.v_H_DIGEST_SIZE",
        "equation_Spec.Kyber.v_SHARED_SECRET_SIZE",
        "equation_Spec.Kyber.valid_params",
        "fuel_guarded_inversion_Spec.Kyber.params_",
        "function_token_typing_Lib.IntTypes.byte_t",
        "interpretation_Tm_abs_0956da15530cc0f64a16a4548bf6da82",
        "interpretation_Tm_abs_0cb90ffdaac009e5428b856a53fc2c98",
        "interpretation_Tm_abs_34b58233e1255b6eba3ce7c341357779",
        "interpretation_Tm_abs_3fed82ae903d42e820576b470eb7bc5b",
        "interpretation_Tm_abs_4bb6412701dfeac9ce6df5500b93361d",
        "interpretation_Tm_abs_572e0e093c6cc78cd0d8e5493e04bc44",
        "interpretation_Tm_abs_65ca3503e4f90241c7f6a4464be9e9ad",
        "interpretation_Tm_abs_6cab4c958b14168c478c0b7bfda6a19a",
        "interpretation_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "interpretation_Tm_abs_99a4114d073ad5d8baa4a916e7f78dd4",
        "interpretation_Tm_abs_a5c83a391084b3d9146ba51c53498493",
        "interpretation_Tm_abs_b3488160bd206c09ce676bc441b5de6a",
        "interpretation_Tm_abs_bc0ae3740b8cfb7a7b7143f61a432dbc",
        "interpretation_Tm_abs_c383c10040deb921f8edacb536247c52",
        "interpretation_Tm_abs_cb14670c07acc28b02280bd91ed2f358",
        "interpretation_Tm_abs_db8cd405d3f0871788b1d0edf4fda3fa",
        "interpretation_Tm_abs_efab849ed2b09d0ecb6a8d3f4d35f6d2",
        "interpretation_Tm_abs_f5770e15f23008f76908f7a623d8cb34",
        "interpretation_Tm_abs_fa65ac303f30fcb41df8f1fc6e9818e3",
        "l_and-interp", "lemma_FStar.Seq.Base.lemma_len_slice",
        "lemma_Rust_primitives.Integers.mk_int_v_lemma",
        "lemma_Rust_primitives.Integers.pow2_values",
        "lemma_Rust_primitives.Integers.v_mk_int_lemma",
        "primitive_Prims.op_AmpAmp", "primitive_Prims.op_BarBar",
        "primitive_Prims.op_Equality",
        "primitive_Prims.op_GreaterThanOrEqual",
        "primitive_Prims.op_LessThan", "primitive_Prims.op_LessThanOrEqual",
        "primitive_Prims.op_Subtraction",
        "proj_equation_Core.Ops.Index.Mkt_Index_f_Output",
        "proj_equation_Core.Ops.Index.Mkt_Index_f_index",
        "proj_equation_Core.Ops.Index.Mkt_Index_in_range",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_KyberKeyPair_f_pk",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_KyberKeyPair_f_sk",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_KyberPrivateKey_f_value",
        "proj_equation_Libcrux.Kem.Kyber.Types.Mkt_KyberPublicKey_f_value",
        "projection_inverse_BoxBool_proj_0",
        "projection_inverse_BoxInt_proj_0",
        "projection_inverse_Core.Clone.Mkt_Clone_f_clone",
        "projection_inverse_Core.Convert.Mkt_From_f_from",
        "projection_inverse_Core.Convert.Mkt_Into_f_into",
        "projection_inverse_Core.Ops.Index.Mkt_Index_f_Output",
        "projection_inverse_Core.Ops.Index.Mkt_Index_f_index",
        "projection_inverse_Core.Ops.Index.Mkt_Index_in_range",
        "projection_inverse_Core.Ops.Range.Mkt_RangeFrom_f_start",
        "projection_inverse_Core.Ops.Range.Mkt_Range_f_end",
        "projection_inverse_Core.Ops.Range.Mkt_Range_f_start",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__1",
        "projection_inverse_FStar.Pervasives.Native.Mktuple2__2",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_KyberKeyPair_f_pk",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_KyberKeyPair_f_sk",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_KyberPrivateKey_f_value",
        "projection_inverse_Libcrux.Kem.Kyber.Types.Mkt_KyberPublicKey_f_value",
        "projection_inverse_Rust_primitives.Mkunsize_tc_unsize",
        "refinement_interpretation_Tm_refine_53d7089a905511e9e713c7dbc2f68178",
        "refinement_interpretation_Tm_refine_542f9d4f129664613f2483a6c88bc7c2",
        "refinement_interpretation_Tm_refine_81407705a0828c2c1b1976675443f647",
        "refinement_interpretation_Tm_refine_a6d4eccfb2603ce5e66d6162c32df2b0",
        "refinement_interpretation_Tm_refine_bacb80e693f1faab8ffabcbb77914bec",
        "refinement_interpretation_Tm_refine_c156ecc6eab05d1687a383ef171435eb",
        "refinement_interpretation_Tm_refine_d2b7a44d1c8ca8e58166045d25c3c829",
        "refinement_interpretation_Tm_refine_e44c15fb5d8160f1569ee39a0b3d9688",
        "token_correspondence_Core.Clone.f_clone",
        "token_correspondence_Core.Convert.f_from",
        "token_correspondence_Core.Convert.f_into",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__f_index",
        "token_correspondence_Core.Ops.Index.__proj__Mkt_Index__item__in_range",
        "token_correspondence_Core.Ops.Index.f_index",
        "token_correspondence_Core.Ops.Index.in_range",
        "token_correspondence_Core.Ops.op_String_Access",
        "token_correspondence_Rust_primitives.unsize",
        "typing_FStar.Int32.v", "typing_FStar.Seq.Base.length",
        "typing_Libcrux.Kem.Kyber.Constants.v_FIELD_MODULUS",
        "typing_Libcrux.Kem.Kyber.Hash_functions.v_H",
        "typing_Rust_primitives.Integers.bits",
        "typing_Rust_primitives.Integers.minint",
        "typing_Rust_primitives.Integers.unsigned",
        "typing_Rust_primitives.Integers.usize_inttype",
        "typing_Rust_primitives.Integers.v", "typing_Spec.Kyber.v_G",
        "typing_Spec.Kyber.valid_params",
        "typing_Tm_abs_94963984a705f03fe78dd8ccd37a8094",
        "typing_tok_Lib.IntTypes.S32@tok"
      ],
      0,
      "3ba64c4d26178817ebaba53aaa8161c7"
    ]
  ]
]