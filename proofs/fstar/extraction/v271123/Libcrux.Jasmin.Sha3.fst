module Libcrux.Jasmin.Sha3
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let sha3_256_ (input: t_Slice u8) : FStar.HyperStack.ST.St (t_Array u8 (sz 32)) =
  let digest:t_Array u8 (sz 32) = Rust_primitives.Hax.repeat 0uy (sz 32) in
  let r:i32 =
    if Libcrux_platform.simd256_support
    then
      Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed.\n"
        "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Pointer {cast = Types.Unsize;\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Borrow {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"13\";\n                                    owner =\n                                    { Types.index = (0, 1626);\n                                      krate = \"libcrux\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"jasmin\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"sha3\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"sha3_256\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"digest\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"30\"; line = \"14\" };\n                                lo = { Types.col = \"24\"; line = \"14\" } };\n                              ty =\n                              (Types.Array\n                                 ((Types.Uint Types.U8),\n                                  { Types.attributes = [];\n                                    contents =\n                                    (Types.Literal\n                                       (Types.Int\n                                          (Types.Uint (\"32\", Types.Usize))));\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) }))\n                              };\n                            borrow_kind =\n                            Types.Mut {allow_two_phase_borrow = true}};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                            hi = { Types.col = \"43\"; line = \"14\" };\n                            lo = { Types.col = \"24\"; line = \"14\" } };\n                          ty =\n                          (Types.Ref\n                             ({ Types.kind = Types.ReErased },\n                              (Types.Array\n                                 ((Types.Uint Types.U8),\n                                  { Types.attributes = [];\n                                    contents =\n                                    (Types.Literal\n                                       (Types.Int\n                                          (Types.Uint (\"32\", Types.Usize))));\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) })),\n                              true))\n                          }};\n                      hir_id = (Some (\"1626\", \"28\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"43\"; line = \"14\" };\n                        lo = { Types.col = \"24\"; line = \"14\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Slice (Types.Uint Types.U8)), true))\n                      }\n                     ];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                     hi = { Types.col = \"43\"; line = \"14\" };\n                     lo = { Types.col = \"31\"; line = \"14\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 11031); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"slice\");\n                            disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 0 };\n                           { Types.data = (Types.ValueNs \"as_mut_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                       hi = { Types.col = \"41\"; line = \"14\" };\n                       lo = { Types.col = \"31\"; line = \"14\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars =\n                          [(Types.Region\n                              (Types.BrNamed\n                                 ({ Types.index = (2, 54754); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"slice\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data =\n                                        (Types.ValueNs \"as_mut_ptr\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.LifetimeNs \"'_\");\n                                        disambiguator = 0 }\n                                      ]\n                                    },\n                                  \"'_\")))\n                            ];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Ref\n                                ({ Types.kind =\n                                   (Types.ReLateBound\n                                      (\"0\",\n                                       { Types.kind =\n                                         (Types.BrNamed\n                                            ({ Types.index = (2, 54754);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"slice\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs\n                                                      \"as_mut_ptr\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\"));\n                                         var = \"0\" }))\n                                   },\n                                 (Types.Slice (Types.Uint Types.U8)), true))\n                              ];\n                            output =\n                            (Types.RawPtr\n                               { Types.mutbl = true;\n                                 ty = (Types.Uint Types.U8) });\n                            unsafety = Types.Normal }\n                          })\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.U8))];\n                   impl = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars =\n                        [(Types.Region\n                            (Types.BrNamed\n                               ({ Types.index = (2, 54754); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"slice\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.ValueNs \"as_mut_ptr\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.LifetimeNs \"'_\");\n                                      disambiguator = 0 }\n                                    ]\n                                  },\n                                \"'_\")))\n                          ];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind =\n                                 (Types.ReLateBound\n                                    (\"0\",\n                                     { Types.kind =\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54754);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"as_mut_ptr\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\"));\n                                       var = \"0\" }))\n                                 },\n                               (Types.Slice (Types.Uint Types.U8)), true))\n                            ];\n                          output =\n                          (Types.RawPtr\n                             { Types.mutbl = true; ty = (Types.Uint Types.U8)\n                               });\n                          unsafety = Types.Normal }\n                        })};\n                 hir_id = (Some (\"1626\", \"26\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                   hi = { Types.col = \"43\"; line = \"14\" };\n                   lo = { Types.col = \"24\"; line = \"14\" } };\n                 ty =\n                 (Types.RawPtr\n                    { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.ValueTypeAscription {\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Cast {\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Call {\n                            args =\n                            [{ Types.attributes = [];\n                               contents =\n                               Types.Borrow {\n                                 arg =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.Deref {\n                                     arg =\n                                     { Types.attributes = [];\n                                       contents =\n                                       Types.VarRef {\n                                         id =\n                                         { Types.id =\n                                           { Types.local_id = \"2\";\n                                             owner =\n                                             { Types.index = (0, 1626);\n                                               krate = \"libcrux\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"jasmin\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"sha3\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"sha3_256\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               }\n                                             };\n                                           name = \"input\" }};\n                                       hir_id = None;\n                                       span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            (Types.LocalPath\n                                               \"src/jasmin/sha3.rs\"));\n                                         hi =\n                                         { Types.col = \"29\"; line = \"15\" };\n                                         lo =\n                                         { Types.col = \"24\"; line = \"15\" } };\n                                       ty =\n                                       (Types.Ref\n                                          ({ Types.kind = Types.ReErased },\n                                           (Types.Slice (Types.Uint Types.U8)),\n                                           false))\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                     hi = { Types.col = \"38\"; line = \"15\" };\n                                     lo = { Types.col = \"24\"; line = \"15\" } };\n                                   ty = (Types.Slice (Types.Uint Types.U8)) };\n                                 borrow_kind = Types.Shared};\n                               hir_id = (Some (\"1626\", \"33\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                 hi = { Types.col = \"38\"; line = \"15\" };\n                                 lo = { Types.col = \"24\"; line = \"15\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   (Types.Slice (Types.Uint Types.U8)), false))\n                               }\n                              ];\n                            fn_span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                              hi = { Types.col = \"38\"; line = \"15\" };\n                              lo = { Types.col = \"30\"; line = \"15\" } };\n                            from_hir_call = true;\n                            fun' =\n                            { Types.attributes = [];\n                              contents =\n                              Types.GlobalName {\n                                id =\n                                { Types.index = (2, 11030); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"slice\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.ValueNs \"as_ptr\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"36\"; line = \"15\" };\n                                lo = { Types.col = \"30\"; line = \"15\" } };\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54753);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"as_ptr\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (2, 54753);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"slice\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"as_ptr\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          (Types.Slice (Types.Uint Types.U8)),\n                                          false))\n                                       ];\n                                     output =\n                                     (Types.RawPtr\n                                        { Types.mutbl = false;\n                                          ty = (Types.Uint Types.U8) });\n                                     unsafety = Types.Normal }\n                                   })\n                              };\n                            generic_args =\n                            [(Types.Type (Types.Uint Types.U8))];\n                            impl = None;\n                            ty =\n                            (Types.Arrow\n                               { Types.bound_vars =\n                                 [(Types.Region\n                                     (Types.BrNamed\n                                        ({ Types.index = (2, 54753);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"slice\");\n                                              disambiguator = 0 };\n                                             { Types.data = Types.Impl;\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.ValueNs \"as_ptr\");\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.LifetimeNs \"'_\");\n                                               disambiguator = 0 }\n                                             ]\n                                           },\n                                         \"'_\")))\n                                   ];\n                                 value =\n                                 { Types.abi = Types.Abi {todo = \"Rust\"};\n                                   c_variadic = false;\n                                   inputs =\n                                   [(Types.Ref\n                                       ({ Types.kind =\n                                          (Types.ReLateBound\n                                             (\"0\",\n                                              { Types.kind =\n                                                (Types.BrNamed\n                                                   ({ Types.index =\n                                                      (2, 54753);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"slice\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          Types.Impl;\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.ValueNs\n                                                             \"as_ptr\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.LifetimeNs\n                                                             \"'_\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    \"'_\"));\n                                                var = \"0\" }))\n                                          },\n                                        (Types.Slice (Types.Uint Types.U8)),\n                                        false))\n                                     ];\n                                   output =\n                                   (Types.RawPtr\n                                      { Types.mutbl = false;\n                                        ty = (Types.Uint Types.U8) });\n                                   unsafety = Types.Normal }\n                                 })};\n                          hir_id = (Some (\"1626\", \"31\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                            hi = { Types.col = \"38\"; line = \"15\" };\n                            lo = { Types.col = \"24\"; line = \"15\" } };\n                          ty =\n                          (Types.RawPtr\n                             { Types.mutbl = false;\n                               ty = (Types.Uint Types.U8) })\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"43\"; line = \"15\" };\n                        lo = { Types.col = \"24\"; line = \"15\" } };\n                      ty =\n                      (Types.RawPtr\n                         { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                      };\n                    user_ty =\n                    (Some { Types.max_universe = \"0\";\n                            value = (Types.Todo \"Ty(^0)\");\n                            variables = [(Types.Ty (Types.General \"0\"))] })};\n                  hir_id = (Some (\"1626\", \"30\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                    hi = { Types.col = \"43\"; line = \"15\" };\n                    lo = { Types.col = \"24\"; line = \"15\" } };\n                  ty =\n                  (Types.RawPtr\n                     { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                  };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Call {\n                         args =\n                         [{ Types.attributes = [];\n                            contents =\n                            Types.Call {\n                              args =\n                              [{ Types.attributes = [];\n                                 contents =\n                                 Types.Borrow {\n                                   arg =\n                                   { Types.attributes = [];\n                                     contents =\n                                     Types.Deref {\n                                       arg =\n                                       { Types.attributes = [];\n                                         contents =\n                                         Types.VarRef {\n                                           id =\n                                           { Types.id =\n                                             { Types.local_id = \"2\";\n                                               owner =\n                                               { Types.index = (0, 1626);\n                                                 krate = \"libcrux\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"jasmin\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"sha3\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.ValueNs\n                                                        \"sha3_256\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 }\n                                               };\n                                             name = \"input\" }};\n                                         hir_id = None;\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"src/jasmin/sha3.rs\"));\n                                           hi =\n                                           { Types.col = \"29\"; line = \"16\" };\n                                           lo =\n                                           { Types.col = \"24\"; line = \"16\" }\n                                           };\n                                         ty =\n                                         (Types.Ref\n                                            ({ Types.kind = Types.ReErased },\n                                             (Types.Slice\n                                                (Types.Uint Types.U8)),\n                                             false))\n                                         }};\n                                     hir_id = None;\n                                     span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          (Types.LocalPath\n                                             \"src/jasmin/sha3.rs\"));\n                                       hi = { Types.col = \"35\"; line = \"16\" };\n                                       lo = { Types.col = \"24\"; line = \"16\" }\n                                       };\n                                     ty = (Types.Slice (Types.Uint Types.U8))\n                                     };\n                                   borrow_kind = Types.Shared};\n                                 hir_id = (Some (\"1626\", \"42\"));\n                                 span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                   hi = { Types.col = \"35\"; line = \"16\" };\n                                   lo = { Types.col = \"24\"; line = \"16\" } };\n                                 ty =\n                                 (Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     (Types.Slice (Types.Uint Types.U8)),\n                                     false))\n                                 }\n                                ];\n                              fn_span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"35\"; line = \"16\" };\n                                lo = { Types.col = \"30\"; line = \"16\" } };\n                              from_hir_call = true;\n                              fun' =\n                              { Types.attributes = [];\n                                contents =\n                                Types.GlobalName {\n                                  id =\n                                  { Types.index = (2, 10980); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"slice\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.ValueNs \"len\");\n                                        disambiguator = 0 }\n                                      ]\n                                    }};\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                  hi = { Types.col = \"33\"; line = \"16\" };\n                                  lo = { Types.col = \"30\"; line = \"16\" } };\n                                ty =\n                                (Types.Arrow\n                                   { Types.bound_vars =\n                                     [(Types.Region\n                                         (Types.BrNamed\n                                            ({ Types.index = (2, 54731);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"slice\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"len\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\")))\n                                       ];\n                                     value =\n                                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                                       c_variadic = false;\n                                       inputs =\n                                       [(Types.Ref\n                                           ({ Types.kind =\n                                              (Types.ReLateBound\n                                                 (\"0\",\n                                                  { Types.kind =\n                                                    (Types.BrNamed\n                                                       ({ Types.index =\n                                                          (2, 54731);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"slice\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"len\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.LifetimeNs\n                                                                 \"'_\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          },\n                                                        \"'_\"));\n                                                    var = \"0\" }))\n                                              },\n                                            (Types.Slice\n                                               (Types.Uint Types.U8)),\n                                            false))\n                                         ];\n                                       output = (Types.Uint Types.Usize);\n                                       unsafety = Types.Normal }\n                                     })\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.U8))];\n                              impl = None;\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54731);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"len\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (2, 54731);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"slice\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"len\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          (Types.Slice (Types.Uint Types.U8)),\n                                          false))\n                                       ];\n                                     output = (Types.Uint Types.Usize);\n                                     unsafety = Types.Normal }\n                                   })};\n                            hir_id = (Some (\"1626\", \"40\"));\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                              hi = { Types.col = \"35\"; line = \"16\" };\n                              lo = { Types.col = \"24\"; line = \"16\" } };\n                            ty = (Types.Uint Types.Usize) }\n                           ];\n                         fn_span =\n                         { Types.filename =\n                           (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                           hi = { Types.col = \"46\"; line = \"16\" };\n                           lo = { Types.col = \"36\"; line = \"16\" } };\n                         from_hir_call = true;\n                         fun' =\n                         { Types.attributes = [];\n                           contents =\n                           Types.GlobalName {\n                             id =\n                             { Types.index = (2, 2519); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"convert\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"TryInto\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.ValueNs \"try_into\");\n                                   disambiguator = 0 }\n                                 ]\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                             hi = { Types.col = \"44\"; line = \"16\" };\n                             lo = { Types.col = \"36\"; line = \"16\" } };\n                           ty =\n                           (Types.Arrow\n                              { Types.bound_vars = [];\n                                value =\n                                { Types.abi = Types.Abi {todo = \"Rust\"};\n                                  c_variadic = false;\n                                  inputs = [(Types.Uint Types.Usize)];\n                                  output =\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (2, 41506);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"result\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"Result\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type (Types.Uint Types.U64));\n                                      (Types.Type\n                                         (Types.Alias\n                                            (Types.Projection,\n                                             { Types.def_id =\n                                               { Types.index = (2, 2518);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"convert\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"TryInto\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Error\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               substs =\n                                               [(Types.Type\n                                                   (Types.Uint Types.Usize));\n                                                 (Types.Type\n                                                    (Types.Uint Types.U64))\n                                                 ];\n                                               trait_def_id =\n                                               (Some ({ Types.index =\n                                                        (2, 2516);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"convert\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"TryInto\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      { Types.args =\n                                                        [{ Types.args = [];\n                                                           impl =\n                                                           Types.Builtin {\n                                                             trait =\n                                                             { Types.def_id =\n                                                               { Types.index =\n                                                                 (2, 2689);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   (Types.Uint\n                                                                    Types.Usize))\n                                                                 ]\n                                                               }}\n                                                           };\n                                                          { Types.args = [];\n                                                            impl =\n                                                            Types.Builtin {\n                                                              trait =\n                                                              { Types.def_id =\n                                                                { Types.index =\n                                                                  (2, 2689);\n                                                                  krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.U64))\n                                                                  ]\n                                                                }}\n                                                            };\n                                                          { Types.args = [];\n                                                            impl =\n                                                            Types.Concrete {\n                                                              generics = [];\n                                                              id =\n                                                              { Types.index =\n                                                                (2, 31423);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"convert\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"ptr_try_from_impls\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 }\n                                                                  ]\n                                                                }}\n                                                            }\n                                                          ];\n                                                        impl =\n                                                        Types.Concrete {\n                                                          generics =\n                                                          [(Types.Type\n                                                              (Types.Uint\n                                                                 Types.Usize));\n                                                            (Types.Type\n                                                               (Types.Uint\n                                                                  Types.U64))\n                                                            ];\n                                                          id =\n                                                          { Types.index =\n                                                            (2, 2546);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"convert\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                Types.Impl;\n                                                                disambiguator =\n                                                                6 }\n                                                              ]\n                                                            }}\n                                                        }))\n                                               })))\n                                      ]};\n                                  unsafety = Types.Normal }\n                                })\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.Usize));\n                           (Types.Type (Types.Uint Types.U64))];\n                         impl =\n                         (Some { Types.args =\n                                 [{ Types.args = [];\n                                    impl =\n                                    Types.Builtin {\n                                      trait =\n                                      { Types.def_id =\n                                        { Types.index = (2, 2689);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"marker\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Sized\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type (Types.Uint Types.Usize))\n                                          ]\n                                        }}\n                                    };\n                                   { Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 2689);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type (Types.Uint Types.U64))\n                                           ]\n                                         }}\n                                     };\n                                   { Types.args = [];\n                                     impl =\n                                     Types.Concrete {generics = [];\n                                       id =\n                                       { Types.index = (2, 31423);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"convert\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"num\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs\n                                                \"ptr_try_from_impls\");\n                                             disambiguator = 0 };\n                                           { Types.data = Types.Impl;\n                                             disambiguator = 3 }\n                                           ]\n                                         }}\n                                     }\n                                   ];\n                                 impl =\n                                 Types.Concrete {\n                                   generics =\n                                   [(Types.Type (Types.Uint Types.Usize));\n                                     (Types.Type (Types.Uint Types.U64))];\n                                   id =\n                                   { Types.index = (2, 2546); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"convert\");\n                                        disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 6 }\n                                       ]\n                                     }}\n                                 });\n                         ty =\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs = [(Types.Uint Types.Usize)];\n                                output =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 41506); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"result\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Result\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type (Types.Uint Types.U64));\n                                    (Types.Type\n                                       (Types.Alias\n                                          (Types.Projection,\n                                           { Types.def_id =\n                                             { Types.index = (2, 2518);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"convert\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"TryInto\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Error\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             substs =\n                                             [(Types.Type\n                                                 (Types.Uint Types.Usize));\n                                               (Types.Type\n                                                  (Types.Uint Types.U64))\n                                               ];\n                                             trait_def_id =\n                                             (Some ({ Types.index = (2, 2516);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"convert\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"TryInto\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    { Types.args =\n                                                      [{ Types.args = [];\n                                                         impl =\n                                                         Types.Builtin {\n                                                           trait =\n                                                           { Types.def_id =\n                                                             { Types.index =\n                                                               (2, 2689);\n                                                               krate = \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"marker\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"Sized\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 (Types.Uint\n                                                                    Types.Usize))\n                                                               ]\n                                                             }}\n                                                         };\n                                                        { Types.args = [];\n                                                          impl =\n                                                          Types.Builtin {\n                                                            trait =\n                                                            { Types.def_id =\n                                                              { Types.index =\n                                                                (2, 2689);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"marker\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              [(Types.Type\n                                                                  (Types.Uint\n                                                                    Types.U64))\n                                                                ]\n                                                              }}\n                                                          };\n                                                        { Types.args = [];\n                                                          impl =\n                                                          Types.Concrete {\n                                                            generics = [];\n                                                            id =\n                                                            { Types.index =\n                                                              (2, 31423);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"convert\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"num\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"ptr_try_from_impls\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  Types.Impl;\n                                                                  disambiguator =\n                                                                  3 }\n                                                                ]\n                                                              }}\n                                                          }\n                                                        ];\n                                                      impl =\n                                                      Types.Concrete {\n                                                        generics =\n                                                        [(Types.Type\n                                                            (Types.Uint\n                                                               Types.Usize));\n                                                          (Types.Type\n                                                             (Types.Uint\n                                                                Types.U64))\n                                                          ];\n                                                        id =\n                                                        { Types.index =\n                                                          (2, 2546);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"convert\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              6 }\n                                                            ]\n                                                          }}\n                                                      }))\n                                             })))\n                                    ]};\n                                unsafety = Types.Normal }\n                              })};\n                       hir_id = (Some (\"1626\", \"38\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                         hi = { Types.col = \"46\"; line = \"16\" };\n                         lo = { Types.col = \"24\"; line = \"16\" } };\n                       ty =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 41506); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"result\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Result\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.U64));\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (2, 21945); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"num\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"error\");\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.TypeNs \"TryFromIntError\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []})\n                           ]}\n                       }\n                      ];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                      hi = { Types.col = \"55\"; line = \"16\" };\n                      lo = { Types.col = \"47\"; line = \"16\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 8514); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"result\");\n                             disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"unwrap\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"53\"; line = \"16\" };\n                        lo = { Types.col = \"47\"; line = \"16\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [Types.Adt {\n                                def_id =\n                                { Types.index = (2, 41506); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"result\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Result\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type (Types.Uint Types.U64));\n                                  (Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (2, 21945);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data = (Types.TypeNs \"num\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"error\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"TryFromIntError\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []})\n                                  ]}\n                               ];\n                             output = (Types.Uint Types.U64);\n                             unsafety = Types.Normal }\n                           })\n                      };\n                    generic_args =\n                    [(Types.Type (Types.Uint Types.U64));\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 21945); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"num\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"error\");\n                                 disambiguator = 0 };\n                               { Types.data =\n                                 (Types.TypeNs \"TryFromIntError\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []})\n                      ];\n                    impl = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [Types.Adt {\n                              def_id =\n                              { Types.index = (2, 41506); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"result\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Result\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.U64));\n                                (Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 21945);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"num\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"error\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"TryFromIntError\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []})\n                                ]}\n                             ];\n                           output = (Types.Uint Types.U64);\n                           unsafety = Types.Normal }\n                         })};\n                  hir_id = (Some (\"1626\", \"36\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                    hi = { Types.col = \"55\"; line = \"16\" };\n                    lo = { Types.col = \"24\"; line = \"16\" } };\n                  ty = (Types.Uint Types.U64) }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                hi = { Types.col = \"21\"; line = \"17\" };\n                lo = { Types.col = \"20\"; line = \"13\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (21, 106); krate = \"libjade_sys\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"bindings\");\n                       disambiguator = 0 };\n                      { Types.data = Types.ForeignMod; disambiguator = 17 };\n                      { Types.data =\n                        (Types.ValueNs \"jade_hash_sha3_256_amd64_avx2\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                  hi = { Types.col = \"46\"; line = \"49\" };\n                  lo = { Types.col = \"4\"; line = \"49\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                         (Types.RawPtr\n                            { Types.mutbl = true; ty = (Types.Uint Types.U8)\n                              });\n                         (Types.Uint Types.U64)];\n                       output = (Types.Int Types.I32);\n                       unsafety = Types.Unsafe }\n                     })\n                };\n              generic_args = []; impl = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                       (Types.RawPtr\n                          { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                       (Types.Uint Types.U64)];\n                     output = (Types.Int Types.I32); unsafety = Types.Unsafe\n                     }\n                   })};\n            hir_id = (Some (\"1626\", \"22\"));\n            span =\n            { Types.filename =\n              (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n              hi = { Types.col = \"21\"; line = \"17\" };\n              lo = { Types.col = \"20\"; line = \"13\" } };\n            ty = (Types.Int Types.I32) });\n    opt_destruction_scope = None;\n    region_scope = { Types.data = Types.Node; id = \"44\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename = (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n      hi = { Types.col = \"17\"; line = \"18\" };\n      lo = { Types.col = \"16\"; line = \"12\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"1626\", \"21\"));\n  span =\n  { Types.filename = (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n    hi = { Types.col = \"17\"; line = \"18\" };\n    lo = { Types.col = \"16\"; line = \"12\" } };\n  ty = (Types.Int Types.I32) }"

    else
      Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed.\n"
        "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Pointer {cast = Types.Unsize;\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Borrow {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"13\";\n                                    owner =\n                                    { Types.index = (0, 1626);\n                                      krate = \"libcrux\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"jasmin\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"sha3\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"sha3_256\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"digest\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"30\"; line = \"22\" };\n                                lo = { Types.col = \"24\"; line = \"22\" } };\n                              ty =\n                              (Types.Array\n                                 ((Types.Uint Types.U8),\n                                  { Types.attributes = [];\n                                    contents =\n                                    (Types.Literal\n                                       (Types.Int\n                                          (Types.Uint (\"32\", Types.Usize))));\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) }))\n                              };\n                            borrow_kind =\n                            Types.Mut {allow_two_phase_borrow = true}};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                            hi = { Types.col = \"43\"; line = \"22\" };\n                            lo = { Types.col = \"24\"; line = \"22\" } };\n                          ty =\n                          (Types.Ref\n                             ({ Types.kind = Types.ReErased },\n                              (Types.Array\n                                 ((Types.Uint Types.U8),\n                                  { Types.attributes = [];\n                                    contents =\n                                    (Types.Literal\n                                       (Types.Int\n                                          (Types.Uint (\"32\", Types.Usize))));\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) })),\n                              true))\n                          }};\n                      hir_id = (Some (\"1626\", \"55\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"43\"; line = \"22\" };\n                        lo = { Types.col = \"24\"; line = \"22\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Slice (Types.Uint Types.U8)), true))\n                      }\n                     ];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                     hi = { Types.col = \"43\"; line = \"22\" };\n                     lo = { Types.col = \"31\"; line = \"22\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 11031); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"slice\");\n                            disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 0 };\n                           { Types.data = (Types.ValueNs \"as_mut_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                       hi = { Types.col = \"41\"; line = \"22\" };\n                       lo = { Types.col = \"31\"; line = \"22\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars =\n                          [(Types.Region\n                              (Types.BrNamed\n                                 ({ Types.index = (2, 54754); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"slice\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data =\n                                        (Types.ValueNs \"as_mut_ptr\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.LifetimeNs \"'_\");\n                                        disambiguator = 0 }\n                                      ]\n                                    },\n                                  \"'_\")))\n                            ];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Ref\n                                ({ Types.kind =\n                                   (Types.ReLateBound\n                                      (\"0\",\n                                       { Types.kind =\n                                         (Types.BrNamed\n                                            ({ Types.index = (2, 54754);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"slice\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs\n                                                      \"as_mut_ptr\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\"));\n                                         var = \"0\" }))\n                                   },\n                                 (Types.Slice (Types.Uint Types.U8)), true))\n                              ];\n                            output =\n                            (Types.RawPtr\n                               { Types.mutbl = true;\n                                 ty = (Types.Uint Types.U8) });\n                            unsafety = Types.Normal }\n                          })\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.U8))];\n                   impl = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars =\n                        [(Types.Region\n                            (Types.BrNamed\n                               ({ Types.index = (2, 54754); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"slice\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.ValueNs \"as_mut_ptr\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.LifetimeNs \"'_\");\n                                      disambiguator = 0 }\n                                    ]\n                                  },\n                                \"'_\")))\n                          ];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind =\n                                 (Types.ReLateBound\n                                    (\"0\",\n                                     { Types.kind =\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54754);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"as_mut_ptr\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\"));\n                                       var = \"0\" }))\n                                 },\n                               (Types.Slice (Types.Uint Types.U8)), true))\n                            ];\n                          output =\n                          (Types.RawPtr\n                             { Types.mutbl = true; ty = (Types.Uint Types.U8)\n                               });\n                          unsafety = Types.Normal }\n                        })};\n                 hir_id = (Some (\"1626\", \"53\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                   hi = { Types.col = \"43\"; line = \"22\" };\n                   lo = { Types.col = \"24\"; line = \"22\" } };\n                 ty =\n                 (Types.RawPtr\n                    { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.ValueTypeAscription {\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Cast {\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Call {\n                            args =\n                            [{ Types.attributes = [];\n                               contents =\n                               Types.Borrow {\n                                 arg =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.Deref {\n                                     arg =\n                                     { Types.attributes = [];\n                                       contents =\n                                       Types.VarRef {\n                                         id =\n                                         { Types.id =\n                                           { Types.local_id = \"2\";\n                                             owner =\n                                             { Types.index = (0, 1626);\n                                               krate = \"libcrux\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"jasmin\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"sha3\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"sha3_256\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               }\n                                             };\n                                           name = \"input\" }};\n                                       hir_id = None;\n                                       span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            (Types.LocalPath\n                                               \"src/jasmin/sha3.rs\"));\n                                         hi =\n                                         { Types.col = \"29\"; line = \"23\" };\n                                         lo =\n                                         { Types.col = \"24\"; line = \"23\" } };\n                                       ty =\n                                       (Types.Ref\n                                          ({ Types.kind = Types.ReErased },\n                                           (Types.Slice (Types.Uint Types.U8)),\n                                           false))\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                     hi = { Types.col = \"38\"; line = \"23\" };\n                                     lo = { Types.col = \"24\"; line = \"23\" } };\n                                   ty = (Types.Slice (Types.Uint Types.U8)) };\n                                 borrow_kind = Types.Shared};\n                               hir_id = (Some (\"1626\", \"60\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                 hi = { Types.col = \"38\"; line = \"23\" };\n                                 lo = { Types.col = \"24\"; line = \"23\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   (Types.Slice (Types.Uint Types.U8)), false))\n                               }\n                              ];\n                            fn_span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                              hi = { Types.col = \"38\"; line = \"23\" };\n                              lo = { Types.col = \"30\"; line = \"23\" } };\n                            from_hir_call = true;\n                            fun' =\n                            { Types.attributes = [];\n                              contents =\n                              Types.GlobalName {\n                                id =\n                                { Types.index = (2, 11030); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"slice\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.ValueNs \"as_ptr\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"36\"; line = \"23\" };\n                                lo = { Types.col = \"30\"; line = \"23\" } };\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54753);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"as_ptr\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (2, 54753);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"slice\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"as_ptr\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          (Types.Slice (Types.Uint Types.U8)),\n                                          false))\n                                       ];\n                                     output =\n                                     (Types.RawPtr\n                                        { Types.mutbl = false;\n                                          ty = (Types.Uint Types.U8) });\n                                     unsafety = Types.Normal }\n                                   })\n                              };\n                            generic_args =\n                            [(Types.Type (Types.Uint Types.U8))];\n                            impl = None;\n                            ty =\n                            (Types.Arrow\n                               { Types.bound_vars =\n                                 [(Types.Region\n                                     (Types.BrNamed\n                                        ({ Types.index = (2, 54753);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"slice\");\n                                              disambiguator = 0 };\n                                             { Types.data = Types.Impl;\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.ValueNs \"as_ptr\");\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.LifetimeNs \"'_\");\n                                               disambiguator = 0 }\n                                             ]\n                                           },\n                                         \"'_\")))\n                                   ];\n                                 value =\n                                 { Types.abi = Types.Abi {todo = \"Rust\"};\n                                   c_variadic = false;\n                                   inputs =\n                                   [(Types.Ref\n                                       ({ Types.kind =\n                                          (Types.ReLateBound\n                                             (\"0\",\n                                              { Types.kind =\n                                                (Types.BrNamed\n                                                   ({ Types.index =\n                                                      (2, 54753);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"slice\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          Types.Impl;\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.ValueNs\n                                                             \"as_ptr\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.LifetimeNs\n                                                             \"'_\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    \"'_\"));\n                                                var = \"0\" }))\n                                          },\n                                        (Types.Slice (Types.Uint Types.U8)),\n                                        false))\n                                     ];\n                                   output =\n                                   (Types.RawPtr\n                                      { Types.mutbl = false;\n                                        ty = (Types.Uint Types.U8) });\n                                   unsafety = Types.Normal }\n                                 })};\n                          hir_id = (Some (\"1626\", \"58\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                            hi = { Types.col = \"38\"; line = \"23\" };\n                            lo = { Types.col = \"24\"; line = \"23\" } };\n                          ty =\n                          (Types.RawPtr\n                             { Types.mutbl = false;\n                               ty = (Types.Uint Types.U8) })\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"43\"; line = \"23\" };\n                        lo = { Types.col = \"24\"; line = \"23\" } };\n                      ty =\n                      (Types.RawPtr\n                         { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                      };\n                    user_ty =\n                    (Some { Types.max_universe = \"0\";\n                            value = (Types.Todo \"Ty(^0)\");\n                            variables = [(Types.Ty (Types.General \"0\"))] })};\n                  hir_id = (Some (\"1626\", \"57\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                    hi = { Types.col = \"43\"; line = \"23\" };\n                    lo = { Types.col = \"24\"; line = \"23\" } };\n                  ty =\n                  (Types.RawPtr\n                     { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                  };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Call {\n                         args =\n                         [{ Types.attributes = [];\n                            contents =\n                            Types.Call {\n                              args =\n                              [{ Types.attributes = [];\n                                 contents =\n                                 Types.Borrow {\n                                   arg =\n                                   { Types.attributes = [];\n                                     contents =\n                                     Types.Deref {\n                                       arg =\n                                       { Types.attributes = [];\n                                         contents =\n                                         Types.VarRef {\n                                           id =\n                                           { Types.id =\n                                             { Types.local_id = \"2\";\n                                               owner =\n                                               { Types.index = (0, 1626);\n                                                 krate = \"libcrux\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"jasmin\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"sha3\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.ValueNs\n                                                        \"sha3_256\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 }\n                                               };\n                                             name = \"input\" }};\n                                         hir_id = None;\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"src/jasmin/sha3.rs\"));\n                                           hi =\n                                           { Types.col = \"29\"; line = \"24\" };\n                                           lo =\n                                           { Types.col = \"24\"; line = \"24\" }\n                                           };\n                                         ty =\n                                         (Types.Ref\n                                            ({ Types.kind = Types.ReErased },\n                                             (Types.Slice\n                                                (Types.Uint Types.U8)),\n                                             false))\n                                         }};\n                                     hir_id = None;\n                                     span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          (Types.LocalPath\n                                             \"src/jasmin/sha3.rs\"));\n                                       hi = { Types.col = \"35\"; line = \"24\" };\n                                       lo = { Types.col = \"24\"; line = \"24\" }\n                                       };\n                                     ty = (Types.Slice (Types.Uint Types.U8))\n                                     };\n                                   borrow_kind = Types.Shared};\n                                 hir_id = (Some (\"1626\", \"69\"));\n                                 span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                   hi = { Types.col = \"35\"; line = \"24\" };\n                                   lo = { Types.col = \"24\"; line = \"24\" } };\n                                 ty =\n                                 (Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     (Types.Slice (Types.Uint Types.U8)),\n                                     false))\n                                 }\n                                ];\n                              fn_span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"35\"; line = \"24\" };\n                                lo = { Types.col = \"30\"; line = \"24\" } };\n                              from_hir_call = true;\n                              fun' =\n                              { Types.attributes = [];\n                                contents =\n                                Types.GlobalName {\n                                  id =\n                                  { Types.index = (2, 10980); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"slice\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.ValueNs \"len\");\n                                        disambiguator = 0 }\n                                      ]\n                                    }};\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                  hi = { Types.col = \"33\"; line = \"24\" };\n                                  lo = { Types.col = \"30\"; line = \"24\" } };\n                                ty =\n                                (Types.Arrow\n                                   { Types.bound_vars =\n                                     [(Types.Region\n                                         (Types.BrNamed\n                                            ({ Types.index = (2, 54731);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"slice\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"len\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\")))\n                                       ];\n                                     value =\n                                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                                       c_variadic = false;\n                                       inputs =\n                                       [(Types.Ref\n                                           ({ Types.kind =\n                                              (Types.ReLateBound\n                                                 (\"0\",\n                                                  { Types.kind =\n                                                    (Types.BrNamed\n                                                       ({ Types.index =\n                                                          (2, 54731);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"slice\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"len\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.LifetimeNs\n                                                                 \"'_\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          },\n                                                        \"'_\"));\n                                                    var = \"0\" }))\n                                              },\n                                            (Types.Slice\n                                               (Types.Uint Types.U8)),\n                                            false))\n                                         ];\n                                       output = (Types.Uint Types.Usize);\n                                       unsafety = Types.Normal }\n                                     })\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.U8))];\n                              impl = None;\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54731);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"len\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (2, 54731);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"slice\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"len\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          (Types.Slice (Types.Uint Types.U8)),\n                                          false))\n                                       ];\n                                     output = (Types.Uint Types.Usize);\n                                     unsafety = Types.Normal }\n                                   })};\n                            hir_id = (Some (\"1626\", \"67\"));\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                              hi = { Types.col = \"35\"; line = \"24\" };\n                              lo = { Types.col = \"24\"; line = \"24\" } };\n                            ty = (Types.Uint Types.Usize) }\n                           ];\n                         fn_span =\n                         { Types.filename =\n                           (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                           hi = { Types.col = \"46\"; line = \"24\" };\n                           lo = { Types.col = \"36\"; line = \"24\" } };\n                         from_hir_call = true;\n                         fun' =\n                         { Types.attributes = [];\n                           contents =\n                           Types.GlobalName {\n                             id =\n                             { Types.index = (2, 2519); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"convert\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"TryInto\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.ValueNs \"try_into\");\n                                   disambiguator = 0 }\n                                 ]\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                             hi = { Types.col = \"44\"; line = \"24\" };\n                             lo = { Types.col = \"36\"; line = \"24\" } };\n                           ty =\n                           (Types.Arrow\n                              { Types.bound_vars = [];\n                                value =\n                                { Types.abi = Types.Abi {todo = \"Rust\"};\n                                  c_variadic = false;\n                                  inputs = [(Types.Uint Types.Usize)];\n                                  output =\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (2, 41506);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"result\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"Result\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type (Types.Uint Types.U64));\n                                      (Types.Type\n                                         (Types.Alias\n                                            (Types.Projection,\n                                             { Types.def_id =\n                                               { Types.index = (2, 2518);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"convert\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"TryInto\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Error\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               substs =\n                                               [(Types.Type\n                                                   (Types.Uint Types.Usize));\n                                                 (Types.Type\n                                                    (Types.Uint Types.U64))\n                                                 ];\n                                               trait_def_id =\n                                               (Some ({ Types.index =\n                                                        (2, 2516);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"convert\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"TryInto\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      { Types.args =\n                                                        [{ Types.args = [];\n                                                           impl =\n                                                           Types.Builtin {\n                                                             trait =\n                                                             { Types.def_id =\n                                                               { Types.index =\n                                                                 (2, 2689);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   (Types.Uint\n                                                                    Types.Usize))\n                                                                 ]\n                                                               }}\n                                                           };\n                                                          { Types.args = [];\n                                                            impl =\n                                                            Types.Builtin {\n                                                              trait =\n                                                              { Types.def_id =\n                                                                { Types.index =\n                                                                  (2, 2689);\n                                                                  krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.U64))\n                                                                  ]\n                                                                }}\n                                                            };\n                                                          { Types.args = [];\n                                                            impl =\n                                                            Types.Concrete {\n                                                              generics = [];\n                                                              id =\n                                                              { Types.index =\n                                                                (2, 31423);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"convert\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"ptr_try_from_impls\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 }\n                                                                  ]\n                                                                }}\n                                                            }\n                                                          ];\n                                                        impl =\n                                                        Types.Concrete {\n                                                          generics =\n                                                          [(Types.Type\n                                                              (Types.Uint\n                                                                 Types.Usize));\n                                                            (Types.Type\n                                                               (Types.Uint\n                                                                  Types.U64))\n                                                            ];\n                                                          id =\n                                                          { Types.index =\n                                                            (2, 2546);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"convert\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                Types.Impl;\n                                                                disambiguator =\n                                                                6 }\n                                                              ]\n                                                            }}\n                                                        }))\n                                               })))\n                                      ]};\n                                  unsafety = Types.Normal }\n                                })\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.Usize));\n                           (Types.Type (Types.Uint Types.U64))];\n                         impl =\n                         (Some { Types.args =\n                                 [{ Types.args = [];\n                                    impl =\n                                    Types.Builtin {\n                                      trait =\n                                      { Types.def_id =\n                                        { Types.index = (2, 2689);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"marker\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Sized\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type (Types.Uint Types.Usize))\n                                          ]\n                                        }}\n                                    };\n                                   { Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 2689);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type (Types.Uint Types.U64))\n                                           ]\n                                         }}\n                                     };\n                                   { Types.args = [];\n                                     impl =\n                                     Types.Concrete {generics = [];\n                                       id =\n                                       { Types.index = (2, 31423);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"convert\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"num\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs\n                                                \"ptr_try_from_impls\");\n                                             disambiguator = 0 };\n                                           { Types.data = Types.Impl;\n                                             disambiguator = 3 }\n                                           ]\n                                         }}\n                                     }\n                                   ];\n                                 impl =\n                                 Types.Concrete {\n                                   generics =\n                                   [(Types.Type (Types.Uint Types.Usize));\n                                     (Types.Type (Types.Uint Types.U64))];\n                                   id =\n                                   { Types.index = (2, 2546); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"convert\");\n                                        disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 6 }\n                                       ]\n                                     }}\n                                 });\n                         ty =\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs = [(Types.Uint Types.Usize)];\n                                output =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 41506); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"result\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Result\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type (Types.Uint Types.U64));\n                                    (Types.Type\n                                       (Types.Alias\n                                          (Types.Projection,\n                                           { Types.def_id =\n                                             { Types.index = (2, 2518);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"convert\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"TryInto\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Error\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             substs =\n                                             [(Types.Type\n                                                 (Types.Uint Types.Usize));\n                                               (Types.Type\n                                                  (Types.Uint Types.U64))\n                                               ];\n                                             trait_def_id =\n                                             (Some ({ Types.index = (2, 2516);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"convert\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"TryInto\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    { Types.args =\n                                                      [{ Types.args = [];\n                                                         impl =\n                                                         Types.Builtin {\n                                                           trait =\n                                                           { Types.def_id =\n                                                             { Types.index =\n                                                               (2, 2689);\n                                                               krate = \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"marker\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"Sized\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 (Types.Uint\n                                                                    Types.Usize))\n                                                               ]\n                                                             }}\n                                                         };\n                                                        { Types.args = [];\n                                                          impl =\n                                                          Types.Builtin {\n                                                            trait =\n                                                            { Types.def_id =\n                                                              { Types.index =\n                                                                (2, 2689);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"marker\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              [(Types.Type\n                                                                  (Types.Uint\n                                                                    Types.U64))\n                                                                ]\n                                                              }}\n                                                          };\n                                                        { Types.args = [];\n                                                          impl =\n                                                          Types.Concrete {\n                                                            generics = [];\n                                                            id =\n                                                            { Types.index =\n                                                              (2, 31423);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"convert\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"num\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"ptr_try_from_impls\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  Types.Impl;\n                                                                  disambiguator =\n                                                                  3 }\n                                                                ]\n                                                              }}\n                                                          }\n                                                        ];\n                                                      impl =\n                                                      Types.Concrete {\n                                                        generics =\n                                                        [(Types.Type\n                                                            (Types.Uint\n                                                               Types.Usize));\n                                                          (Types.Type\n                                                             (Types.Uint\n                                                                Types.U64))\n                                                          ];\n                                                        id =\n                                                        { Types.index =\n                                                          (2, 2546);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"convert\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              6 }\n                                                            ]\n                                                          }}\n                                                      }))\n                                             })))\n                                    ]};\n                                unsafety = Types.Normal }\n                              })};\n                       hir_id = (Some (\"1626\", \"65\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                         hi = { Types.col = \"46\"; line = \"24\" };\n                         lo = { Types.col = \"24\"; line = \"24\" } };\n                       ty =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 41506); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"result\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Result\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.U64));\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (2, 21945); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"num\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"error\");\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.TypeNs \"TryFromIntError\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []})\n                           ]}\n                       }\n                      ];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                      hi = { Types.col = \"55\"; line = \"24\" };\n                      lo = { Types.col = \"47\"; line = \"24\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 8514); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"result\");\n                             disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"unwrap\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"53\"; line = \"24\" };\n                        lo = { Types.col = \"47\"; line = \"24\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [Types.Adt {\n                                def_id =\n                                { Types.index = (2, 41506); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"result\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Result\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type (Types.Uint Types.U64));\n                                  (Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (2, 21945);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data = (Types.TypeNs \"num\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"error\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"TryFromIntError\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []})\n                                  ]}\n                               ];\n                             output = (Types.Uint Types.U64);\n                             unsafety = Types.Normal }\n                           })\n                      };\n                    generic_args =\n                    [(Types.Type (Types.Uint Types.U64));\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 21945); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"num\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"error\");\n                                 disambiguator = 0 };\n                               { Types.data =\n                                 (Types.TypeNs \"TryFromIntError\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []})\n                      ];\n                    impl = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [Types.Adt {\n                              def_id =\n                              { Types.index = (2, 41506); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"result\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Result\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.U64));\n                                (Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 21945);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"num\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"error\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"TryFromIntError\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []})\n                                ]}\n                             ];\n                           output = (Types.Uint Types.U64);\n                           unsafety = Types.Normal }\n                         })};\n                  hir_id = (Some (\"1626\", \"63\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                    hi = { Types.col = \"55\"; line = \"24\" };\n                    lo = { Types.col = \"24\"; line = \"24\" } };\n                  ty = (Types.Uint Types.U64) }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                hi = { Types.col = \"21\"; line = \"25\" };\n                lo = { Types.col = \"20\"; line = \"21\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (21, 84); krate = \"libjade_sys\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"bindings\");\n                       disambiguator = 0 };\n                      { Types.data = Types.ForeignMod; disambiguator = 6 };\n                      { Types.data =\n                        (Types.ValueNs \"jade_hash_sha3_256_amd64_ref\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                  hi = { Types.col = \"45\"; line = \"50\" };\n                  lo = { Types.col = \"4\"; line = \"50\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                         (Types.RawPtr\n                            { Types.mutbl = true; ty = (Types.Uint Types.U8)\n                              });\n                         (Types.Uint Types.U64)];\n                       output = (Types.Int Types.I32);\n                       unsafety = Types.Unsafe }\n                     })\n                };\n              generic_args = []; impl = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                       (Types.RawPtr\n                          { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                       (Types.Uint Types.U64)];\n                     output = (Types.Int Types.I32); unsafety = Types.Unsafe\n                     }\n                   })};\n            hir_id = (Some (\"1626\", \"49\"));\n            span =\n            { Types.filename =\n              (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n              hi = { Types.col = \"21\"; line = \"25\" };\n              lo = { Types.col = \"20\"; line = \"21\" } };\n            ty = (Types.Int Types.I32) });\n    opt_destruction_scope = None;\n    region_scope = { Types.data = Types.Node; id = \"71\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename = (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n      hi = { Types.col = \"17\"; line = \"26\" };\n      lo = { Types.col = \"16\"; line = \"20\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"1626\", \"48\"));\n  span =\n  { Types.filename = (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n    hi = { Types.col = \"17\"; line = \"26\" };\n    lo = { Types.col = \"16\"; line = \"20\" } };\n  ty = (Types.Int Types.I32) }"

  in
  if r <>. 0l then Rust_primitives.Hax.repeat 0uy (sz 32) else digest

let sha3_512_ (input: t_Slice u8) : FStar.HyperStack.ST.St (t_Array u8 (sz 64)) =
  let digest:t_Array u8 (sz 64) = Rust_primitives.Hax.repeat 0uy (sz 64) in
  let r:i32 =
    if Libcrux_platform.simd256_support
    then
      Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed.\n"
        "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Pointer {cast = Types.Unsize;\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Borrow {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"13\";\n                                    owner =\n                                    { Types.index = (0, 1634);\n                                      krate = \"libcrux\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"jasmin\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"sha3\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"sha3_512\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"digest\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"30\"; line = \"14\" };\n                                lo = { Types.col = \"24\"; line = \"14\" } };\n                              ty =\n                              (Types.Array\n                                 ((Types.Uint Types.U8),\n                                  { Types.attributes = [];\n                                    contents =\n                                    (Types.Literal\n                                       (Types.Int\n                                          (Types.Uint (\"64\", Types.Usize))));\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) }))\n                              };\n                            borrow_kind =\n                            Types.Mut {allow_two_phase_borrow = true}};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                            hi = { Types.col = \"43\"; line = \"14\" };\n                            lo = { Types.col = \"24\"; line = \"14\" } };\n                          ty =\n                          (Types.Ref\n                             ({ Types.kind = Types.ReErased },\n                              (Types.Array\n                                 ((Types.Uint Types.U8),\n                                  { Types.attributes = [];\n                                    contents =\n                                    (Types.Literal\n                                       (Types.Int\n                                          (Types.Uint (\"64\", Types.Usize))));\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) })),\n                              true))\n                          }};\n                      hir_id = (Some (\"1634\", \"28\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"43\"; line = \"14\" };\n                        lo = { Types.col = \"24\"; line = \"14\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Slice (Types.Uint Types.U8)), true))\n                      }\n                     ];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                     hi = { Types.col = \"43\"; line = \"14\" };\n                     lo = { Types.col = \"31\"; line = \"14\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 11031); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"slice\");\n                            disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 0 };\n                           { Types.data = (Types.ValueNs \"as_mut_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                       hi = { Types.col = \"41\"; line = \"14\" };\n                       lo = { Types.col = \"31\"; line = \"14\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars =\n                          [(Types.Region\n                              (Types.BrNamed\n                                 ({ Types.index = (2, 54754); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"slice\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data =\n                                        (Types.ValueNs \"as_mut_ptr\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.LifetimeNs \"'_\");\n                                        disambiguator = 0 }\n                                      ]\n                                    },\n                                  \"'_\")))\n                            ];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Ref\n                                ({ Types.kind =\n                                   (Types.ReLateBound\n                                      (\"0\",\n                                       { Types.kind =\n                                         (Types.BrNamed\n                                            ({ Types.index = (2, 54754);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"slice\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs\n                                                      \"as_mut_ptr\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\"));\n                                         var = \"0\" }))\n                                   },\n                                 (Types.Slice (Types.Uint Types.U8)), true))\n                              ];\n                            output =\n                            (Types.RawPtr\n                               { Types.mutbl = true;\n                                 ty = (Types.Uint Types.U8) });\n                            unsafety = Types.Normal }\n                          })\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.U8))];\n                   impl = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars =\n                        [(Types.Region\n                            (Types.BrNamed\n                               ({ Types.index = (2, 54754); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"slice\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.ValueNs \"as_mut_ptr\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.LifetimeNs \"'_\");\n                                      disambiguator = 0 }\n                                    ]\n                                  },\n                                \"'_\")))\n                          ];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind =\n                                 (Types.ReLateBound\n                                    (\"0\",\n                                     { Types.kind =\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54754);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"as_mut_ptr\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\"));\n                                       var = \"0\" }))\n                                 },\n                               (Types.Slice (Types.Uint Types.U8)), true))\n                            ];\n                          output =\n                          (Types.RawPtr\n                             { Types.mutbl = true; ty = (Types.Uint Types.U8)\n                               });\n                          unsafety = Types.Normal }\n                        })};\n                 hir_id = (Some (\"1634\", \"26\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                   hi = { Types.col = \"43\"; line = \"14\" };\n                   lo = { Types.col = \"24\"; line = \"14\" } };\n                 ty =\n                 (Types.RawPtr\n                    { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.ValueTypeAscription {\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Cast {\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Call {\n                            args =\n                            [{ Types.attributes = [];\n                               contents =\n                               Types.Borrow {\n                                 arg =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.Deref {\n                                     arg =\n                                     { Types.attributes = [];\n                                       contents =\n                                       Types.VarRef {\n                                         id =\n                                         { Types.id =\n                                           { Types.local_id = \"2\";\n                                             owner =\n                                             { Types.index = (0, 1634);\n                                               krate = \"libcrux\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"jasmin\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"sha3\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"sha3_512\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               }\n                                             };\n                                           name = \"input\" }};\n                                       hir_id = None;\n                                       span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            (Types.LocalPath\n                                               \"src/jasmin/sha3.rs\"));\n                                         hi =\n                                         { Types.col = \"29\"; line = \"15\" };\n                                         lo =\n                                         { Types.col = \"24\"; line = \"15\" } };\n                                       ty =\n                                       (Types.Ref\n                                          ({ Types.kind = Types.ReErased },\n                                           (Types.Slice (Types.Uint Types.U8)),\n                                           false))\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                     hi = { Types.col = \"38\"; line = \"15\" };\n                                     lo = { Types.col = \"24\"; line = \"15\" } };\n                                   ty = (Types.Slice (Types.Uint Types.U8)) };\n                                 borrow_kind = Types.Shared};\n                               hir_id = (Some (\"1634\", \"33\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                 hi = { Types.col = \"38\"; line = \"15\" };\n                                 lo = { Types.col = \"24\"; line = \"15\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   (Types.Slice (Types.Uint Types.U8)), false))\n                               }\n                              ];\n                            fn_span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                              hi = { Types.col = \"38\"; line = \"15\" };\n                              lo = { Types.col = \"30\"; line = \"15\" } };\n                            from_hir_call = true;\n                            fun' =\n                            { Types.attributes = [];\n                              contents =\n                              Types.GlobalName {\n                                id =\n                                { Types.index = (2, 11030); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"slice\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.ValueNs \"as_ptr\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"36\"; line = \"15\" };\n                                lo = { Types.col = \"30\"; line = \"15\" } };\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54753);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"as_ptr\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (2, 54753);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"slice\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"as_ptr\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          (Types.Slice (Types.Uint Types.U8)),\n                                          false))\n                                       ];\n                                     output =\n                                     (Types.RawPtr\n                                        { Types.mutbl = false;\n                                          ty = (Types.Uint Types.U8) });\n                                     unsafety = Types.Normal }\n                                   })\n                              };\n                            generic_args =\n                            [(Types.Type (Types.Uint Types.U8))];\n                            impl = None;\n                            ty =\n                            (Types.Arrow\n                               { Types.bound_vars =\n                                 [(Types.Region\n                                     (Types.BrNamed\n                                        ({ Types.index = (2, 54753);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"slice\");\n                                              disambiguator = 0 };\n                                             { Types.data = Types.Impl;\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.ValueNs \"as_ptr\");\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.LifetimeNs \"'_\");\n                                               disambiguator = 0 }\n                                             ]\n                                           },\n                                         \"'_\")))\n                                   ];\n                                 value =\n                                 { Types.abi = Types.Abi {todo = \"Rust\"};\n                                   c_variadic = false;\n                                   inputs =\n                                   [(Types.Ref\n                                       ({ Types.kind =\n                                          (Types.ReLateBound\n                                             (\"0\",\n                                              { Types.kind =\n                                                (Types.BrNamed\n                                                   ({ Types.index =\n                                                      (2, 54753);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"slice\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          Types.Impl;\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.ValueNs\n                                                             \"as_ptr\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.LifetimeNs\n                                                             \"'_\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    \"'_\"));\n                                                var = \"0\" }))\n                                          },\n                                        (Types.Slice (Types.Uint Types.U8)),\n                                        false))\n                                     ];\n                                   output =\n                                   (Types.RawPtr\n                                      { Types.mutbl = false;\n                                        ty = (Types.Uint Types.U8) });\n                                   unsafety = Types.Normal }\n                                 })};\n                          hir_id = (Some (\"1634\", \"31\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                            hi = { Types.col = \"38\"; line = \"15\" };\n                            lo = { Types.col = \"24\"; line = \"15\" } };\n                          ty =\n                          (Types.RawPtr\n                             { Types.mutbl = false;\n                               ty = (Types.Uint Types.U8) })\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"43\"; line = \"15\" };\n                        lo = { Types.col = \"24\"; line = \"15\" } };\n                      ty =\n                      (Types.RawPtr\n                         { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                      };\n                    user_ty =\n                    (Some { Types.max_universe = \"0\";\n                            value = (Types.Todo \"Ty(^0)\");\n                            variables = [(Types.Ty (Types.General \"0\"))] })};\n                  hir_id = (Some (\"1634\", \"30\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                    hi = { Types.col = \"43\"; line = \"15\" };\n                    lo = { Types.col = \"24\"; line = \"15\" } };\n                  ty =\n                  (Types.RawPtr\n                     { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                  };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Call {\n                         args =\n                         [{ Types.attributes = [];\n                            contents =\n                            Types.Call {\n                              args =\n                              [{ Types.attributes = [];\n                                 contents =\n                                 Types.Borrow {\n                                   arg =\n                                   { Types.attributes = [];\n                                     contents =\n                                     Types.Deref {\n                                       arg =\n                                       { Types.attributes = [];\n                                         contents =\n                                         Types.VarRef {\n                                           id =\n                                           { Types.id =\n                                             { Types.local_id = \"2\";\n                                               owner =\n                                               { Types.index = (0, 1634);\n                                                 krate = \"libcrux\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"jasmin\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"sha3\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.ValueNs\n                                                        \"sha3_512\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 }\n                                               };\n                                             name = \"input\" }};\n                                         hir_id = None;\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"src/jasmin/sha3.rs\"));\n                                           hi =\n                                           { Types.col = \"29\"; line = \"16\" };\n                                           lo =\n                                           { Types.col = \"24\"; line = \"16\" }\n                                           };\n                                         ty =\n                                         (Types.Ref\n                                            ({ Types.kind = Types.ReErased },\n                                             (Types.Slice\n                                                (Types.Uint Types.U8)),\n                                             false))\n                                         }};\n                                     hir_id = None;\n                                     span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          (Types.LocalPath\n                                             \"src/jasmin/sha3.rs\"));\n                                       hi = { Types.col = \"35\"; line = \"16\" };\n                                       lo = { Types.col = \"24\"; line = \"16\" }\n                                       };\n                                     ty = (Types.Slice (Types.Uint Types.U8))\n                                     };\n                                   borrow_kind = Types.Shared};\n                                 hir_id = (Some (\"1634\", \"42\"));\n                                 span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                   hi = { Types.col = \"35\"; line = \"16\" };\n                                   lo = { Types.col = \"24\"; line = \"16\" } };\n                                 ty =\n                                 (Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     (Types.Slice (Types.Uint Types.U8)),\n                                     false))\n                                 }\n                                ];\n                              fn_span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"35\"; line = \"16\" };\n                                lo = { Types.col = \"30\"; line = \"16\" } };\n                              from_hir_call = true;\n                              fun' =\n                              { Types.attributes = [];\n                                contents =\n                                Types.GlobalName {\n                                  id =\n                                  { Types.index = (2, 10980); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"slice\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.ValueNs \"len\");\n                                        disambiguator = 0 }\n                                      ]\n                                    }};\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                  hi = { Types.col = \"33\"; line = \"16\" };\n                                  lo = { Types.col = \"30\"; line = \"16\" } };\n                                ty =\n                                (Types.Arrow\n                                   { Types.bound_vars =\n                                     [(Types.Region\n                                         (Types.BrNamed\n                                            ({ Types.index = (2, 54731);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"slice\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"len\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\")))\n                                       ];\n                                     value =\n                                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                                       c_variadic = false;\n                                       inputs =\n                                       [(Types.Ref\n                                           ({ Types.kind =\n                                              (Types.ReLateBound\n                                                 (\"0\",\n                                                  { Types.kind =\n                                                    (Types.BrNamed\n                                                       ({ Types.index =\n                                                          (2, 54731);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"slice\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"len\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.LifetimeNs\n                                                                 \"'_\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          },\n                                                        \"'_\"));\n                                                    var = \"0\" }))\n                                              },\n                                            (Types.Slice\n                                               (Types.Uint Types.U8)),\n                                            false))\n                                         ];\n                                       output = (Types.Uint Types.Usize);\n                                       unsafety = Types.Normal }\n                                     })\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.U8))];\n                              impl = None;\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54731);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"len\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (2, 54731);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"slice\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"len\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          (Types.Slice (Types.Uint Types.U8)),\n                                          false))\n                                       ];\n                                     output = (Types.Uint Types.Usize);\n                                     unsafety = Types.Normal }\n                                   })};\n                            hir_id = (Some (\"1634\", \"40\"));\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                              hi = { Types.col = \"35\"; line = \"16\" };\n                              lo = { Types.col = \"24\"; line = \"16\" } };\n                            ty = (Types.Uint Types.Usize) }\n                           ];\n                         fn_span =\n                         { Types.filename =\n                           (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                           hi = { Types.col = \"46\"; line = \"16\" };\n                           lo = { Types.col = \"36\"; line = \"16\" } };\n                         from_hir_call = true;\n                         fun' =\n                         { Types.attributes = [];\n                           contents =\n                           Types.GlobalName {\n                             id =\n                             { Types.index = (2, 2519); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"convert\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"TryInto\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.ValueNs \"try_into\");\n                                   disambiguator = 0 }\n                                 ]\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                             hi = { Types.col = \"44\"; line = \"16\" };\n                             lo = { Types.col = \"36\"; line = \"16\" } };\n                           ty =\n                           (Types.Arrow\n                              { Types.bound_vars = [];\n                                value =\n                                { Types.abi = Types.Abi {todo = \"Rust\"};\n                                  c_variadic = false;\n                                  inputs = [(Types.Uint Types.Usize)];\n                                  output =\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (2, 41506);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"result\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"Result\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type (Types.Uint Types.U64));\n                                      (Types.Type\n                                         (Types.Alias\n                                            (Types.Projection,\n                                             { Types.def_id =\n                                               { Types.index = (2, 2518);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"convert\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"TryInto\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Error\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               substs =\n                                               [(Types.Type\n                                                   (Types.Uint Types.Usize));\n                                                 (Types.Type\n                                                    (Types.Uint Types.U64))\n                                                 ];\n                                               trait_def_id =\n                                               (Some ({ Types.index =\n                                                        (2, 2516);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"convert\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"TryInto\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      { Types.args =\n                                                        [{ Types.args = [];\n                                                           impl =\n                                                           Types.Builtin {\n                                                             trait =\n                                                             { Types.def_id =\n                                                               { Types.index =\n                                                                 (2, 2689);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   (Types.Uint\n                                                                    Types.Usize))\n                                                                 ]\n                                                               }}\n                                                           };\n                                                          { Types.args = [];\n                                                            impl =\n                                                            Types.Builtin {\n                                                              trait =\n                                                              { Types.def_id =\n                                                                { Types.index =\n                                                                  (2, 2689);\n                                                                  krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.U64))\n                                                                  ]\n                                                                }}\n                                                            };\n                                                          { Types.args = [];\n                                                            impl =\n                                                            Types.Concrete {\n                                                              generics = [];\n                                                              id =\n                                                              { Types.index =\n                                                                (2, 31423);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"convert\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"ptr_try_from_impls\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 }\n                                                                  ]\n                                                                }}\n                                                            }\n                                                          ];\n                                                        impl =\n                                                        Types.Concrete {\n                                                          generics =\n                                                          [(Types.Type\n                                                              (Types.Uint\n                                                                 Types.Usize));\n                                                            (Types.Type\n                                                               (Types.Uint\n                                                                  Types.U64))\n                                                            ];\n                                                          id =\n                                                          { Types.index =\n                                                            (2, 2546);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"convert\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                Types.Impl;\n                                                                disambiguator =\n                                                                6 }\n                                                              ]\n                                                            }}\n                                                        }))\n                                               })))\n                                      ]};\n                                  unsafety = Types.Normal }\n                                })\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.Usize));\n                           (Types.Type (Types.Uint Types.U64))];\n                         impl =\n                         (Some { Types.args =\n                                 [{ Types.args = [];\n                                    impl =\n                                    Types.Builtin {\n                                      trait =\n                                      { Types.def_id =\n                                        { Types.index = (2, 2689);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"marker\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Sized\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type (Types.Uint Types.Usize))\n                                          ]\n                                        }}\n                                    };\n                                   { Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 2689);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type (Types.Uint Types.U64))\n                                           ]\n                                         }}\n                                     };\n                                   { Types.args = [];\n                                     impl =\n                                     Types.Concrete {generics = [];\n                                       id =\n                                       { Types.index = (2, 31423);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"convert\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"num\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs\n                                                \"ptr_try_from_impls\");\n                                             disambiguator = 0 };\n                                           { Types.data = Types.Impl;\n                                             disambiguator = 3 }\n                                           ]\n                                         }}\n                                     }\n                                   ];\n                                 impl =\n                                 Types.Concrete {\n                                   generics =\n                                   [(Types.Type (Types.Uint Types.Usize));\n                                     (Types.Type (Types.Uint Types.U64))];\n                                   id =\n                                   { Types.index = (2, 2546); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"convert\");\n                                        disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 6 }\n                                       ]\n                                     }}\n                                 });\n                         ty =\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs = [(Types.Uint Types.Usize)];\n                                output =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 41506); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"result\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Result\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type (Types.Uint Types.U64));\n                                    (Types.Type\n                                       (Types.Alias\n                                          (Types.Projection,\n                                           { Types.def_id =\n                                             { Types.index = (2, 2518);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"convert\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"TryInto\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Error\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             substs =\n                                             [(Types.Type\n                                                 (Types.Uint Types.Usize));\n                                               (Types.Type\n                                                  (Types.Uint Types.U64))\n                                               ];\n                                             trait_def_id =\n                                             (Some ({ Types.index = (2, 2516);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"convert\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"TryInto\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    { Types.args =\n                                                      [{ Types.args = [];\n                                                         impl =\n                                                         Types.Builtin {\n                                                           trait =\n                                                           { Types.def_id =\n                                                             { Types.index =\n                                                               (2, 2689);\n                                                               krate = \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"marker\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"Sized\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 (Types.Uint\n                                                                    Types.Usize))\n                                                               ]\n                                                             }}\n                                                         };\n                                                        { Types.args = [];\n                                                          impl =\n                                                          Types.Builtin {\n                                                            trait =\n                                                            { Types.def_id =\n                                                              { Types.index =\n                                                                (2, 2689);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"marker\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              [(Types.Type\n                                                                  (Types.Uint\n                                                                    Types.U64))\n                                                                ]\n                                                              }}\n                                                          };\n                                                        { Types.args = [];\n                                                          impl =\n                                                          Types.Concrete {\n                                                            generics = [];\n                                                            id =\n                                                            { Types.index =\n                                                              (2, 31423);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"convert\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"num\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"ptr_try_from_impls\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  Types.Impl;\n                                                                  disambiguator =\n                                                                  3 }\n                                                                ]\n                                                              }}\n                                                          }\n                                                        ];\n                                                      impl =\n                                                      Types.Concrete {\n                                                        generics =\n                                                        [(Types.Type\n                                                            (Types.Uint\n                                                               Types.Usize));\n                                                          (Types.Type\n                                                             (Types.Uint\n                                                                Types.U64))\n                                                          ];\n                                                        id =\n                                                        { Types.index =\n                                                          (2, 2546);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"convert\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              6 }\n                                                            ]\n                                                          }}\n                                                      }))\n                                             })))\n                                    ]};\n                                unsafety = Types.Normal }\n                              })};\n                       hir_id = (Some (\"1634\", \"38\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                         hi = { Types.col = \"46\"; line = \"16\" };\n                         lo = { Types.col = \"24\"; line = \"16\" } };\n                       ty =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 41506); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"result\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Result\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.U64));\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (2, 21945); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"num\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"error\");\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.TypeNs \"TryFromIntError\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []})\n                           ]}\n                       }\n                      ];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                      hi = { Types.col = \"55\"; line = \"16\" };\n                      lo = { Types.col = \"47\"; line = \"16\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 8514); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"result\");\n                             disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"unwrap\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"53\"; line = \"16\" };\n                        lo = { Types.col = \"47\"; line = \"16\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [Types.Adt {\n                                def_id =\n                                { Types.index = (2, 41506); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"result\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Result\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type (Types.Uint Types.U64));\n                                  (Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (2, 21945);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data = (Types.TypeNs \"num\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"error\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"TryFromIntError\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []})\n                                  ]}\n                               ];\n                             output = (Types.Uint Types.U64);\n                             unsafety = Types.Normal }\n                           })\n                      };\n                    generic_args =\n                    [(Types.Type (Types.Uint Types.U64));\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 21945); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"num\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"error\");\n                                 disambiguator = 0 };\n                               { Types.data =\n                                 (Types.TypeNs \"TryFromIntError\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []})\n                      ];\n                    impl = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [Types.Adt {\n                              def_id =\n                              { Types.index = (2, 41506); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"result\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Result\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.U64));\n                                (Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 21945);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"num\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"error\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"TryFromIntError\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []})\n                                ]}\n                             ];\n                           output = (Types.Uint Types.U64);\n                           unsafety = Types.Normal }\n                         })};\n                  hir_id = (Some (\"1634\", \"36\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                    hi = { Types.col = \"55\"; line = \"16\" };\n                    lo = { Types.col = \"24\"; line = \"16\" } };\n                  ty = (Types.Uint Types.U64) }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                hi = { Types.col = \"21\"; line = \"17\" };\n                lo = { Types.col = \"20\"; line = \"13\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (21, 110); krate = \"libjade_sys\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"bindings\");\n                       disambiguator = 0 };\n                      { Types.data = Types.ForeignMod; disambiguator = 19 };\n                      { Types.data =\n                        (Types.ValueNs \"jade_hash_sha3_512_amd64_avx2\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                  hi = { Types.col = \"46\"; line = \"65\" };\n                  lo = { Types.col = \"4\"; line = \"65\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                         (Types.RawPtr\n                            { Types.mutbl = true; ty = (Types.Uint Types.U8)\n                              });\n                         (Types.Uint Types.U64)];\n                       output = (Types.Int Types.I32);\n                       unsafety = Types.Unsafe }\n                     })\n                };\n              generic_args = []; impl = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                       (Types.RawPtr\n                          { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                       (Types.Uint Types.U64)];\n                     output = (Types.Int Types.I32); unsafety = Types.Unsafe\n                     }\n                   })};\n            hir_id = (Some (\"1634\", \"22\"));\n            span =\n            { Types.filename =\n              (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n              hi = { Types.col = \"21\"; line = \"17\" };\n              lo = { Types.col = \"20\"; line = \"13\" } };\n            ty = (Types.Int Types.I32) });\n    opt_destruction_scope = None;\n    region_scope = { Types.data = Types.Node; id = \"44\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename = (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n      hi = { Types.col = \"17\"; line = \"18\" };\n      lo = { Types.col = \"16\"; line = \"12\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"1634\", \"21\"));\n  span =\n  { Types.filename = (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n    hi = { Types.col = \"17\"; line = \"18\" };\n    lo = { Types.col = \"16\"; line = \"12\" } };\n  ty = (Types.Int Types.I32) }"

    else
      Rust_primitives.Hax.failure "(AST import) Unsafe blocks are not allowed.\n"
        "{ Types.attributes = [];\n  contents =\n  Types.Block {\n    expr =\n    (Some { Types.attributes = [];\n            contents =\n            Types.Call {\n              args =\n              [{ Types.attributes = [];\n                 contents =\n                 Types.Call {\n                   args =\n                   [{ Types.attributes = [];\n                      contents =\n                      Types.Pointer {cast = Types.Unsize;\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Borrow {\n                            arg =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"13\";\n                                    owner =\n                                    { Types.index = (0, 1634);\n                                      krate = \"libcrux\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"jasmin\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"sha3\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"sha3_512\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"digest\" }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"30\"; line = \"22\" };\n                                lo = { Types.col = \"24\"; line = \"22\" } };\n                              ty =\n                              (Types.Array\n                                 ((Types.Uint Types.U8),\n                                  { Types.attributes = [];\n                                    contents =\n                                    (Types.Literal\n                                       (Types.Int\n                                          (Types.Uint (\"64\", Types.Usize))));\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) }))\n                              };\n                            borrow_kind =\n                            Types.Mut {allow_two_phase_borrow = true}};\n                          hir_id = None;\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                            hi = { Types.col = \"43\"; line = \"22\" };\n                            lo = { Types.col = \"24\"; line = \"22\" } };\n                          ty =\n                          (Types.Ref\n                             ({ Types.kind = Types.ReErased },\n                              (Types.Array\n                                 ((Types.Uint Types.U8),\n                                  { Types.attributes = [];\n                                    contents =\n                                    (Types.Literal\n                                       (Types.Int\n                                          (Types.Uint (\"64\", Types.Usize))));\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) })),\n                              true))\n                          }};\n                      hir_id = (Some (\"1634\", \"55\"));\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"43\"; line = \"22\" };\n                        lo = { Types.col = \"24\"; line = \"22\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Slice (Types.Uint Types.U8)), true))\n                      }\n                     ];\n                   fn_span =\n                   { Types.filename =\n                     (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                     hi = { Types.col = \"43\"; line = \"22\" };\n                     lo = { Types.col = \"31\"; line = \"22\" } };\n                   from_hir_call = true;\n                   fun' =\n                   { Types.attributes = [];\n                     contents =\n                     Types.GlobalName {\n                       id =\n                       { Types.index = (2, 11031); krate = \"core\";\n                         path =\n                         [{ Types.data = (Types.TypeNs \"slice\");\n                            disambiguator = 0 };\n                           { Types.data = Types.Impl; disambiguator = 0 };\n                           { Types.data = (Types.ValueNs \"as_mut_ptr\");\n                             disambiguator = 0 }\n                           ]\n                         }};\n                     hir_id = None;\n                     span =\n                     { Types.filename =\n                       (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                       hi = { Types.col = \"41\"; line = \"22\" };\n                       lo = { Types.col = \"31\"; line = \"22\" } };\n                     ty =\n                     (Types.Arrow\n                        { Types.bound_vars =\n                          [(Types.Region\n                              (Types.BrNamed\n                                 ({ Types.index = (2, 54754); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"slice\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data =\n                                        (Types.ValueNs \"as_mut_ptr\");\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.LifetimeNs \"'_\");\n                                        disambiguator = 0 }\n                                      ]\n                                    },\n                                  \"'_\")))\n                            ];\n                          value =\n                          { Types.abi = Types.Abi {todo = \"Rust\"};\n                            c_variadic = false;\n                            inputs =\n                            [(Types.Ref\n                                ({ Types.kind =\n                                   (Types.ReLateBound\n                                      (\"0\",\n                                       { Types.kind =\n                                         (Types.BrNamed\n                                            ({ Types.index = (2, 54754);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"slice\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs\n                                                      \"as_mut_ptr\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\"));\n                                         var = \"0\" }))\n                                   },\n                                 (Types.Slice (Types.Uint Types.U8)), true))\n                              ];\n                            output =\n                            (Types.RawPtr\n                               { Types.mutbl = true;\n                                 ty = (Types.Uint Types.U8) });\n                            unsafety = Types.Normal }\n                          })\n                     };\n                   generic_args = [(Types.Type (Types.Uint Types.U8))];\n                   impl = None;\n                   ty =\n                   (Types.Arrow\n                      { Types.bound_vars =\n                        [(Types.Region\n                            (Types.BrNamed\n                               ({ Types.index = (2, 54754); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"slice\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.ValueNs \"as_mut_ptr\");\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.LifetimeNs \"'_\");\n                                      disambiguator = 0 }\n                                    ]\n                                  },\n                                \"'_\")))\n                          ];\n                        value =\n                        { Types.abi = Types.Abi {todo = \"Rust\"};\n                          c_variadic = false;\n                          inputs =\n                          [(Types.Ref\n                              ({ Types.kind =\n                                 (Types.ReLateBound\n                                    (\"0\",\n                                     { Types.kind =\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54754);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"as_mut_ptr\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\"));\n                                       var = \"0\" }))\n                                 },\n                               (Types.Slice (Types.Uint Types.U8)), true))\n                            ];\n                          output =\n                          (Types.RawPtr\n                             { Types.mutbl = true; ty = (Types.Uint Types.U8)\n                               });\n                          unsafety = Types.Normal }\n                        })};\n                 hir_id = (Some (\"1634\", \"53\"));\n                 span =\n                 { Types.filename =\n                   (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                   hi = { Types.col = \"43\"; line = \"22\" };\n                   lo = { Types.col = \"24\"; line = \"22\" } };\n                 ty =\n                 (Types.RawPtr\n                    { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                 };\n                { Types.attributes = [];\n                  contents =\n                  Types.ValueTypeAscription {\n                    source =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Cast {\n                        source =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Call {\n                            args =\n                            [{ Types.attributes = [];\n                               contents =\n                               Types.Borrow {\n                                 arg =\n                                 { Types.attributes = [];\n                                   contents =\n                                   Types.Deref {\n                                     arg =\n                                     { Types.attributes = [];\n                                       contents =\n                                       Types.VarRef {\n                                         id =\n                                         { Types.id =\n                                           { Types.local_id = \"2\";\n                                             owner =\n                                             { Types.index = (0, 1634);\n                                               krate = \"libcrux\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"jasmin\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"sha3\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"sha3_512\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               }\n                                             };\n                                           name = \"input\" }};\n                                       hir_id = None;\n                                       span =\n                                       { Types.filename =\n                                         (Types.Real\n                                            (Types.LocalPath\n                                               \"src/jasmin/sha3.rs\"));\n                                         hi =\n                                         { Types.col = \"29\"; line = \"23\" };\n                                         lo =\n                                         { Types.col = \"24\"; line = \"23\" } };\n                                       ty =\n                                       (Types.Ref\n                                          ({ Types.kind = Types.ReErased },\n                                           (Types.Slice (Types.Uint Types.U8)),\n                                           false))\n                                       }};\n                                   hir_id = None;\n                                   span =\n                                   { Types.filename =\n                                     (Types.Real\n                                        (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                     hi = { Types.col = \"38\"; line = \"23\" };\n                                     lo = { Types.col = \"24\"; line = \"23\" } };\n                                   ty = (Types.Slice (Types.Uint Types.U8)) };\n                                 borrow_kind = Types.Shared};\n                               hir_id = (Some (\"1634\", \"60\"));\n                               span =\n                               { Types.filename =\n                                 (Types.Real\n                                    (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                 hi = { Types.col = \"38\"; line = \"23\" };\n                                 lo = { Types.col = \"24\"; line = \"23\" } };\n                               ty =\n                               (Types.Ref\n                                  ({ Types.kind = Types.ReErased },\n                                   (Types.Slice (Types.Uint Types.U8)), false))\n                               }\n                              ];\n                            fn_span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                              hi = { Types.col = \"38\"; line = \"23\" };\n                              lo = { Types.col = \"30\"; line = \"23\" } };\n                            from_hir_call = true;\n                            fun' =\n                            { Types.attributes = [];\n                              contents =\n                              Types.GlobalName {\n                                id =\n                                { Types.index = (2, 11030); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"slice\");\n                                     disambiguator = 0 };\n                                    { Types.data = Types.Impl;\n                                      disambiguator = 0 };\n                                    { Types.data = (Types.ValueNs \"as_ptr\");\n                                      disambiguator = 0 }\n                                    ]\n                                  }};\n                              hir_id = None;\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"36\"; line = \"23\" };\n                                lo = { Types.col = \"30\"; line = \"23\" } };\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54753);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"as_ptr\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (2, 54753);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"slice\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"as_ptr\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          (Types.Slice (Types.Uint Types.U8)),\n                                          false))\n                                       ];\n                                     output =\n                                     (Types.RawPtr\n                                        { Types.mutbl = false;\n                                          ty = (Types.Uint Types.U8) });\n                                     unsafety = Types.Normal }\n                                   })\n                              };\n                            generic_args =\n                            [(Types.Type (Types.Uint Types.U8))];\n                            impl = None;\n                            ty =\n                            (Types.Arrow\n                               { Types.bound_vars =\n                                 [(Types.Region\n                                     (Types.BrNamed\n                                        ({ Types.index = (2, 54753);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"slice\");\n                                              disambiguator = 0 };\n                                             { Types.data = Types.Impl;\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.ValueNs \"as_ptr\");\n                                               disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.LifetimeNs \"'_\");\n                                               disambiguator = 0 }\n                                             ]\n                                           },\n                                         \"'_\")))\n                                   ];\n                                 value =\n                                 { Types.abi = Types.Abi {todo = \"Rust\"};\n                                   c_variadic = false;\n                                   inputs =\n                                   [(Types.Ref\n                                       ({ Types.kind =\n                                          (Types.ReLateBound\n                                             (\"0\",\n                                              { Types.kind =\n                                                (Types.BrNamed\n                                                   ({ Types.index =\n                                                      (2, 54753);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"slice\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          Types.Impl;\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.ValueNs\n                                                             \"as_ptr\");\n                                                          disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.LifetimeNs\n                                                             \"'_\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    \"'_\"));\n                                                var = \"0\" }))\n                                          },\n                                        (Types.Slice (Types.Uint Types.U8)),\n                                        false))\n                                     ];\n                                   output =\n                                   (Types.RawPtr\n                                      { Types.mutbl = false;\n                                        ty = (Types.Uint Types.U8) });\n                                   unsafety = Types.Normal }\n                                 })};\n                          hir_id = (Some (\"1634\", \"58\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                            hi = { Types.col = \"38\"; line = \"23\" };\n                            lo = { Types.col = \"24\"; line = \"23\" } };\n                          ty =\n                          (Types.RawPtr\n                             { Types.mutbl = false;\n                               ty = (Types.Uint Types.U8) })\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"43\"; line = \"23\" };\n                        lo = { Types.col = \"24\"; line = \"23\" } };\n                      ty =\n                      (Types.RawPtr\n                         { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                      };\n                    user_ty =\n                    (Some { Types.max_universe = \"0\";\n                            value = (Types.Todo \"Ty(^0)\");\n                            variables = [(Types.Ty (Types.General \"0\"))] })};\n                  hir_id = (Some (\"1634\", \"57\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                    hi = { Types.col = \"43\"; line = \"23\" };\n                    lo = { Types.col = \"24\"; line = \"23\" } };\n                  ty =\n                  (Types.RawPtr\n                     { Types.mutbl = true; ty = (Types.Uint Types.U8) })\n                  };\n                { Types.attributes = [];\n                  contents =\n                  Types.Call {\n                    args =\n                    [{ Types.attributes = [];\n                       contents =\n                       Types.Call {\n                         args =\n                         [{ Types.attributes = [];\n                            contents =\n                            Types.Call {\n                              args =\n                              [{ Types.attributes = [];\n                                 contents =\n                                 Types.Borrow {\n                                   arg =\n                                   { Types.attributes = [];\n                                     contents =\n                                     Types.Deref {\n                                       arg =\n                                       { Types.attributes = [];\n                                         contents =\n                                         Types.VarRef {\n                                           id =\n                                           { Types.id =\n                                             { Types.local_id = \"2\";\n                                               owner =\n                                               { Types.index = (0, 1634);\n                                                 krate = \"libcrux\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"jasmin\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"sha3\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.ValueNs\n                                                        \"sha3_512\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 }\n                                               };\n                                             name = \"input\" }};\n                                         hir_id = None;\n                                         span =\n                                         { Types.filename =\n                                           (Types.Real\n                                              (Types.LocalPath\n                                                 \"src/jasmin/sha3.rs\"));\n                                           hi =\n                                           { Types.col = \"29\"; line = \"24\" };\n                                           lo =\n                                           { Types.col = \"24\"; line = \"24\" }\n                                           };\n                                         ty =\n                                         (Types.Ref\n                                            ({ Types.kind = Types.ReErased },\n                                             (Types.Slice\n                                                (Types.Uint Types.U8)),\n                                             false))\n                                         }};\n                                     hir_id = None;\n                                     span =\n                                     { Types.filename =\n                                       (Types.Real\n                                          (Types.LocalPath\n                                             \"src/jasmin/sha3.rs\"));\n                                       hi = { Types.col = \"35\"; line = \"24\" };\n                                       lo = { Types.col = \"24\"; line = \"24\" }\n                                       };\n                                     ty = (Types.Slice (Types.Uint Types.U8))\n                                     };\n                                   borrow_kind = Types.Shared};\n                                 hir_id = (Some (\"1634\", \"69\"));\n                                 span =\n                                 { Types.filename =\n                                   (Types.Real\n                                      (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                   hi = { Types.col = \"35\"; line = \"24\" };\n                                   lo = { Types.col = \"24\"; line = \"24\" } };\n                                 ty =\n                                 (Types.Ref\n                                    ({ Types.kind = Types.ReErased },\n                                     (Types.Slice (Types.Uint Types.U8)),\n                                     false))\n                                 }\n                                ];\n                              fn_span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                hi = { Types.col = \"35\"; line = \"24\" };\n                                lo = { Types.col = \"30\"; line = \"24\" } };\n                              from_hir_call = true;\n                              fun' =\n                              { Types.attributes = [];\n                                contents =\n                                Types.GlobalName {\n                                  id =\n                                  { Types.index = (2, 10980); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"slice\");\n                                       disambiguator = 0 };\n                                      { Types.data = Types.Impl;\n                                        disambiguator = 0 };\n                                      { Types.data = (Types.ValueNs \"len\");\n                                        disambiguator = 0 }\n                                      ]\n                                    }};\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real\n                                     (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                                  hi = { Types.col = \"33\"; line = \"24\" };\n                                  lo = { Types.col = \"30\"; line = \"24\" } };\n                                ty =\n                                (Types.Arrow\n                                   { Types.bound_vars =\n                                     [(Types.Region\n                                         (Types.BrNamed\n                                            ({ Types.index = (2, 54731);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"slice\");\n                                                  disambiguator = 0 };\n                                                 { Types.data = Types.Impl;\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.ValueNs \"len\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.LifetimeNs \"'_\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               },\n                                             \"'_\")))\n                                       ];\n                                     value =\n                                     { Types.abi = Types.Abi {todo = \"Rust\"};\n                                       c_variadic = false;\n                                       inputs =\n                                       [(Types.Ref\n                                           ({ Types.kind =\n                                              (Types.ReLateBound\n                                                 (\"0\",\n                                                  { Types.kind =\n                                                    (Types.BrNamed\n                                                       ({ Types.index =\n                                                          (2, 54731);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"slice\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.ValueNs\n                                                                 \"len\");\n                                                              disambiguator =\n                                                              0 };\n                                                            { Types.data =\n                                                              (Types.LifetimeNs\n                                                                 \"'_\");\n                                                              disambiguator =\n                                                              0 }\n                                                            ]\n                                                          },\n                                                        \"'_\"));\n                                                    var = \"0\" }))\n                                              },\n                                            (Types.Slice\n                                               (Types.Uint Types.U8)),\n                                            false))\n                                         ];\n                                       output = (Types.Uint Types.Usize);\n                                       unsafety = Types.Normal }\n                                     })\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.U8))];\n                              impl = None;\n                              ty =\n                              (Types.Arrow\n                                 { Types.bound_vars =\n                                   [(Types.Region\n                                       (Types.BrNamed\n                                          ({ Types.index = (2, 54731);\n                                             krate = \"core\";\n                                             path =\n                                             [{ Types.data =\n                                                (Types.TypeNs \"slice\");\n                                                disambiguator = 0 };\n                                               { Types.data = Types.Impl;\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.ValueNs \"len\");\n                                                 disambiguator = 0 };\n                                               { Types.data =\n                                                 (Types.LifetimeNs \"'_\");\n                                                 disambiguator = 0 }\n                                               ]\n                                             },\n                                           \"'_\")))\n                                     ];\n                                   value =\n                                   { Types.abi = Types.Abi {todo = \"Rust\"};\n                                     c_variadic = false;\n                                     inputs =\n                                     [(Types.Ref\n                                         ({ Types.kind =\n                                            (Types.ReLateBound\n                                               (\"0\",\n                                                { Types.kind =\n                                                  (Types.BrNamed\n                                                     ({ Types.index =\n                                                        (2, 54731);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"slice\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            Types.Impl;\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.ValueNs\n                                                               \"len\");\n                                                            disambiguator = 0\n                                                            };\n                                                          { Types.data =\n                                                            (Types.LifetimeNs\n                                                               \"'_\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      \"'_\"));\n                                                  var = \"0\" }))\n                                            },\n                                          (Types.Slice (Types.Uint Types.U8)),\n                                          false))\n                                       ];\n                                     output = (Types.Uint Types.Usize);\n                                     unsafety = Types.Normal }\n                                   })};\n                            hir_id = (Some (\"1634\", \"67\"));\n                            span =\n                            { Types.filename =\n                              (Types.Real\n                                 (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                              hi = { Types.col = \"35\"; line = \"24\" };\n                              lo = { Types.col = \"24\"; line = \"24\" } };\n                            ty = (Types.Uint Types.Usize) }\n                           ];\n                         fn_span =\n                         { Types.filename =\n                           (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                           hi = { Types.col = \"46\"; line = \"24\" };\n                           lo = { Types.col = \"36\"; line = \"24\" } };\n                         from_hir_call = true;\n                         fun' =\n                         { Types.attributes = [];\n                           contents =\n                           Types.GlobalName {\n                             id =\n                             { Types.index = (2, 2519); krate = \"core\";\n                               path =\n                               [{ Types.data = (Types.TypeNs \"convert\");\n                                  disambiguator = 0 };\n                                 { Types.data = (Types.TypeNs \"TryInto\");\n                                   disambiguator = 0 };\n                                 { Types.data = (Types.ValueNs \"try_into\");\n                                   disambiguator = 0 }\n                                 ]\n                               }};\n                           hir_id = None;\n                           span =\n                           { Types.filename =\n                             (Types.Real\n                                (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                             hi = { Types.col = \"44\"; line = \"24\" };\n                             lo = { Types.col = \"36\"; line = \"24\" } };\n                           ty =\n                           (Types.Arrow\n                              { Types.bound_vars = [];\n                                value =\n                                { Types.abi = Types.Abi {todo = \"Rust\"};\n                                  c_variadic = false;\n                                  inputs = [(Types.Uint Types.Usize)];\n                                  output =\n                                  Types.Adt {\n                                    def_id =\n                                    { Types.index = (2, 41506);\n                                      krate = \"core\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"result\");\n                                         disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"Result\");\n                                          disambiguator = 0 }\n                                        ]\n                                      };\n                                    generic_args =\n                                    [(Types.Type (Types.Uint Types.U64));\n                                      (Types.Type\n                                         (Types.Alias\n                                            (Types.Projection,\n                                             { Types.def_id =\n                                               { Types.index = (2, 2518);\n                                                 krate = \"core\";\n                                                 path =\n                                                 [{ Types.data =\n                                                    (Types.TypeNs \"convert\");\n                                                    disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"TryInto\");\n                                                     disambiguator = 0 };\n                                                   { Types.data =\n                                                     (Types.TypeNs \"Error\");\n                                                     disambiguator = 0 }\n                                                   ]\n                                                 };\n                                               substs =\n                                               [(Types.Type\n                                                   (Types.Uint Types.Usize));\n                                                 (Types.Type\n                                                    (Types.Uint Types.U64))\n                                                 ];\n                                               trait_def_id =\n                                               (Some ({ Types.index =\n                                                        (2, 2516);\n                                                        krate = \"core\";\n                                                        path =\n                                                        [{ Types.data =\n                                                           (Types.TypeNs\n                                                              \"convert\");\n                                                           disambiguator = 0\n                                                           };\n                                                          { Types.data =\n                                                            (Types.TypeNs\n                                                               \"TryInto\");\n                                                            disambiguator = 0\n                                                            }\n                                                          ]\n                                                        },\n                                                      { Types.args =\n                                                        [{ Types.args = [];\n                                                           impl =\n                                                           Types.Builtin {\n                                                             trait =\n                                                             { Types.def_id =\n                                                               { Types.index =\n                                                                 (2, 2689);\n                                                                 krate =\n                                                                 \"core\";\n                                                                 path =\n                                                                 [{ Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                   { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                   ]\n                                                                 };\n                                                               generic_args =\n                                                               [(Types.Type\n                                                                   (Types.Uint\n                                                                    Types.Usize))\n                                                                 ]\n                                                               }}\n                                                           };\n                                                          { Types.args = [];\n                                                            impl =\n                                                            Types.Builtin {\n                                                              trait =\n                                                              { Types.def_id =\n                                                                { Types.index =\n                                                                  (2, 2689);\n                                                                  krate =\n                                                                  \"core\";\n                                                                  path =\n                                                                  [{ Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"marker\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                    { Types.data =\n                                                                    (Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }]\n                                                                  };\n                                                                generic_args =\n                                                                [(Types.Type\n                                                                    (\n                                                                    Types.Uint\n                                                                    Types.U64))\n                                                                  ]\n                                                                }}\n                                                            };\n                                                          { Types.args = [];\n                                                            impl =\n                                                            Types.Concrete {\n                                                              generics = [];\n                                                              id =\n                                                              { Types.index =\n                                                                (2, 31423);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"convert\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"num\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"ptr_try_from_impls\");\n                                                                    disambiguator =\n                                                                    0 };\n                                                                  { Types.data =\n                                                                    Types.Impl;\n                                                                    disambiguator =\n                                                                    3 }\n                                                                  ]\n                                                                }}\n                                                            }\n                                                          ];\n                                                        impl =\n                                                        Types.Concrete {\n                                                          generics =\n                                                          [(Types.Type\n                                                              (Types.Uint\n                                                                 Types.Usize));\n                                                            (Types.Type\n                                                               (Types.Uint\n                                                                  Types.U64))\n                                                            ];\n                                                          id =\n                                                          { Types.index =\n                                                            (2, 2546);\n                                                            krate = \"core\";\n                                                            path =\n                                                            [{ Types.data =\n                                                               (Types.TypeNs\n                                                                  \"convert\");\n                                                               disambiguator =\n                                                               0 };\n                                                              { Types.data =\n                                                                Types.Impl;\n                                                                disambiguator =\n                                                                6 }\n                                                              ]\n                                                            }}\n                                                        }))\n                                               })))\n                                      ]};\n                                  unsafety = Types.Normal }\n                                })\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.Usize));\n                           (Types.Type (Types.Uint Types.U64))];\n                         impl =\n                         (Some { Types.args =\n                                 [{ Types.args = [];\n                                    impl =\n                                    Types.Builtin {\n                                      trait =\n                                      { Types.def_id =\n                                        { Types.index = (2, 2689);\n                                          krate = \"core\";\n                                          path =\n                                          [{ Types.data =\n                                             (Types.TypeNs \"marker\");\n                                             disambiguator = 0 };\n                                            { Types.data =\n                                              (Types.TypeNs \"Sized\");\n                                              disambiguator = 0 }\n                                            ]\n                                          };\n                                        generic_args =\n                                        [(Types.Type (Types.Uint Types.Usize))\n                                          ]\n                                        }}\n                                    };\n                                   { Types.args = [];\n                                     impl =\n                                     Types.Builtin {\n                                       trait =\n                                       { Types.def_id =\n                                         { Types.index = (2, 2689);\n                                           krate = \"core\";\n                                           path =\n                                           [{ Types.data =\n                                              (Types.TypeNs \"marker\");\n                                              disambiguator = 0 };\n                                             { Types.data =\n                                               (Types.TypeNs \"Sized\");\n                                               disambiguator = 0 }\n                                             ]\n                                           };\n                                         generic_args =\n                                         [(Types.Type (Types.Uint Types.U64))\n                                           ]\n                                         }}\n                                     };\n                                   { Types.args = [];\n                                     impl =\n                                     Types.Concrete {generics = [];\n                                       id =\n                                       { Types.index = (2, 31423);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data =\n                                            (Types.TypeNs \"convert\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"num\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs\n                                                \"ptr_try_from_impls\");\n                                             disambiguator = 0 };\n                                           { Types.data = Types.Impl;\n                                             disambiguator = 3 }\n                                           ]\n                                         }}\n                                     }\n                                   ];\n                                 impl =\n                                 Types.Concrete {\n                                   generics =\n                                   [(Types.Type (Types.Uint Types.Usize));\n                                     (Types.Type (Types.Uint Types.U64))];\n                                   id =\n                                   { Types.index = (2, 2546); krate = \"core\";\n                                     path =\n                                     [{ Types.data = (Types.TypeNs \"convert\");\n                                        disambiguator = 0 };\n                                       { Types.data = Types.Impl;\n                                         disambiguator = 6 }\n                                       ]\n                                     }}\n                                 });\n                         ty =\n                         (Types.Arrow\n                            { Types.bound_vars = [];\n                              value =\n                              { Types.abi = Types.Abi {todo = \"Rust\"};\n                                c_variadic = false;\n                                inputs = [(Types.Uint Types.Usize)];\n                                output =\n                                Types.Adt {\n                                  def_id =\n                                  { Types.index = (2, 41506); krate = \"core\";\n                                    path =\n                                    [{ Types.data = (Types.TypeNs \"result\");\n                                       disambiguator = 0 };\n                                      { Types.data = (Types.TypeNs \"Result\");\n                                        disambiguator = 0 }\n                                      ]\n                                    };\n                                  generic_args =\n                                  [(Types.Type (Types.Uint Types.U64));\n                                    (Types.Type\n                                       (Types.Alias\n                                          (Types.Projection,\n                                           { Types.def_id =\n                                             { Types.index = (2, 2518);\n                                               krate = \"core\";\n                                               path =\n                                               [{ Types.data =\n                                                  (Types.TypeNs \"convert\");\n                                                  disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"TryInto\");\n                                                   disambiguator = 0 };\n                                                 { Types.data =\n                                                   (Types.TypeNs \"Error\");\n                                                   disambiguator = 0 }\n                                                 ]\n                                               };\n                                             substs =\n                                             [(Types.Type\n                                                 (Types.Uint Types.Usize));\n                                               (Types.Type\n                                                  (Types.Uint Types.U64))\n                                               ];\n                                             trait_def_id =\n                                             (Some ({ Types.index = (2, 2516);\n                                                      krate = \"core\";\n                                                      path =\n                                                      [{ Types.data =\n                                                         (Types.TypeNs\n                                                            \"convert\");\n                                                         disambiguator = 0 };\n                                                        { Types.data =\n                                                          (Types.TypeNs\n                                                             \"TryInto\");\n                                                          disambiguator = 0 }\n                                                        ]\n                                                      },\n                                                    { Types.args =\n                                                      [{ Types.args = [];\n                                                         impl =\n                                                         Types.Builtin {\n                                                           trait =\n                                                           { Types.def_id =\n                                                             { Types.index =\n                                                               (2, 2689);\n                                                               krate = \"core\";\n                                                               path =\n                                                               [{ Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"marker\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                 { Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"Sized\");\n                                                                   disambiguator =\n                                                                   0 }\n                                                                 ]\n                                                               };\n                                                             generic_args =\n                                                             [(Types.Type\n                                                                 (Types.Uint\n                                                                    Types.Usize))\n                                                               ]\n                                                             }}\n                                                         };\n                                                        { Types.args = [];\n                                                          impl =\n                                                          Types.Builtin {\n                                                            trait =\n                                                            { Types.def_id =\n                                                              { Types.index =\n                                                                (2, 2689);\n                                                                krate =\n                                                                \"core\";\n                                                                path =\n                                                                [{ Types.data =\n                                                                   (Types.TypeNs\n                                                                    \"marker\");\n                                                                   disambiguator =\n                                                                   0 };\n                                                                  { Types.data =\n                                                                    (\n                                                                    Types.TypeNs\n                                                                    \"Sized\");\n                                                                    disambiguator =\n                                                                    0 }\n                                                                  ]\n                                                                };\n                                                              generic_args =\n                                                              [(Types.Type\n                                                                  (Types.Uint\n                                                                    Types.U64))\n                                                                ]\n                                                              }}\n                                                          };\n                                                        { Types.args = [];\n                                                          impl =\n                                                          Types.Concrete {\n                                                            generics = [];\n                                                            id =\n                                                            { Types.index =\n                                                              (2, 31423);\n                                                              krate = \"core\";\n                                                              path =\n                                                              [{ Types.data =\n                                                                 (Types.TypeNs\n                                                                    \"convert\");\n                                                                 disambiguator =\n                                                                 0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"num\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  (Types.TypeNs\n                                                                    \"ptr_try_from_impls\");\n                                                                  disambiguator =\n                                                                  0 };\n                                                                { Types.data =\n                                                                  Types.Impl;\n                                                                  disambiguator =\n                                                                  3 }\n                                                                ]\n                                                              }}\n                                                          }\n                                                        ];\n                                                      impl =\n                                                      Types.Concrete {\n                                                        generics =\n                                                        [(Types.Type\n                                                            (Types.Uint\n                                                               Types.Usize));\n                                                          (Types.Type\n                                                             (Types.Uint\n                                                                Types.U64))\n                                                          ];\n                                                        id =\n                                                        { Types.index =\n                                                          (2, 2546);\n                                                          krate = \"core\";\n                                                          path =\n                                                          [{ Types.data =\n                                                             (Types.TypeNs\n                                                                \"convert\");\n                                                             disambiguator =\n                                                             0 };\n                                                            { Types.data =\n                                                              Types.Impl;\n                                                              disambiguator =\n                                                              6 }\n                                                            ]\n                                                          }}\n                                                      }))\n                                             })))\n                                    ]};\n                                unsafety = Types.Normal }\n                              })};\n                       hir_id = (Some (\"1634\", \"65\"));\n                       span =\n                       { Types.filename =\n                         (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                         hi = { Types.col = \"46\"; line = \"24\" };\n                         lo = { Types.col = \"24\"; line = \"24\" } };\n                       ty =\n                       Types.Adt {\n                         def_id =\n                         { Types.index = (2, 41506); krate = \"core\";\n                           path =\n                           [{ Types.data = (Types.TypeNs \"result\");\n                              disambiguator = 0 };\n                             { Types.data = (Types.TypeNs \"Result\");\n                               disambiguator = 0 }\n                             ]\n                           };\n                         generic_args =\n                         [(Types.Type (Types.Uint Types.U64));\n                           (Types.Type\n                              Types.Adt {\n                                def_id =\n                                { Types.index = (2, 21945); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"num\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"error\");\n                                      disambiguator = 0 };\n                                    { Types.data =\n                                      (Types.TypeNs \"TryFromIntError\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args = []})\n                           ]}\n                       }\n                      ];\n                    fn_span =\n                    { Types.filename =\n                      (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                      hi = { Types.col = \"55\"; line = \"24\" };\n                      lo = { Types.col = \"47\"; line = \"24\" } };\n                    from_hir_call = true;\n                    fun' =\n                    { Types.attributes = [];\n                      contents =\n                      Types.GlobalName {\n                        id =\n                        { Types.index = (2, 8514); krate = \"core\";\n                          path =\n                          [{ Types.data = (Types.TypeNs \"result\");\n                             disambiguator = 0 };\n                            { Types.data = Types.Impl; disambiguator = 0 };\n                            { Types.data = (Types.ValueNs \"unwrap\");\n                              disambiguator = 0 }\n                            ]\n                          }};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                        hi = { Types.col = \"53\"; line = \"24\" };\n                        lo = { Types.col = \"47\"; line = \"24\" } };\n                      ty =\n                      (Types.Arrow\n                         { Types.bound_vars = [];\n                           value =\n                           { Types.abi = Types.Abi {todo = \"Rust\"};\n                             c_variadic = false;\n                             inputs =\n                             [Types.Adt {\n                                def_id =\n                                { Types.index = (2, 41506); krate = \"core\";\n                                  path =\n                                  [{ Types.data = (Types.TypeNs \"result\");\n                                     disambiguator = 0 };\n                                    { Types.data = (Types.TypeNs \"Result\");\n                                      disambiguator = 0 }\n                                    ]\n                                  };\n                                generic_args =\n                                [(Types.Type (Types.Uint Types.U64));\n                                  (Types.Type\n                                     Types.Adt {\n                                       def_id =\n                                       { Types.index = (2, 21945);\n                                         krate = \"core\";\n                                         path =\n                                         [{ Types.data = (Types.TypeNs \"num\");\n                                            disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"error\");\n                                             disambiguator = 0 };\n                                           { Types.data =\n                                             (Types.TypeNs \"TryFromIntError\");\n                                             disambiguator = 0 }\n                                           ]\n                                         };\n                                       generic_args = []})\n                                  ]}\n                               ];\n                             output = (Types.Uint Types.U64);\n                             unsafety = Types.Normal }\n                           })\n                      };\n                    generic_args =\n                    [(Types.Type (Types.Uint Types.U64));\n                      (Types.Type\n                         Types.Adt {\n                           def_id =\n                           { Types.index = (2, 21945); krate = \"core\";\n                             path =\n                             [{ Types.data = (Types.TypeNs \"num\");\n                                disambiguator = 0 };\n                               { Types.data = (Types.TypeNs \"error\");\n                                 disambiguator = 0 };\n                               { Types.data =\n                                 (Types.TypeNs \"TryFromIntError\");\n                                 disambiguator = 0 }\n                               ]\n                             };\n                           generic_args = []})\n                      ];\n                    impl = None;\n                    ty =\n                    (Types.Arrow\n                       { Types.bound_vars = [];\n                         value =\n                         { Types.abi = Types.Abi {todo = \"Rust\"};\n                           c_variadic = false;\n                           inputs =\n                           [Types.Adt {\n                              def_id =\n                              { Types.index = (2, 41506); krate = \"core\";\n                                path =\n                                [{ Types.data = (Types.TypeNs \"result\");\n                                   disambiguator = 0 };\n                                  { Types.data = (Types.TypeNs \"Result\");\n                                    disambiguator = 0 }\n                                  ]\n                                };\n                              generic_args =\n                              [(Types.Type (Types.Uint Types.U64));\n                                (Types.Type\n                                   Types.Adt {\n                                     def_id =\n                                     { Types.index = (2, 21945);\n                                       krate = \"core\";\n                                       path =\n                                       [{ Types.data = (Types.TypeNs \"num\");\n                                          disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"error\");\n                                           disambiguator = 0 };\n                                         { Types.data =\n                                           (Types.TypeNs \"TryFromIntError\");\n                                           disambiguator = 0 }\n                                         ]\n                                       };\n                                     generic_args = []})\n                                ]}\n                             ];\n                           output = (Types.Uint Types.U64);\n                           unsafety = Types.Normal }\n                         })};\n                  hir_id = (Some (\"1634\", \"63\"));\n                  span =\n                  { Types.filename =\n                    (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                    hi = { Types.col = \"55\"; line = \"24\" };\n                    lo = { Types.col = \"24\"; line = \"24\" } };\n                  ty = (Types.Uint Types.U64) }\n                ];\n              fn_span =\n              { Types.filename =\n                (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                hi = { Types.col = \"21\"; line = \"25\" };\n                lo = { Types.col = \"20\"; line = \"21\" } };\n              from_hir_call = true;\n              fun' =\n              { Types.attributes = [];\n                contents =\n                Types.GlobalName {\n                  id =\n                  { Types.index = (21, 88); krate = \"libjade_sys\";\n                    path =\n                    [{ Types.data = (Types.TypeNs \"bindings\");\n                       disambiguator = 0 };\n                      { Types.data = Types.ForeignMod; disambiguator = 8 };\n                      { Types.data =\n                        (Types.ValueNs \"jade_hash_sha3_512_amd64_ref\");\n                        disambiguator = 0 }\n                      ]\n                    }};\n                hir_id = None;\n                span =\n                { Types.filename =\n                  (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n                  hi = { Types.col = \"45\"; line = \"66\" };\n                  lo = { Types.col = \"4\"; line = \"66\" } };\n                ty =\n                (Types.Arrow\n                   { Types.bound_vars = [];\n                     value =\n                     { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                       c_variadic = false;\n                       inputs =\n                       [(Types.RawPtr\n                           { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                         (Types.RawPtr\n                            { Types.mutbl = true; ty = (Types.Uint Types.U8)\n                              });\n                         (Types.Uint Types.U64)];\n                       output = (Types.Int Types.I32);\n                       unsafety = Types.Unsafe }\n                     })\n                };\n              generic_args = []; impl = None;\n              ty =\n              (Types.Arrow\n                 { Types.bound_vars = [];\n                   value =\n                   { Types.abi = Types.Abi {todo = \"C { unwind: false }\"};\n                     c_variadic = false;\n                     inputs =\n                     [(Types.RawPtr\n                         { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                       (Types.RawPtr\n                          { Types.mutbl = true; ty = (Types.Uint Types.U8) });\n                       (Types.Uint Types.U64)];\n                     output = (Types.Int Types.I32); unsafety = Types.Unsafe\n                     }\n                   })};\n            hir_id = (Some (\"1634\", \"49\"));\n            span =\n            { Types.filename =\n              (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n              hi = { Types.col = \"21\"; line = \"25\" };\n              lo = { Types.col = \"20\"; line = \"21\" } };\n            ty = (Types.Int Types.I32) });\n    opt_destruction_scope = None;\n    region_scope = { Types.data = Types.Node; id = \"71\" };\n    safety_mode = Types.ExplicitUnsafe;\n    span =\n    { Types.filename = (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n      hi = { Types.col = \"17\"; line = \"26\" };\n      lo = { Types.col = \"16\"; line = \"20\" } };\n    stmts = []; targeted_by_break = false};\n  hir_id = (Some (\"1634\", \"48\"));\n  span =\n  { Types.filename = (Types.Real (Types.LocalPath \"src/jasmin/sha3.rs\"));\n    hi = { Types.col = \"17\"; line = \"26\" };\n    lo = { Types.col = \"16\"; line = \"20\" } };\n  ty = (Types.Int Types.I32) }"

  in
  if r <>. 0l then Rust_primitives.Hax.repeat 0uy (sz 64) else digest
