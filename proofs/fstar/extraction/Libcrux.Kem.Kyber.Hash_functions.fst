module Libcrux.Kem.Kyber.Hash_functions
#set-options "--fuel 0 --ifuel 1 --z3rlimit 15"
open Core
open FStar.Mul

let v_G (input: t_Slice u8) = Libcrux.Digest.sha3_512_ input

let v_H (input: t_Slice u8) = Libcrux.Digest.sha3_256_ input

let v_PRF (v_LEN: usize) (input: t_Slice u8) = Libcrux.Digest.shake256 v_LEN input

let absorb (v_K: usize) (input: t_Array (t_Array u8 (sz 34)) v_K) =
  let _:Prims.unit =
    if true
    then
      let _:Prims.unit =
        if ~.((v_K =. sz 2 <: bool) || (v_K =. sz 3 <: bool) || (v_K =. sz 4 <: bool))
        then
          Rust_primitives.Hax.never_to_any (Core.Panicking.panic "assertion failed: K == 2 || K == 3 || K == 4"

              <:
              Rust_primitives.Hax.t_Never)
      in
      ()
  in
  let state:Libcrux.Digest.Incremental_x4.t_Shake128StateX4 =
    Libcrux.Digest.Incremental_x4.impl__Shake128StateX4__new ()
  in
  let data:t_Array (t_Slice u8) (sz 4) =
    let list =
      [
        Rust_primitives.Hax.failure ""
          "{ Types.attributes = [];\n  contents =\n  Types.ValueTypeAscription {\n    source =\n    { Types.attributes = [];\n      contents =\n      Types.Use {\n        source =\n        { Types.attributes = [];\n          contents =\n          Types.Pointer {cast = Types.Unsize;\n            source =\n            { Types.attributes = [];\n              contents =\n              Types.Borrow {\n                arg =\n                { Types.attributes = [];\n                  contents =\n                  Types.Deref {\n                    arg =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Borrow {\n                        arg =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Index {\n                            index =\n                            { Types.attributes = [];\n                              contents =\n                              Types.Literal {\n                                lit =\n                                { Types.node =\n                                  (Types.Int (\"0\", Types.Unsuffixed));\n                                  span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath\n                                          \"src/kem/kyber/hash_functions.rs\"));\n                                    hi = { Types.col = \"16\"; line = \"25\" };\n                                    lo = { Types.col = \"15\"; line = \"25\" } }\n                                  };\n                                neg = false};\n                              hir_id = (Some (\"871\", \"50\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"src/kem/kyber/hash_functions.rs\"));\n                                hi = { Types.col = \"16\"; line = \"25\" };\n                                lo = { Types.col = \"15\"; line = \"25\" } };\n                              ty = (Types.Uint Types.Usize) };\n                            lhs =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"2\";\n                                    owner =\n                                    { Types.index = (0, 871);\n                                      krate = \"libcrux\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"kem\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"kyber\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"hash_functions\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"absorb\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"input\" }};\n                              hir_id = (Some (\"871\", \"48\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"src/kem/kyber/hash_functions.rs\"));\n                                hi = { Types.col = \"14\"; line = \"25\" };\n                                lo = { Types.col = \"9\"; line = \"25\" } };\n                              ty =\n                              (Types.Array\n                                 ((Types.Array\n                                     ((Types.Uint Types.U8),\n                                      { Types.attributes = [];\n                                        contents =\n                                        (Types.Literal\n                                           (Types.Int\n                                              (Types.Uint (\"34\", Types.Usize))));\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath \"src/lib.rs\"));\n                                          hi =\n                                          { Types.col = \"0\"; line = \"1\" };\n                                          lo =\n                                          { Types.col = \"0\"; line = \"1\" } };\n                                        ty = (Types.Uint Types.Usize) })),\n                                  { Types.attributes = [];\n                                    contents =\n                                    Types.ConstRef {\n                                      id = { Types.index = 0; name = \"K\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) }))\n                              }};\n                          hir_id = (Some (\"871\", \"47\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"src/kem/kyber/hash_functions.rs\"));\n                            hi = { Types.col = \"17\"; line = \"25\" };\n                            lo = { Types.col = \"9\"; line = \"25\" } };\n                          ty =\n                          (Types.Array\n                             ((Types.Uint Types.U8),\n                              { Types.attributes = [];\n                                contents =\n                                (Types.Literal\n                                   (Types.Int\n                                      (Types.Uint (\"34\", Types.Usize))));\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                                  hi = { Types.col = \"0\"; line = \"1\" };\n                                  lo = { Types.col = \"0\"; line = \"1\" } };\n                                ty = (Types.Uint Types.Usize) }))\n                          };\n                        borrow_kind = Types.Shared};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                        hi = { Types.col = \"17\"; line = \"25\" };\n                        lo = { Types.col = \"8\"; line = \"25\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Array\n                             ((Types.Uint Types.U8),\n                              { Types.attributes = [];\n                                contents =\n                                (Types.Literal\n                                   (Types.Int\n                                      (Types.Uint (\"34\", Types.Usize))));\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                                  hi = { Types.col = \"0\"; line = \"1\" };\n                                  lo = { Types.col = \"0\"; line = \"1\" } };\n                                ty = (Types.Uint Types.Usize) })),\n                          false))\n                      }};\n                  hir_id = None;\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                    hi = { Types.col = \"17\"; line = \"25\" };\n                    lo = { Types.col = \"8\"; line = \"25\" } };\n                  ty =\n                  (Types.Array\n                     ((Types.Uint Types.U8),\n                      { Types.attributes = [];\n                        contents =\n                        (Types.Literal\n                           (Types.Int (Types.Uint (\"34\", Types.Usize))));\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                          hi = { Types.col = \"0\"; line = \"1\" };\n                          lo = { Types.col = \"0\"; line = \"1\" } };\n                        ty = (Types.Uint Types.Usize) }))\n                  };\n                borrow_kind = Types.Shared};\n              hir_id = None;\n              span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                hi = { Types.col = \"17\"; line = \"25\" };\n                lo = { Types.col = \"8\"; line = \"25\" } };\n              ty =\n              (Types.Ref\n                 ({ Types.kind = Types.ReErased },\n                  (Types.Array\n                     ((Types.Uint Types.U8),\n                      { Types.attributes = [];\n                        contents =\n                        (Types.Literal\n                           (Types.Int (Types.Uint (\"34\", Types.Usize))));\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                          hi = { Types.col = \"0\"; line = \"1\" };\n                          lo = { Types.col = \"0\"; line = \"1\" } };\n                        ty = (Types.Uint Types.Usize) })),\n                  false))\n              }};\n          hir_id = (Some (\"871\", \"46\"));\n          span =\n          { Types.filename =\n            (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n            hi = { Types.col = \"17\"; line = \"25\" };\n            lo = { Types.col = \"8\"; line = \"25\" } };\n          ty =\n          (Types.Ref\n             ({ Types.kind = Types.ReErased },\n              (Types.Slice (Types.Uint Types.U8)), false))\n          }};\n      hir_id = None;\n      span =\n      { Types.filename =\n        (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n        hi = { Types.col = \"26\"; line = \"25\" };\n        lo = { Types.col = \"8\"; line = \"25\" } };\n      ty =\n      (Types.Ref\n         ({ Types.kind = Types.ReErased },\n          (Types.Slice (Types.Uint Types.U8)), false))\n      };\n    user_ty =\n    (Some { Types.max_universe = \"0\"; value = (Types.Todo \"Ty(&[u8])\");\n            variables = [(Types.Region \"0\")] })};\n  hir_id = (Some (\"871\", \"45\"));\n  span =\n  { Types.filename =\n    (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n    hi = { Types.col = \"26\"; line = \"25\" };\n    lo = { Types.col = \"8\"; line = \"25\" } };\n  ty =\n  (Types.Ref\n     ({ Types.kind = Types.ReErased }, (Types.Slice (Types.Uint Types.U8)),\n      false))\n  }"
        ;
        Rust_primitives.Hax.failure ""
          "{ Types.attributes = [];\n  contents =\n  Types.ValueTypeAscription {\n    source =\n    { Types.attributes = [];\n      contents =\n      Types.Use {\n        source =\n        { Types.attributes = [];\n          contents =\n          Types.Pointer {cast = Types.Unsize;\n            source =\n            { Types.attributes = [];\n              contents =\n              Types.Borrow {\n                arg =\n                { Types.attributes = [];\n                  contents =\n                  Types.Deref {\n                    arg =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Borrow {\n                        arg =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Index {\n                            index =\n                            { Types.attributes = [];\n                              contents =\n                              Types.Literal {\n                                lit =\n                                { Types.node =\n                                  (Types.Int (\"1\", Types.Unsuffixed));\n                                  span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath\n                                          \"src/kem/kyber/hash_functions.rs\"));\n                                    hi = { Types.col = \"16\"; line = \"26\" };\n                                    lo = { Types.col = \"15\"; line = \"26\" } }\n                                  };\n                                neg = false};\n                              hir_id = (Some (\"871\", \"61\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"src/kem/kyber/hash_functions.rs\"));\n                                hi = { Types.col = \"16\"; line = \"26\" };\n                                lo = { Types.col = \"15\"; line = \"26\" } };\n                              ty = (Types.Uint Types.Usize) };\n                            lhs =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"2\";\n                                    owner =\n                                    { Types.index = (0, 871);\n                                      krate = \"libcrux\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"kem\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"kyber\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"hash_functions\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"absorb\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"input\" }};\n                              hir_id = (Some (\"871\", \"59\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"src/kem/kyber/hash_functions.rs\"));\n                                hi = { Types.col = \"14\"; line = \"26\" };\n                                lo = { Types.col = \"9\"; line = \"26\" } };\n                              ty =\n                              (Types.Array\n                                 ((Types.Array\n                                     ((Types.Uint Types.U8),\n                                      { Types.attributes = [];\n                                        contents =\n                                        (Types.Literal\n                                           (Types.Int\n                                              (Types.Uint (\"34\", Types.Usize))));\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath \"src/lib.rs\"));\n                                          hi =\n                                          { Types.col = \"0\"; line = \"1\" };\n                                          lo =\n                                          { Types.col = \"0\"; line = \"1\" } };\n                                        ty = (Types.Uint Types.Usize) })),\n                                  { Types.attributes = [];\n                                    contents =\n                                    Types.ConstRef {\n                                      id = { Types.index = 0; name = \"K\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) }))\n                              }};\n                          hir_id = (Some (\"871\", \"58\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"src/kem/kyber/hash_functions.rs\"));\n                            hi = { Types.col = \"17\"; line = \"26\" };\n                            lo = { Types.col = \"9\"; line = \"26\" } };\n                          ty =\n                          (Types.Array\n                             ((Types.Uint Types.U8),\n                              { Types.attributes = [];\n                                contents =\n                                (Types.Literal\n                                   (Types.Int\n                                      (Types.Uint (\"34\", Types.Usize))));\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                                  hi = { Types.col = \"0\"; line = \"1\" };\n                                  lo = { Types.col = \"0\"; line = \"1\" } };\n                                ty = (Types.Uint Types.Usize) }))\n                          };\n                        borrow_kind = Types.Shared};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                        hi = { Types.col = \"17\"; line = \"26\" };\n                        lo = { Types.col = \"8\"; line = \"26\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Array\n                             ((Types.Uint Types.U8),\n                              { Types.attributes = [];\n                                contents =\n                                (Types.Literal\n                                   (Types.Int\n                                      (Types.Uint (\"34\", Types.Usize))));\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                                  hi = { Types.col = \"0\"; line = \"1\" };\n                                  lo = { Types.col = \"0\"; line = \"1\" } };\n                                ty = (Types.Uint Types.Usize) })),\n                          false))\n                      }};\n                  hir_id = None;\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                    hi = { Types.col = \"17\"; line = \"26\" };\n                    lo = { Types.col = \"8\"; line = \"26\" } };\n                  ty =\n                  (Types.Array\n                     ((Types.Uint Types.U8),\n                      { Types.attributes = [];\n                        contents =\n                        (Types.Literal\n                           (Types.Int (Types.Uint (\"34\", Types.Usize))));\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                          hi = { Types.col = \"0\"; line = \"1\" };\n                          lo = { Types.col = \"0\"; line = \"1\" } };\n                        ty = (Types.Uint Types.Usize) }))\n                  };\n                borrow_kind = Types.Shared};\n              hir_id = None;\n              span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                hi = { Types.col = \"17\"; line = \"26\" };\n                lo = { Types.col = \"8\"; line = \"26\" } };\n              ty =\n              (Types.Ref\n                 ({ Types.kind = Types.ReErased },\n                  (Types.Array\n                     ((Types.Uint Types.U8),\n                      { Types.attributes = [];\n                        contents =\n                        (Types.Literal\n                           (Types.Int (Types.Uint (\"34\", Types.Usize))));\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                          hi = { Types.col = \"0\"; line = \"1\" };\n                          lo = { Types.col = \"0\"; line = \"1\" } };\n                        ty = (Types.Uint Types.Usize) })),\n                  false))\n              }};\n          hir_id = (Some (\"871\", \"57\"));\n          span =\n          { Types.filename =\n            (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n            hi = { Types.col = \"17\"; line = \"26\" };\n            lo = { Types.col = \"8\"; line = \"26\" } };\n          ty =\n          (Types.Ref\n             ({ Types.kind = Types.ReErased },\n              (Types.Slice (Types.Uint Types.U8)), false))\n          }};\n      hir_id = None;\n      span =\n      { Types.filename =\n        (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n        hi = { Types.col = \"26\"; line = \"26\" };\n        lo = { Types.col = \"8\"; line = \"26\" } };\n      ty =\n      (Types.Ref\n         ({ Types.kind = Types.ReErased },\n          (Types.Slice (Types.Uint Types.U8)), false))\n      };\n    user_ty =\n    (Some { Types.max_universe = \"0\"; value = (Types.Todo \"Ty(&[u8])\");\n            variables = [(Types.Region \"0\")] })};\n  hir_id = None;\n  span =\n  { Types.filename =\n    (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n    hi = { Types.col = \"26\"; line = \"26\" };\n    lo = { Types.col = \"8\"; line = \"26\" } };\n  ty =\n  (Types.Ref\n     ({ Types.kind = Types.ReErased }, (Types.Slice (Types.Uint Types.U8)),\n      false))\n  }"
        ;
        if v_K >. sz 2
        then
          Rust_primitives.Hax.failure ""
            "{ Types.attributes = [];\n  contents =\n  Types.ValueTypeAscription {\n    source =\n    { Types.attributes = [];\n      contents =\n      Types.Use {\n        source =\n        { Types.attributes = [];\n          contents =\n          Types.Pointer {cast = Types.Unsize;\n            source =\n            { Types.attributes = [];\n              contents =\n              Types.Borrow {\n                arg =\n                { Types.attributes = [];\n                  contents =\n                  Types.Deref {\n                    arg =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Borrow {\n                        arg =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Index {\n                            index =\n                            { Types.attributes = [];\n                              contents =\n                              Types.Literal {\n                                lit =\n                                { Types.node =\n                                  (Types.Int (\"2\", Types.Unsuffixed));\n                                  span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath\n                                          \"src/kem/kyber/hash_functions.rs\"));\n                                    hi = { Types.col = \"27\"; line = \"27\" };\n                                    lo = { Types.col = \"26\"; line = \"27\" } }\n                                  };\n                                neg = false};\n                              hir_id = (Some (\"871\", \"78\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"src/kem/kyber/hash_functions.rs\"));\n                                hi = { Types.col = \"27\"; line = \"27\" };\n                                lo = { Types.col = \"26\"; line = \"27\" } };\n                              ty = (Types.Uint Types.Usize) };\n                            lhs =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"2\";\n                                    owner =\n                                    { Types.index = (0, 871);\n                                      krate = \"libcrux\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"kem\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"kyber\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"hash_functions\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"absorb\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"input\" }};\n                              hir_id = (Some (\"871\", \"76\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"src/kem/kyber/hash_functions.rs\"));\n                                hi = { Types.col = \"25\"; line = \"27\" };\n                                lo = { Types.col = \"20\"; line = \"27\" } };\n                              ty =\n                              (Types.Array\n                                 ((Types.Array\n                                     ((Types.Uint Types.U8),\n                                      { Types.attributes = [];\n                                        contents =\n                                        (Types.Literal\n                                           (Types.Int\n                                              (Types.Uint (\"34\", Types.Usize))));\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath \"src/lib.rs\"));\n                                          hi =\n                                          { Types.col = \"0\"; line = \"1\" };\n                                          lo =\n                                          { Types.col = \"0\"; line = \"1\" } };\n                                        ty = (Types.Uint Types.Usize) })),\n                                  { Types.attributes = [];\n                                    contents =\n                                    Types.ConstRef {\n                                      id = { Types.index = 0; name = \"K\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) }))\n                              }};\n                          hir_id = (Some (\"871\", \"75\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"src/kem/kyber/hash_functions.rs\"));\n                            hi = { Types.col = \"28\"; line = \"27\" };\n                            lo = { Types.col = \"20\"; line = \"27\" } };\n                          ty =\n                          (Types.Array\n                             ((Types.Uint Types.U8),\n                              { Types.attributes = [];\n                                contents =\n                                (Types.Literal\n                                   (Types.Int\n                                      (Types.Uint (\"34\", Types.Usize))));\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                                  hi = { Types.col = \"0\"; line = \"1\" };\n                                  lo = { Types.col = \"0\"; line = \"1\" } };\n                                ty = (Types.Uint Types.Usize) }))\n                          };\n                        borrow_kind = Types.Shared};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                        hi = { Types.col = \"28\"; line = \"27\" };\n                        lo = { Types.col = \"19\"; line = \"27\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Array\n                             ((Types.Uint Types.U8),\n                              { Types.attributes = [];\n                                contents =\n                                (Types.Literal\n                                   (Types.Int\n                                      (Types.Uint (\"34\", Types.Usize))));\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                                  hi = { Types.col = \"0\"; line = \"1\" };\n                                  lo = { Types.col = \"0\"; line = \"1\" } };\n                                ty = (Types.Uint Types.Usize) })),\n                          false))\n                      }};\n                  hir_id = None;\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                    hi = { Types.col = \"28\"; line = \"27\" };\n                    lo = { Types.col = \"19\"; line = \"27\" } };\n                  ty =\n                  (Types.Array\n                     ((Types.Uint Types.U8),\n                      { Types.attributes = [];\n                        contents =\n                        (Types.Literal\n                           (Types.Int (Types.Uint (\"34\", Types.Usize))));\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                          hi = { Types.col = \"0\"; line = \"1\" };\n                          lo = { Types.col = \"0\"; line = \"1\" } };\n                        ty = (Types.Uint Types.Usize) }))\n                  };\n                borrow_kind = Types.Shared};\n              hir_id = None;\n              span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                hi = { Types.col = \"28\"; line = \"27\" };\n                lo = { Types.col = \"19\"; line = \"27\" } };\n              ty =\n              (Types.Ref\n                 ({ Types.kind = Types.ReErased },\n                  (Types.Array\n                     ((Types.Uint Types.U8),\n                      { Types.attributes = [];\n                        contents =\n                        (Types.Literal\n                           (Types.Int (Types.Uint (\"34\", Types.Usize))));\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                          hi = { Types.col = \"0\"; line = \"1\" };\n                          lo = { Types.col = \"0\"; line = \"1\" } };\n                        ty = (Types.Uint Types.Usize) })),\n                  false))\n              }};\n          hir_id = (Some (\"871\", \"74\"));\n          span =\n          { Types.filename =\n            (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n            hi = { Types.col = \"28\"; line = \"27\" };\n            lo = { Types.col = \"19\"; line = \"27\" } };\n          ty =\n          (Types.Ref\n             ({ Types.kind = Types.ReErased },\n              (Types.Slice (Types.Uint Types.U8)), false))\n          }};\n      hir_id = None;\n      span =\n      { Types.filename =\n        (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n        hi = { Types.col = \"37\"; line = \"27\" };\n        lo = { Types.col = \"19\"; line = \"27\" } };\n      ty =\n      (Types.Ref\n         ({ Types.kind = Types.ReErased },\n          (Types.Slice (Types.Uint Types.U8)), false))\n      };\n    user_ty =\n    (Some { Types.max_universe = \"0\"; value = (Types.Todo \"Ty(&[u8])\");\n            variables = [(Types.Region \"0\")] })};\n  hir_id = None;\n  span =\n  { Types.filename =\n    (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n    hi = { Types.col = \"37\"; line = \"27\" };\n    lo = { Types.col = \"19\"; line = \"27\" } };\n  ty =\n  (Types.Ref\n     ({ Types.kind = Types.ReErased }, (Types.Slice (Types.Uint Types.U8)),\n      false))\n  }"

        else
          Rust_primitives.unsize (let list = [] in
              FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 0);
              Rust_primitives.Hax.array_of_list 0 list);
        if v_K >. sz 3
        then
          Rust_primitives.Hax.failure ""
            "{ Types.attributes = [];\n  contents =\n  Types.ValueTypeAscription {\n    source =\n    { Types.attributes = [];\n      contents =\n      Types.Use {\n        source =\n        { Types.attributes = [];\n          contents =\n          Types.Pointer {cast = Types.Unsize;\n            source =\n            { Types.attributes = [];\n              contents =\n              Types.Borrow {\n                arg =\n                { Types.attributes = [];\n                  contents =\n                  Types.Deref {\n                    arg =\n                    { Types.attributes = [];\n                      contents =\n                      Types.Borrow {\n                        arg =\n                        { Types.attributes = [];\n                          contents =\n                          Types.Index {\n                            index =\n                            { Types.attributes = [];\n                              contents =\n                              Types.Literal {\n                                lit =\n                                { Types.node =\n                                  (Types.Int (\"3\", Types.Unsuffixed));\n                                  span =\n                                  { Types.filename =\n                                    (Types.Real\n                                       (Types.LocalPath\n                                          \"src/kem/kyber/hash_functions.rs\"));\n                                    hi = { Types.col = \"27\"; line = \"28\" };\n                                    lo = { Types.col = \"26\"; line = \"28\" } }\n                                  };\n                                neg = false};\n                              hir_id = (Some (\"871\", \"101\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"src/kem/kyber/hash_functions.rs\"));\n                                hi = { Types.col = \"27\"; line = \"28\" };\n                                lo = { Types.col = \"26\"; line = \"28\" } };\n                              ty = (Types.Uint Types.Usize) };\n                            lhs =\n                            { Types.attributes = [];\n                              contents =\n                              Types.VarRef {\n                                id =\n                                { Types.id =\n                                  { Types.local_id = \"2\";\n                                    owner =\n                                    { Types.index = (0, 871);\n                                      krate = \"libcrux\";\n                                      path =\n                                      [{ Types.data = (Types.TypeNs \"kem\");\n                                         disambiguator = 0 };\n                                        { Types.data = (Types.TypeNs \"kyber\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.TypeNs \"hash_functions\");\n                                          disambiguator = 0 };\n                                        { Types.data =\n                                          (Types.ValueNs \"absorb\");\n                                          disambiguator = 0 }\n                                        ]\n                                      }\n                                    };\n                                  name = \"input\" }};\n                              hir_id = (Some (\"871\", \"99\"));\n                              span =\n                              { Types.filename =\n                                (Types.Real\n                                   (Types.LocalPath\n                                      \"src/kem/kyber/hash_functions.rs\"));\n                                hi = { Types.col = \"25\"; line = \"28\" };\n                                lo = { Types.col = \"20\"; line = \"28\" } };\n                              ty =\n                              (Types.Array\n                                 ((Types.Array\n                                     ((Types.Uint Types.U8),\n                                      { Types.attributes = [];\n                                        contents =\n                                        (Types.Literal\n                                           (Types.Int\n                                              (Types.Uint (\"34\", Types.Usize))));\n                                        hir_id = None;\n                                        span =\n                                        { Types.filename =\n                                          (Types.Real\n                                             (Types.LocalPath \"src/lib.rs\"));\n                                          hi =\n                                          { Types.col = \"0\"; line = \"1\" };\n                                          lo =\n                                          { Types.col = \"0\"; line = \"1\" } };\n                                        ty = (Types.Uint Types.Usize) })),\n                                  { Types.attributes = [];\n                                    contents =\n                                    Types.ConstRef {\n                                      id = { Types.index = 0; name = \"K\" }};\n                                    hir_id = None;\n                                    span =\n                                    { Types.filename =\n                                      (Types.Real\n                                         (Types.LocalPath \"src/lib.rs\"));\n                                      hi = { Types.col = \"0\"; line = \"1\" };\n                                      lo = { Types.col = \"0\"; line = \"1\" } };\n                                    ty = (Types.Uint Types.Usize) }))\n                              }};\n                          hir_id = (Some (\"871\", \"98\"));\n                          span =\n                          { Types.filename =\n                            (Types.Real\n                               (Types.LocalPath\n                                  \"src/kem/kyber/hash_functions.rs\"));\n                            hi = { Types.col = \"28\"; line = \"28\" };\n                            lo = { Types.col = \"20\"; line = \"28\" } };\n                          ty =\n                          (Types.Array\n                             ((Types.Uint Types.U8),\n                              { Types.attributes = [];\n                                contents =\n                                (Types.Literal\n                                   (Types.Int\n                                      (Types.Uint (\"34\", Types.Usize))));\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                                  hi = { Types.col = \"0\"; line = \"1\" };\n                                  lo = { Types.col = \"0\"; line = \"1\" } };\n                                ty = (Types.Uint Types.Usize) }))\n                          };\n                        borrow_kind = Types.Shared};\n                      hir_id = None;\n                      span =\n                      { Types.filename =\n                        (Types.Real\n                           (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                        hi = { Types.col = \"28\"; line = \"28\" };\n                        lo = { Types.col = \"19\"; line = \"28\" } };\n                      ty =\n                      (Types.Ref\n                         ({ Types.kind = Types.ReErased },\n                          (Types.Array\n                             ((Types.Uint Types.U8),\n                              { Types.attributes = [];\n                                contents =\n                                (Types.Literal\n                                   (Types.Int\n                                      (Types.Uint (\"34\", Types.Usize))));\n                                hir_id = None;\n                                span =\n                                { Types.filename =\n                                  (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                                  hi = { Types.col = \"0\"; line = \"1\" };\n                                  lo = { Types.col = \"0\"; line = \"1\" } };\n                                ty = (Types.Uint Types.Usize) })),\n                          false))\n                      }};\n                  hir_id = None;\n                  span =\n                  { Types.filename =\n                    (Types.Real\n                       (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                    hi = { Types.col = \"28\"; line = \"28\" };\n                    lo = { Types.col = \"19\"; line = \"28\" } };\n                  ty =\n                  (Types.Array\n                     ((Types.Uint Types.U8),\n                      { Types.attributes = [];\n                        contents =\n                        (Types.Literal\n                           (Types.Int (Types.Uint (\"34\", Types.Usize))));\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                          hi = { Types.col = \"0\"; line = \"1\" };\n                          lo = { Types.col = \"0\"; line = \"1\" } };\n                        ty = (Types.Uint Types.Usize) }))\n                  };\n                borrow_kind = Types.Shared};\n              hir_id = None;\n              span =\n              { Types.filename =\n                (Types.Real\n                   (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n                hi = { Types.col = \"28\"; line = \"28\" };\n                lo = { Types.col = \"19\"; line = \"28\" } };\n              ty =\n              (Types.Ref\n                 ({ Types.kind = Types.ReErased },\n                  (Types.Array\n                     ((Types.Uint Types.U8),\n                      { Types.attributes = [];\n                        contents =\n                        (Types.Literal\n                           (Types.Int (Types.Uint (\"34\", Types.Usize))));\n                        hir_id = None;\n                        span =\n                        { Types.filename =\n                          (Types.Real (Types.LocalPath \"src/lib.rs\"));\n                          hi = { Types.col = \"0\"; line = \"1\" };\n                          lo = { Types.col = \"0\"; line = \"1\" } };\n                        ty = (Types.Uint Types.Usize) })),\n                  false))\n              }};\n          hir_id = (Some (\"871\", \"97\"));\n          span =\n          { Types.filename =\n            (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n            hi = { Types.col = \"28\"; line = \"28\" };\n            lo = { Types.col = \"19\"; line = \"28\" } };\n          ty =\n          (Types.Ref\n             ({ Types.kind = Types.ReErased },\n              (Types.Slice (Types.Uint Types.U8)), false))\n          }};\n      hir_id = None;\n      span =\n      { Types.filename =\n        (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n        hi = { Types.col = \"37\"; line = \"28\" };\n        lo = { Types.col = \"19\"; line = \"28\" } };\n      ty =\n      (Types.Ref\n         ({ Types.kind = Types.ReErased },\n          (Types.Slice (Types.Uint Types.U8)), false))\n      };\n    user_ty =\n    (Some { Types.max_universe = \"0\"; value = (Types.Todo \"Ty(&[u8])\");\n            variables = [(Types.Region \"0\")] })};\n  hir_id = None;\n  span =\n  { Types.filename =\n    (Types.Real (Types.LocalPath \"src/kem/kyber/hash_functions.rs\"));\n    hi = { Types.col = \"37\"; line = \"28\" };\n    lo = { Types.col = \"19\"; line = \"28\" } };\n  ty =\n  (Types.Ref\n     ({ Types.kind = Types.ReErased }, (Types.Slice (Types.Uint Types.U8)),\n      false))\n  }"

        else
          Rust_primitives.unsize (let list = [] in
              FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 0);
              Rust_primitives.Hax.array_of_list 0 list)
      ]
    in
    FStar.Pervasives.assert_norm (Prims.eq2 (List.Tot.length list) 4);
    Rust_primitives.Hax.array_of_list 4 list
  in
  let state:Libcrux.Digest.Incremental_x4.t_Shake128StateX4 =
    Libcrux.Digest.Incremental_x4.impl__Shake128StateX4__absorb_final state data
  in
  state

let free (xof_state: Libcrux.Digest.Incremental_x4.t_Shake128StateX4) =
  let _:Prims.unit = Libcrux.Digest.Incremental_x4.impl__Shake128StateX4__free xof_state in
  ()

let squeeze_block (v_K: usize) (xof_state: Libcrux.Digest.Incremental_x4.t_Shake128StateX4) =
  let tmp0, out1:(Libcrux.Digest.Incremental_x4.t_Shake128StateX4 &
    t_Array (t_Array u8 (sz 168)) v_K) =
    Libcrux.Digest.Incremental_x4.impl__Shake128StateX4__squeeze_blocks (sz 168) v_K xof_state
  in
  let xof_state:Libcrux.Digest.Incremental_x4.t_Shake128StateX4 = tmp0 in
  let (output: t_Array (t_Array u8 (sz 168)) v_K):t_Array (t_Array u8 (sz 168)) v_K = out1 in
  let out:t_Array (t_Array u8 (sz 168)) v_K =
    Rust_primitives.Hax.repeat (Rust_primitives.Hax.repeat 0uy (sz 168) <: t_Array u8 (sz 168)) v_K
  in
  let out:t_Array (t_Array u8 (sz 168)) v_K =
    Core.Iter.Traits.Iterator.f_fold (Core.Iter.Traits.Collect.f_into_iter ({
              Core.Ops.Range.f_start = sz 0;
              Core.Ops.Range.f_end = v_K
            }
            <:
            Core.Ops.Range.t_Range usize)
        <:
        Core.Ops.Range.t_Range usize)
      out
      (fun out i ->
          let out:t_Array (t_Array u8 (sz 168)) v_K = out in
          let i:usize = i in
          Rust_primitives.Hax.Monomorphized_update_at.update_at_usize out
            i
            (output.[ i ] <: t_Array u8 (sz 168))
          <:
          t_Array (t_Array u8 (sz 168)) v_K)
  in
  let hax_temp_output:t_Array (t_Array u8 (sz 168)) v_K = out in
  xof_state, hax_temp_output
  <:
  (Libcrux.Digest.Incremental_x4.t_Shake128StateX4 & t_Array (t_Array u8 (sz 168)) v_K)

let squeeze_three_blocks (v_K: usize) (xof_state: Libcrux.Digest.Incremental_x4.t_Shake128StateX4) =
  let tmp0, out1:(Libcrux.Digest.Incremental_x4.t_Shake128StateX4 &
    t_Array (t_Array u8 (sz 504)) v_K) =
    Libcrux.Digest.Incremental_x4.impl__Shake128StateX4__squeeze_blocks (sz 504) v_K xof_state
  in
  let xof_state:Libcrux.Digest.Incremental_x4.t_Shake128StateX4 = tmp0 in
  let (output: t_Array (t_Array u8 (sz 504)) v_K):t_Array (t_Array u8 (sz 504)) v_K = out1 in
  let out:t_Array (t_Array u8 (sz 504)) v_K =
    Rust_primitives.Hax.repeat (Rust_primitives.Hax.repeat 0uy (sz 504) <: t_Array u8 (sz 504)) v_K
  in
  let out:t_Array (t_Array u8 (sz 504)) v_K =
    Core.Iter.Traits.Iterator.f_fold (Core.Iter.Traits.Collect.f_into_iter ({
              Core.Ops.Range.f_start = sz 0;
              Core.Ops.Range.f_end = v_K
            }
            <:
            Core.Ops.Range.t_Range usize)
        <:
        Core.Ops.Range.t_Range usize)
      out
      (fun out i ->
          let out:t_Array (t_Array u8 (sz 504)) v_K = out in
          let i:usize = i in
          Rust_primitives.Hax.Monomorphized_update_at.update_at_usize out
            i
            (output.[ i ] <: t_Array u8 (sz 504))
          <:
          t_Array (t_Array u8 (sz 504)) v_K)
  in
  let hax_temp_output:t_Array (t_Array u8 (sz 504)) v_K = out in
  xof_state, hax_temp_output
  <:
  (Libcrux.Digest.Incremental_x4.t_Shake128StateX4 & t_Array (t_Array u8 (sz 504)) v_K)
