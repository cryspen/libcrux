(* File automatically generated by Hacspec *)
From Hacspec Require Import Hacspec_Lib MachineIntegers.
From Coq Require Import ZArith.
Import List.ListNotations.
Open Scope Z_scope.
Open Scope bool_scope.

Require Import Super.

Require Import Super. (* as KyberFieldElement *)

Require Import Super. (* as FIELD_MODULUS *)

Definition get_n_least_significant_bits (n : int8) (value : int32) : int32 :=
  let _ := (tt) : unit in
  value.&(((@repr WORDSIZE32 1) shift_left n).-(@repr WORDSIZE32 1)).

Definition compress_q (coefficient_bits : int8) (fe : int16) : int32 :=
  let _ := (tt) : unit in
  let _ := (tt) : unit in
  let compressed := ((cast fe) shift_left (coefficient_bits.+(@repr WORDSIZE8 1))) : int32 in
  let compressed := (compressed.+(cast v_FIELD_MODULUS)) : int32 in
  let compressed := (compressed./(cast (v_FIELD_MODULUS shift_left (@repr WORDSIZE32 1)))) : int32 in
  cast (get_n_least_significant_bits coefficient_bits compressed).

Definition decompress_q (coefficient_bits : int8) (fe : int32) : int32 :=
  let _ := (tt) : unit in
  let _ := (tt) : unit in
  let decompressed := ((cast fe).*(cast v_FIELD_MODULUS)) : int32 in
  let decompressed := ((decompressed shift_left (@repr WORDSIZE32 1)).+((@repr WORDSIZE32 1) shift_left coefficient_bits)) : int32 in
  let decompressed := (decompressed shift_right (coefficient_bits.+(@repr WORDSIZE8 1))) : int32 in
  cast decompressed.
