name: hax

on:
  push:
    branches: ["dev", "main"]
    paths:
      - 'specs/kyber/src/**'
      - 'src/kem/kyber/**'

  pull_request:
    branches: ["dev", "main"]
    paths:
      - 'specs/kyber/src/**'
      - 'src/kem/kyber/**'
      - 'proofs/fstar/**'

  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  hax:
    runs-on: "ubuntu-latest"

    steps:
      - uses: actions/checkout@v4
      - name: ⤵ Install and configure hax
        uses: hacspec/hax-actions@main

      - name: 🏃 Extract the Kyber reference code
        run: |
          (cd proofs/fstar/extraction/ && ./clean.sh)
          rm -f sys/platform/proofs/fstar/extraction/*.fst*
          ./hax-driver.py --kyber-reference

      - name: 🏃 Regenerate `extraction-*` folders
        run: ./proofs/fstar/patches.sh apply

      - name: 🏃 Make sure snapshots are up-to-date
        run: git diff --exit-code

      - name: 🏃 Verify the Kyber reference code
        run: ./hax-driver.py --verify-extraction

      - name: 🏃 Verify Kyber `extraction-edited` F* code
        run: make -C proofs/fstar/extraction-edited

      - name: 🏃 Verify Kyber `extraction-secret-independent` F* code
        run: make -C proofs/fstar/extraction-secret-independent

      - name: 🏃 Extract the Kyber specification
        run: |
          # Extract the functions in the compress module individually to test
          # the function-extraction code.
          # Extract functions from the remaining modules to test the
          # module-extraction code.
          ./hax-driver.py --crate-path specs/kyber \
            --functions hacspec_kyber::compress::compress \
                        hacspec_kyber::compress::decompress \
                        hacspec_kyber::compress::compress_d \
                        hacspec::kyber::compress::decompress_d \
            --modules ind_cpa \
                      hacspec_kyber \
                      matrix \
                      ntt \
                      parameters \
                      sampling \
                      serialize \
            --exclude-modules libcrux::hacl::sha3 libcrux::digest
