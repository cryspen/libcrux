name: SHA3 - hax

on:
  merge_group:
    paths:
      - "libcrux-sha3/**"
  pull_request:
    branches: ["dev", "main"]
    paths:
      - "libcrux-sha3/**"

  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:
    inputs:
      hax_ref:
        description: "The hax revision you want this job to use"
        required: false
        type: string

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # NOTE: This always runs, even if the `hax_ref` workflow input is provided.
  # TODO: Move this reusable workflow to a standalone action
  get-hax-ref:
    uses: ./.github/workflows/get-hax-ref.yml

  extract:
    runs-on: ubuntu-latest
    needs:
      - get-hax-ref

    steps:
      - uses: actions/checkout@v5
      - uses: hacspec/hax-actions@main
        with:
          hax_reference: ${{ github.event.inputs.hax_ref || needs.get-hax-ref.outputs.hax_ref }}
          fstar: v2025.02.17

      - name: üèÉ Extract SHA3 crate
        working-directory: libcrux-sha3
        run: ./hax.py extract

      - name: ‚Üë Upload F* extraction (standard)
        uses: actions/upload-artifact@v4
        with:
          name: fstar-extractions-standard
          path: "**/proofs/fstar"
          include-hidden-files: true
          if-no-files-found: error

  extract-portable:
    if: ${{ github.event_name != 'merge_group' }}
    runs-on: ubuntu-latest
    needs:
      - get-hax-ref

    steps:
      - uses: actions/checkout@v5
      - uses: hacspec/hax-actions@main
        with:
          hax_reference: ${{ github.event.inputs.hax_ref || needs.get-hax-ref.outputs.hax_ref }}
          fstar: v2025.02.17

      - name: üèÉ Extract SHA3 crate (portable)
        working-directory: libcrux-sha3
        run: ./hax.py extract --portable

      - name: ‚Üë Upload F* extraction (portable)
        uses: actions/upload-artifact@v4
        with:
          name: fstar-extractions-portable
          path: "**/proofs/fstar"
          include-hidden-files: true
          if-no-files-found: error

  lax-portable:
    runs-on: ubuntu-latest
    needs:
      - get-hax-ref
      - extract-portable
    if: ${{ github.event_name != 'merge_group' }}
    steps:
      - uses: actions/checkout@v5
      - uses: hacspec/hax-actions@main
        with:
          hax_reference: ${{ github.event.inputs.hax_ref || needs.get-hax-ref.outputs.hax_ref }}
          fstar: v2025.02.17

      - uses: actions/download-artifact@v5
        with:
          name: fstar-extractions-portable
          path: .

      - name: üèÉ Lax SHA3 crate (portable)
        working-directory: libcrux-sha3
        run: ./hax.py prove --admit

  type-check-portable:
    runs-on: ubuntu-latest
    needs:
      - get-hax-ref
      - extract-portable
    if: ${{ github.event_name != 'merge_group' }}
    steps:
      - uses: actions/checkout@v5
      - uses: hacspec/hax-actions@main
        with:
          hax_reference: ${{ github.event.inputs.hax_ref || needs.get-hax-ref.outputs.hax_ref }}
          fstar: v2025.02.17

      - uses: actions/download-artifact@v5
        with:
          name: fstar-extractions-portable
          path: .

      - name: üèÉ Full type check SHA3 crate (portable)
        working-directory: libcrux-sha3
        run: ./hax.py prove

  sha3-extract-hax-status:
    if: ${{ always() }}
    needs: [get-hax-ref, extract]
    runs-on: ubuntu-latest
    steps:
      - name: Successful
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failing
        if: ${{ (contains(needs.*.result, 'failure')) }}
        run: exit 1

  sha3-type-check-portable-hax-status:
    if: ${{ always() }}
    needs: [get-hax-ref, lax-portable, type-check-portable]
    runs-on: ubuntu-latest
    steps:
      - name: Successful
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Failing
        if: ${{ (contains(needs.*.result, 'failure')) }}
        run: exit 1
