name: ML-DSA - hax

on:
  merge_group:
  push:
    branches: ["dev", "main"]

  pull_request:
    branches: ["dev", "main"]

  schedule:
    - cron: "0 0 * * *"

  workflow_dispatch:
    inputs:
      hax_rev:
        description: "The hax revision you want this job to use"
        default: "main"

env:
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  extract:
    if: ${{ github.event_name != 'merge_group' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: hacspec/hax-actions@main
        with:
          hax_reference: ${{ github.event.inputs.hax_rev || 'main' }}
          fstar: v2025.03.25

      - name: üèÉ Extract ML-DSA crate
        working-directory: libcrux-ml-dsa
        run: ./hax.sh extract

      - name: ‚Üë Upload F* extraction
        uses: actions/upload-artifact@v4
        with:
          name: fstar-extractions
          path: "**/proofs/fstar"
          include-hidden-files: true
          if-no-files-found: error

  lax:
    runs-on: ubuntu-latest
    needs:
      - extract
    if: ${{ github.event_name != 'merge_group' }}
    steps:
      - uses: actions/checkout@v4
      - uses: hacspec/hax-actions@main
        with:
          hax_reference: ${{ github.event.inputs.hax_rev || 'main' }}
          fstar: v2025.03.25

      - uses: actions/download-artifact@v4
        with:
          name: fstar-extractions
          path: .

      - name: üèÉ Lax ML-DSA crate
        working-directory: libcrux-ml-dsa
        run: ./hax.sh prove --admit
  
  prove:
    runs-on: self-hosted
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    needs:
      - extract
    steps:
      - uses: actions/checkout@v4
      - uses: actions/checkout@v4
        with:
          repository: cryspen/hax
          path: hax
          ref: ${{ github.event.inputs.hax_rev || 'main' }}
      - name: ‚§µ Install hax
        run: |
          nix profile install ./hax
      - name: ‚§µ Install FStar
        run: nix profile install github:FStarLang/FStar/v2025.02.17

      - uses: actions/download-artifact@v4
        with:
          name: fstar-extractions
          path: .

      - name: üèÉ Prove ML-DSA crate
        working-directory: libcrux-ml-dsa
        run: ./hax.sh prove
        
  mldsa-extract-hax-status:
    if: ${{ always() }}
    needs: [extract]
    runs-on: ubuntu-latest
    steps:
      - name: Successful
        if: ${{ !(contains(needs.*.result, 'failure')) }} 
        run: exit 0 
      - name: Failing
        if: ${{ (contains(needs.*.result, 'failure')) }} 
        run: exit 1 

  mldsa-lax-hax-status:
    if: ${{ always() }}
    needs: [lax]
    runs-on: ubuntu-latest
    steps:
      - name: Successful
        if: ${{ !(contains(needs.*.result, 'failure')) }} 
        run: exit 0 
      - name: Failing
        if: ${{ (contains(needs.*.result, 'failure')) }} 
        run: exit 1 
