[package]
name = "libcrux-ml-dsa"
description = "Libcrux ML-DSA implementation"
version = "0.0.3"
readme = "README.md"

authors.workspace = true
license.workspace = true
homepage.workspace = true
edition.workspace = true
repository.workspace = true

[lib]
bench = false # so libtest doesn't eat the arguments to criterion

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
libcrux-sha3 = { version = "0.0.3", path = "../libcrux-sha3" }
libcrux-intrinsics = { version = "0.0.3", path = "../libcrux-intrinsics" }
libcrux-platform = { version = "0.0.2", path = "../sys/platform" }
libcrux-macros = { version = "=0.0.3", path = "../macros" }
libcrux-traits = { version = "=0.0.3", path = "../traits/" }
libcrux-secrets = { version = "=0.0.3", path = "../secrets/" }
hax-lib.workspace = true

[dev-dependencies]
rand = { version = "0.9" }
hex = { version = "0.4.3", features = ["serde"] }
serde_json = { version = "1.0" }
serde = { version = "1.0", features = ["derive"] }
criterion = "0.7"
libcrux-kats = { version = "0.0.3", path = "../crates/testing/kats", features = [
    "mldsa",
] }

# This doesn't build on intel macos.
[target.'cfg(not(all(target_os = "macos", target_arch = "x86_64")))'.dev-dependencies]
pqcrypto-mldsa = { version = "0.1.0" } #, default-features = false

[target.'cfg(hax)'.dependencies]
core-models = { path = "../fstar-helpers/core-models", version = "0.0.3" }

[features]
default = ["std", "mldsa44", "mldsa65", "mldsa87"]
simd128 = ["libcrux-sha3/simd128", "libcrux-intrinsics/simd128"]
simd256 = ["libcrux-sha3/simd256", "libcrux-intrinsics/simd256"]
acvp = []                                                        # expose internal API for ACVP testing
test-utils = []                                                  # exposing internal functions for testing


# This doesn't check the secret independence of the implementation, but sets the
# exposed API into secret independence checking mode.
expose-secret-independence = ["libcrux-secrets/check-secret-independence"]

# Features for the different key sizes of ML-DSA
mldsa44 = []
mldsa65 = []
mldsa87 = []

# std support
std = []

[[bench]]
name = "manual44"
harness = false

[[bench]]
name = "manual65"
harness = false

[[bench]]
name = "manual87"
harness = false

[[bench]]
name = "ml-dsa"
harness = false

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(hax)'] }
