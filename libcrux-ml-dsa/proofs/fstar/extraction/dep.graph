digraph {
  "fstar_reflection_const" -> "fstar_pervasives"
  "fstar_reflection_const" -> "fstar_pervasives"
  "fstar_reflection_const" -> "prims"
  "fstar_reflection_const" -> "prims"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "core"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "prims"
  "libcrux_ml_dsa_ntt" -> "fstar_int32"
  "libcrux_ml_dsa_ntt" -> "fstar_int32"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_ntt" -> "core_slice"
  "libcrux_ml_dsa_ntt" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_ntt" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_ntt" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_ntt" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_ntt" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_ntt" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_ntt" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_ntt" -> "core"
  "libcrux_ml_dsa_ntt" -> "core"
  "libcrux_ml_dsa_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_ntt" -> "prims"
  "libcrux_ml_dsa_ntt" -> "prims"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_ntt"
  "libcrux_sha3_portable" -> "libcrux_sha3_generic_keccak"
  "libcrux_sha3_portable" -> "libcrux_sha3_generic_keccak"
  "libcrux_sha3_portable" -> "fstar_mul"
  "libcrux_sha3_portable" -> "fstar_mul"
  "libcrux_sha3_portable" -> "core"
  "libcrux_sha3_portable" -> "core"
  "libcrux_sha3_portable" -> "fstar_pervasives"
  "libcrux_sha3_portable" -> "fstar_pervasives"
  "libcrux_sha3_portable" -> "prims"
  "libcrux_sha3_portable" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44_" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_44_" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44_" -> "libcrux_ml_dsa_ml_dsa_generic_multiplexing"
  "libcrux_ml_dsa_ml_dsa_44_" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44_" -> "core"
  "libcrux_ml_dsa_ml_dsa_44_" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44_" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44_" -> "libcrux_ml_dsa_ml_dsa_44_"
  "fstar_functionalextensionality" -> "fstar_pervasives"
  "fstar_functionalextensionality" -> "fstar_pervasives"
  "fstar_functionalextensionality" -> "prims"
  "fstar_functionalextensionality" -> "prims"
  "core_ops_range" -> "rust_primitives_hax"
  "core_ops_range" -> "rust_primitives_hax"
  "core_ops_range" -> "fstar_seq"
  "core_ops_range" -> "fstar_seq"
  "core_ops_range" -> "core_ops_index"
  "core_ops_range" -> "core_ops_index"
  "core_ops_range" -> "fstar_tactics_typeclasses"
  "core_ops_range" -> "fstar_tactics_typeclasses"
  "core_ops_range" -> "fstar_pervasives_native"
  "core_ops_range" -> "fstar_pervasives_native"
  "core_ops_range" -> "core_iter_traits_iterator"
  "core_ops_range" -> "core_iter_traits_iterator"
  "core_ops_range" -> "rust_primitives"
  "core_ops_range" -> "rust_primitives"
  "core_ops_range" -> "fstar_pervasives"
  "core_ops_range" -> "fstar_pervasives"
  "core_ops_range" -> "prims"
  "core_ops_range" -> "prims"
  "fstar_bitvector" -> "fstar_seq"
  "fstar_bitvector" -> "fstar_seq"
  "fstar_bitvector" -> "fstar_mul"
  "fstar_bitvector" -> "fstar_mul"
  "fstar_bitvector" -> "fstar_pervasives"
  "fstar_bitvector" -> "fstar_pervasives"
  "fstar_bitvector" -> "prims"
  "fstar_bitvector" -> "prims"
  "fstar_bitvector" -> "fstar_bitvector"
  "fstar_sealed_inhabited" -> "fstar_sealed"
  "fstar_sealed_inhabited" -> "fstar_pervasives"
  "fstar_sealed_inhabited" -> "fstar_pervasives"
  "fstar_sealed_inhabited" -> "prims"
  "fstar_sealed_inhabited" -> "prims"
  "core_fmt" -> "core_fmt_rt"
  "core_fmt" -> "fstar_tactics_typeclasses"
  "core_fmt" -> "fstar_tactics_typeclasses"
  "core_fmt" -> "core_result"
  "core_fmt" -> "core_result"
  "core_fmt" -> "rust_primitives"
  "core_fmt" -> "rust_primitives"
  "core_fmt" -> "fstar_pervasives"
  "core_fmt" -> "fstar_pervasives"
  "core_fmt" -> "prims"
  "core_fmt" -> "prims"
  "libcrux_sha3_generic_keccak" -> "libcrux_sha3_traits"
  "libcrux_sha3_generic_keccak" -> "libcrux_sha3_traits"
  "libcrux_sha3_generic_keccak" -> "fstar_mul"
  "libcrux_sha3_generic_keccak" -> "fstar_mul"
  "libcrux_sha3_generic_keccak" -> "core"
  "libcrux_sha3_generic_keccak" -> "core"
  "libcrux_sha3_generic_keccak" -> "fstar_pervasives"
  "libcrux_sha3_generic_keccak" -> "fstar_pervasives"
  "libcrux_sha3_generic_keccak" -> "prims"
  "libcrux_sha3_generic_keccak" -> "prims"
  "libcrux_sha3_generic_keccak" -> "libcrux_sha3_generic_keccak"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "prims"
  "fstar_reflection_v1_derived" -> "fstar_list_tot_base"
  "fstar_reflection_v1_derived" -> "fstar_list_tot_base"
  "fstar_reflection_v1_derived" -> "fstar_pervasives_native"
  "fstar_reflection_v1_derived" -> "fstar_pervasives_native"
  "fstar_reflection_v1_derived" -> "fstar_vconfig"
  "fstar_reflection_v1_derived" -> "fstar_order"
  "fstar_reflection_v1_derived" -> "fstar_order"
  "fstar_reflection_v1_derived" -> "fstar_stubs_reflection_v1_data"
  "fstar_reflection_v1_derived" -> "fstar_stubs_reflection_v1_builtins"
  "fstar_reflection_v1_derived" -> "fstar_reflection_const"
  "fstar_reflection_v1_derived" -> "fstar_reflection_const"
  "fstar_reflection_v1_derived" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v1_derived" -> "fstar_pervasives"
  "fstar_reflection_v1_derived" -> "fstar_pervasives"
  "fstar_reflection_v1_derived" -> "prims"
  "fstar_reflection_v1_derived" -> "prims"
  "fstar_tactics_v1_logic" -> "fstar_pervasives_native"
  "fstar_tactics_v1_logic" -> "fstar_pervasives_native"
  "fstar_tactics_v1_logic" -> "fstar_stubs_tactics_v1_builtins"
  "fstar_tactics_v1_logic" -> "fstar_stubs_tactics_types"
  "fstar_tactics_v1_logic" -> "fstar_tactics_v1_logic_lemmas"
  "fstar_tactics_v1_logic" -> "fstar_tactics_v1_logic_lemmas"
  "fstar_tactics_v1_logic" -> "fstar_reflection_v1_formula"
  "fstar_tactics_v1_logic" -> "fstar_reflection_v1_formula"
  "fstar_tactics_v1_logic" -> "fstar_reflection_v1"
  "fstar_tactics_v1_logic" -> "fstar_reflection_v1"
  "fstar_tactics_v1_logic" -> "fstar_tactics_effect"
  "fstar_tactics_v1_logic" -> "fstar_tactics_effect"
  "fstar_tactics_v1_logic" -> "fstar_pervasives"
  "fstar_tactics_v1_logic" -> "fstar_pervasives"
  "fstar_tactics_v1_logic" -> "prims"
  "fstar_tactics_v1_logic" -> "prims"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "core"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "core"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "prims"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "prims"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "libcrux_ml_dsa_simd_avx2_vector_type"
  "fstar_uint8" -> "fstar_uint32"
  "fstar_uint8" -> "fstar_uint32"
  "fstar_uint8" -> "fstar_mul"
  "fstar_uint8" -> "fstar_mul"
  "fstar_uint8" -> "fstar_uint"
  "fstar_uint8" -> "fstar_uint"
  "fstar_uint8" -> "fstar_pervasives"
  "fstar_uint8" -> "fstar_pervasives"
  "fstar_uint8" -> "prims"
  "fstar_uint8" -> "prims"
  "fstar_tactics_bv" -> "fstar_pervasives_native"
  "fstar_tactics_bv" -> "fstar_pervasives_native"
  "fstar_tactics_bv" -> "fstar_tactics_bv_lemmas"
  "fstar_tactics_bv" -> "fstar_tactics_bv_lemmas"
  "fstar_tactics_bv" -> "fstar_uint"
  "fstar_tactics_bv" -> "fstar_uint"
  "fstar_tactics_bv" -> "fstar_bv"
  "fstar_tactics_bv" -> "fstar_bv"
  "fstar_tactics_bv" -> "fstar_reflection_v2_arith"
  "fstar_tactics_bv" -> "fstar_reflection_v2_arith"
  "fstar_tactics_bv" -> "fstar_reflection_v2_formula"
  "fstar_tactics_bv" -> "fstar_reflection_v2_formula"
  "fstar_tactics_bv" -> "fstar_tactics_v2"
  "fstar_tactics_bv" -> "fstar_tactics_v2"
  "fstar_tactics_bv" -> "fstar_pervasives"
  "fstar_tactics_bv" -> "fstar_pervasives"
  "fstar_tactics_bv" -> "prims"
  "fstar_tactics_bv" -> "prims"
  "fstar_tactics_bv" -> "fstar_tactics_bv"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_int64"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_int64"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core_ops_range"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core_slice"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "libcrux_ml_dsa_simd_avx2_encoding_t0"
  "rust_primitives_arrays" -> "fstar_pervasives_native"
  "rust_primitives_arrays" -> "fstar_pervasives_native"
  "rust_primitives_arrays" -> "lib_inttypes"
  "rust_primitives_arrays" -> "lib_inttypes"
  "rust_primitives_arrays" -> "fstar_list_tot"
  "rust_primitives_arrays" -> "fstar_list_tot"
  "rust_primitives_arrays" -> "fstar_seq"
  "rust_primitives_arrays" -> "fstar_seq"
  "rust_primitives_arrays" -> "fstar_mul"
  "rust_primitives_arrays" -> "fstar_mul"
  "rust_primitives_arrays" -> "rust_primitives_integers"
  "rust_primitives_arrays" -> "rust_primitives_integers"
  "rust_primitives_arrays" -> "fstar_pervasives"
  "rust_primitives_arrays" -> "fstar_pervasives"
  "rust_primitives_arrays" -> "prims"
  "rust_primitives_arrays" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "core_num"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "core_ops_range"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_ml_dsa_simd_avx2_encoding_error"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_ml_dsa_simd_avx2_encoding_error"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "prims"
  "fstar_seq" -> "fstar_seq_properties"
  "fstar_seq" -> "fstar_seq_properties"
  "fstar_seq" -> "fstar_seq_base"
  "fstar_seq" -> "fstar_seq_base"
  "fstar_seq" -> "fstar_pervasives"
  "fstar_seq" -> "fstar_pervasives"
  "fstar_seq" -> "prims"
  "fstar_seq" -> "prims"
  "rust_primitives_arrays" -> "fstar_seq"
  "rust_primitives_arrays" -> "fstar_seq"
  "rust_primitives_arrays" -> "lib_inttypes"
  "rust_primitives_arrays" -> "lib_inttypes"
  "rust_primitives_arrays" -> "fstar_list_tot"
  "rust_primitives_arrays" -> "fstar_list_tot"
  "rust_primitives_arrays" -> "rust_primitives_integers"
  "rust_primitives_arrays" -> "rust_primitives_integers"
  "rust_primitives_arrays" -> "fstar_pervasives"
  "rust_primitives_arrays" -> "fstar_pervasives"
  "rust_primitives_arrays" -> "prims"
  "rust_primitives_arrays" -> "prims"
  "rust_primitives_arrays" -> "rust_primitives_arrays"
  "fstar_int64" -> "fstar_uint"
  "fstar_int64" -> "fstar_uint"
  "fstar_int64" -> "fstar_uint32"
  "fstar_int64" -> "fstar_uint32"
  "fstar_int64" -> "fstar_mul"
  "fstar_int64" -> "fstar_mul"
  "fstar_int64" -> "fstar_int"
  "fstar_int64" -> "fstar_int"
  "fstar_int64" -> "fstar_pervasives"
  "fstar_int64" -> "fstar_pervasives"
  "fstar_int64" -> "prims"
  "fstar_int64" -> "prims"
  "core_iter_traits_iterator" -> "fstar_tactics_typeclasses"
  "core_iter_traits_iterator" -> "fstar_tactics_typeclasses"
  "core_iter_traits_iterator" -> "core_iter_adapters_step_by"
  "core_iter_traits_iterator" -> "core_iter_adapters_step_by"
  "core_iter_traits_iterator" -> "core_iter_adapters_enumerate"
  "core_iter_traits_iterator" -> "core_iter_adapters_enumerate"
  "core_iter_traits_iterator" -> "rust_primitives"
  "core_iter_traits_iterator" -> "rust_primitives"
  "core_iter_traits_iterator" -> "fstar_pervasives"
  "core_iter_traits_iterator" -> "fstar_pervasives"
  "core_iter_traits_iterator" -> "prims"
  "core_iter_traits_iterator" -> "prims"
  "core_slice_iter" -> "rust_primitives"
  "core_slice_iter" -> "rust_primitives"
  "core_slice_iter" -> "fstar_pervasives"
  "core_slice_iter" -> "fstar_pervasives"
  "core_slice_iter" -> "prims"
  "core_slice_iter" -> "prims"
  "core_option" -> "fstar_pervasives"
  "core_option" -> "fstar_pervasives"
  "core_option" -> "prims"
  "core_option" -> "prims"
  "fstar_tactics_bv_lemmas" -> "fstar_uint"
  "fstar_tactics_bv_lemmas" -> "fstar_uint"
  "fstar_tactics_bv_lemmas" -> "fstar_bv"
  "fstar_tactics_bv_lemmas" -> "fstar_bv"
  "fstar_tactics_bv_lemmas" -> "fstar_pervasives"
  "fstar_tactics_bv_lemmas" -> "fstar_pervasives"
  "fstar_tactics_bv_lemmas" -> "prims"
  "fstar_tactics_bv_lemmas" -> "prims"
  "libcrux_sha3_generic_keccak" -> "fstar_tactics_typeclasses"
  "libcrux_sha3_generic_keccak" -> "fstar_tactics_typeclasses"
  "libcrux_sha3_generic_keccak" -> "libcrux_sha3_traits"
  "libcrux_sha3_generic_keccak" -> "libcrux_sha3_traits"
  "libcrux_sha3_generic_keccak" -> "fstar_mul"
  "libcrux_sha3_generic_keccak" -> "fstar_mul"
  "libcrux_sha3_generic_keccak" -> "core"
  "libcrux_sha3_generic_keccak" -> "core"
  "libcrux_sha3_generic_keccak" -> "fstar_pervasives"
  "libcrux_sha3_generic_keccak" -> "fstar_pervasives"
  "libcrux_sha3_generic_keccak" -> "prims"
  "libcrux_sha3_generic_keccak" -> "prims"
  "fstar_uint" -> "fstar_seq_base"
  "fstar_uint" -> "fstar_seq_base"
  "fstar_uint" -> "fstar_math_lemmas"
  "fstar_uint" -> "fstar_math_lemmas"
  "fstar_uint" -> "fstar_bitvector"
  "fstar_uint" -> "fstar_bitvector"
  "fstar_uint" -> "fstar_mul"
  "fstar_uint" -> "fstar_mul"
  "fstar_uint" -> "fstar_pervasives"
  "fstar_uint" -> "fstar_pervasives"
  "fstar_uint" -> "prims"
  "fstar_uint" -> "prims"
  "fstar_math_lib" -> "fstar_mul"
  "fstar_math_lib" -> "fstar_mul"
  "fstar_math_lib" -> "fstar_pervasives"
  "fstar_math_lib" -> "fstar_pervasives"
  "fstar_math_lib" -> "prims"
  "fstar_math_lib" -> "prims"
  "fstar_reflection_v2_arith" -> "fstar_classical"
  "fstar_reflection_v2_arith" -> "fstar_classical"
  "fstar_reflection_v2_arith" -> "fstar_list_tot"
  "fstar_reflection_v2_arith" -> "fstar_list_tot"
  "fstar_reflection_v2_arith" -> "fstar_pervasives_native"
  "fstar_reflection_v2_arith" -> "fstar_pervasives_native"
  "fstar_reflection_v2_arith" -> "fstar_list_tot_base"
  "fstar_reflection_v2_arith" -> "fstar_list_tot_base"
  "fstar_reflection_v2_arith" -> "fstar_order"
  "fstar_reflection_v2_arith" -> "fstar_order"
  "fstar_reflection_v2_arith" -> "fstar_reflection_v2"
  "fstar_reflection_v2_arith" -> "fstar_reflection_v2"
  "fstar_reflection_v2_arith" -> "fstar_tactics_v2"
  "fstar_reflection_v2_arith" -> "fstar_tactics_v2"
  "fstar_reflection_v2_arith" -> "fstar_pervasives"
  "fstar_reflection_v2_arith" -> "fstar_pervasives"
  "fstar_reflection_v2_arith" -> "prims"
  "fstar_reflection_v2_arith" -> "prims"
  "lib_sequence" -> "fstar_pervasives_native"
  "lib_sequence" -> "fstar_pervasives_native"
  "lib_sequence" -> "fstar_math_lemmas"
  "lib_sequence" -> "fstar_math_lemmas"
  "lib_sequence" -> "lib_loopcombinators"
  "lib_sequence" -> "lib_loopcombinators"
  "lib_sequence" -> "fstar_list_tot"
  "lib_sequence" -> "fstar_list_tot"
  "lib_sequence" -> "fstar_seq"
  "lib_sequence" -> "fstar_seq"
  "lib_sequence" -> "lib_inttypes"
  "lib_sequence" -> "lib_inttypes"
  "lib_sequence" -> "fstar_mul"
  "lib_sequence" -> "fstar_mul"
  "lib_sequence" -> "fstar_pervasives"
  "lib_sequence" -> "fstar_pervasives"
  "lib_sequence" -> "prims"
  "lib_sequence" -> "prims"
  "libcrux_intrinsics_avx2_extract" -> "fstar_mul"
  "libcrux_intrinsics_avx2_extract" -> "fstar_mul"
  "libcrux_intrinsics_avx2_extract" -> "core"
  "libcrux_intrinsics_avx2_extract" -> "core"
  "libcrux_intrinsics_avx2_extract" -> "fstar_pervasives"
  "libcrux_intrinsics_avx2_extract" -> "fstar_pervasives"
  "libcrux_intrinsics_avx2_extract" -> "prims"
  "libcrux_intrinsics_avx2_extract" -> "prims"
  "libcrux_intrinsics_avx2_extract" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_ml_dsa_65_" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_65_" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_65_" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_65_" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_ml_dsa_65_" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_65_" -> "core"
  "libcrux_ml_dsa_ml_dsa_65_" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_65_" -> "prims"
  "libcrux_ml_dsa_ml_dsa_87_" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_87_" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_87_" -> "libcrux_ml_dsa_ml_dsa_generic_multiplexing"
  "libcrux_ml_dsa_ml_dsa_87_" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_87_" -> "core"
  "libcrux_ml_dsa_ml_dsa_87_" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_87_" -> "prims"
  "libcrux_ml_dsa_ml_dsa_87_" -> "libcrux_ml_dsa_ml_dsa_87_"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_gamma1" -> "prims"
  "libcrux_ml_dsa_encoding_gamma1" -> "prims"
  "libcrux_platform_platform" -> "fstar_mul"
  "libcrux_platform_platform" -> "core"
  "libcrux_platform_platform" -> "fstar_pervasives"
  "libcrux_platform_platform" -> "prims"
  "fstar_pervasives" -> "prims"
  "fstar_pervasives" -> "prims"
  "fstar_pervasives" -> "fstar_pervasives"
  "rust_primitives_hax" -> "fstar_list_tot"
  "rust_primitives_hax" -> "fstar_list_tot"
  "rust_primitives_hax" -> "lib_inttypes"
  "rust_primitives_hax" -> "lib_inttypes"
  "rust_primitives_hax" -> "core_slice"
  "rust_primitives_hax" -> "fstar_tactics_typeclasses"
  "rust_primitives_hax" -> "fstar_tactics_typeclasses"
  "rust_primitives_hax" -> "core_ops_index"
  "rust_primitives_hax" -> "core_ops_index"
  "rust_primitives_hax" -> "fstar_seq"
  "rust_primitives_hax" -> "fstar_seq"
  "rust_primitives_hax" -> "rust_primitives_arrays"
  "rust_primitives_hax" -> "rust_primitives_arrays"
  "rust_primitives_hax" -> "rust_primitives_integers"
  "rust_primitives_hax" -> "rust_primitives_integers"
  "rust_primitives_hax" -> "fstar_pervasives"
  "rust_primitives_hax" -> "fstar_pervasives"
  "rust_primitives_hax" -> "prims"
  "rust_primitives_hax" -> "prims"
  "libcrux_ml_dsa_hash_functions_shake256" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_shake256" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_shake256" -> "core"
  "libcrux_ml_dsa_hash_functions_shake256" -> "core"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_shake256" -> "prims"
  "libcrux_ml_dsa_hash_functions_shake256" -> "prims"
  "fstar_set" -> "fstar_pervasives"
  "fstar_set" -> "fstar_pervasives"
  "fstar_set" -> "prims"
  "fstar_set" -> "prims"
  "fstar_squash" -> "fstar_pervasives"
  "fstar_squash" -> "fstar_pervasives"
  "fstar_squash" -> "prims"
  "fstar_squash" -> "prims"
  "libcrux_ml_dsa_simd_traits" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_traits" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_traits" -> "fstar_list_tot"
  "libcrux_ml_dsa_simd_traits" -> "fstar_list_tot"
  "libcrux_ml_dsa_simd_traits" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_traits" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_traits" -> "fstar_uint64"
  "libcrux_ml_dsa_simd_traits" -> "fstar_uint64"
  "libcrux_ml_dsa_simd_traits" -> "fstar_int32"
  "libcrux_ml_dsa_simd_traits" -> "fstar_int32"
  "libcrux_ml_dsa_simd_traits" -> "core_clone"
  "libcrux_ml_dsa_simd_traits" -> "core_clone"
  "libcrux_ml_dsa_simd_traits" -> "core_marker"
  "libcrux_ml_dsa_simd_traits" -> "core_marker"
  "libcrux_ml_dsa_simd_traits" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_traits" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_traits" -> "fstar_mul"
  "libcrux_ml_dsa_simd_traits" -> "fstar_mul"
  "libcrux_ml_dsa_simd_traits" -> "core"
  "libcrux_ml_dsa_simd_traits" -> "core"
  "libcrux_ml_dsa_simd_traits" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_traits" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_traits" -> "prims"
  "libcrux_ml_dsa_simd_traits" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "libcrux_ml_dsa_ml_dsa_65__neon"
  "libcrux_ml_dsa_encoding_t0" -> "core_ops_range"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_ntt"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_ntt"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_encoding_t0" -> "core_iter_adapters_enumerate"
  "libcrux_ml_dsa_encoding_t0" -> "core_iter_adapters_enumerate"
  "libcrux_ml_dsa_encoding_t0" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_encoding_t0" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_encoding_t0" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_t0" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_t0" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_t0" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_t0" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_t0" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_t0" -> "core_option"
  "libcrux_ml_dsa_encoding_t0" -> "core_option"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_t0" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_t0" -> "core_slice"
  "libcrux_ml_dsa_encoding_t0" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_t0" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_t0" -> "core"
  "libcrux_ml_dsa_encoding_t0" -> "core"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_t0" -> "prims"
  "libcrux_ml_dsa_encoding_t0" -> "prims"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_encoding_t0"
  "fstar_heap" -> "fstar_preorder"
  "fstar_heap" -> "fstar_preorder"
  "fstar_heap" -> "fstar_monotonic_heap"
  "fstar_heap" -> "fstar_monotonic_heap"
  "fstar_heap" -> "fstar_pervasives"
  "fstar_heap" -> "fstar_pervasives"
  "fstar_heap" -> "prims"
  "fstar_heap" -> "prims"
  "fstar_reflection_v1_compare" -> "fstar_reflection_v2_compare"
  "fstar_reflection_v1_compare" -> "fstar_reflection_v2_compare"
  "fstar_reflection_v1_compare" -> "fstar_pervasives"
  "fstar_reflection_v1_compare" -> "fstar_pervasives"
  "fstar_reflection_v1_compare" -> "prims"
  "fstar_reflection_v1_compare" -> "prims"
  "fstar_issue" -> "fstar_stubs_pprint"
  "fstar_issue" -> "fstar_range"
  "fstar_issue" -> "fstar_pervasives"
  "fstar_issue" -> "fstar_pervasives"
  "fstar_issue" -> "prims"
  "fstar_issue" -> "prims"
  "fstar_monotonic_witnessed" -> "fstar_preorder"
  "fstar_monotonic_witnessed" -> "fstar_preorder"
  "fstar_monotonic_witnessed" -> "fstar_pervasives"
  "fstar_monotonic_witnessed" -> "fstar_pervasives"
  "fstar_monotonic_witnessed" -> "prims"
  "fstar_monotonic_witnessed" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "libcrux_platform_platform"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "libcrux_ml_dsa_ml_dsa_generic_multiplexing"
  "fstar_ghost" -> "fstar_pervasives"
  "fstar_ghost" -> "fstar_pervasives"
  "fstar_ghost" -> "prims"
  "fstar_ghost" -> "prims"
  "fstar_ghost" -> "fstar_ghost"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_classical"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_classical"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_pervasives_native"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_pervasives_native"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_list_tot"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_list_tot"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_reflection_v1_derived"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_reflection_v1_derived"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_stubs_reflection_v1_data"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_stubs_reflection_v1_builtins"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_pervasives"
  "fstar_reflection_v1_derived_lemmas" -> "fstar_pervasives"
  "fstar_reflection_v1_derived_lemmas" -> "prims"
  "fstar_reflection_v1_derived_lemmas" -> "prims"
  "fstar_stubs_errors_msg" -> "fstar_stubs_pprint"
  "fstar_stubs_errors_msg" -> "fstar_pervasives"
  "fstar_stubs_errors_msg" -> "fstar_pervasives"
  "fstar_stubs_errors_msg" -> "prims"
  "fstar_stubs_errors_msg" -> "prims"
  "fstar_string" -> "fstar_all"
  "fstar_string" -> "fstar_all"
  "fstar_string" -> "fstar_list"
  "fstar_string" -> "fstar_list"
  "fstar_string" -> "fstar_char"
  "fstar_string" -> "fstar_list_tot"
  "fstar_string" -> "fstar_list_tot"
  "fstar_string" -> "fstar_pervasives"
  "fstar_string" -> "fstar_pervasives"
  "fstar_string" -> "prims"
  "fstar_string" -> "prims"
  "spec_sha3" -> "fstar_pervasives_native"
  "spec_sha3" -> "fstar_pervasives_native"
  "spec_sha3" -> "spec_sha3_constants"
  "spec_sha3" -> "spec_sha3_constants"
  "spec_sha3" -> "lib_loopcombinators"
  "spec_sha3" -> "lib_loopcombinators"
  "spec_sha3" -> "fstar_mul"
  "spec_sha3" -> "fstar_mul"
  "spec_sha3" -> "lib_bytesequence"
  "spec_sha3" -> "lib_bytesequence"
  "spec_sha3" -> "lib_sequence"
  "spec_sha3" -> "lib_sequence"
  "spec_sha3" -> "lib_inttypes"
  "spec_sha3" -> "lib_inttypes"
  "spec_sha3" -> "fstar_pervasives"
  "spec_sha3" -> "fstar_pervasives"
  "spec_sha3" -> "prims"
  "spec_sha3" -> "prims"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_sha3_avx2_x4"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_sha3_portable_incremental"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_uint8"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_uint8"
  "libcrux_ml_dsa_hash_functions_simd256" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_simd256" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_sha3_portable"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_sha3_portable"
  "libcrux_ml_dsa_hash_functions_simd256" -> "libcrux_sha3_avx2_x4_incremental"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_simd256" -> "core"
  "libcrux_ml_dsa_hash_functions_simd256" -> "core"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_simd256" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_simd256" -> "prims"
  "libcrux_ml_dsa_hash_functions_simd256" -> "prims"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_simd_portable_encoding_commitment"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_simd_portable_sample"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_int32"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "prims"
  "fstar_calc" -> "fstar_classical"
  "fstar_calc" -> "fstar_classical"
  "fstar_calc" -> "fstar_preorder"
  "fstar_calc" -> "fstar_preorder"
  "fstar_calc" -> "fstar_squash"
  "fstar_calc" -> "fstar_squash"
  "fstar_calc" -> "fstar_pervasives"
  "fstar_calc" -> "fstar_pervasives"
  "fstar_calc" -> "prims"
  "fstar_calc" -> "prims"
  "fstar_calc" -> "fstar_calc"
  "spec_utils" -> "rust_primitives_integers"
  "spec_utils" -> "rust_primitives_integers"
  "spec_utils" -> "fstar_calc"
  "spec_utils" -> "fstar_calc"
  "spec_utils" -> "fstar_int32"
  "spec_utils" -> "fstar_int32"
  "spec_utils" -> "fstar_int16"
  "spec_utils" -> "fstar_int16"
  "spec_utils" -> "fstar_math_lemmas"
  "spec_utils" -> "fstar_math_lemmas"
  "spec_utils" -> "fstar_classical_sugar"
  "spec_utils" -> "fstar_classical_sugar"
  "spec_utils" -> "rust_primitives_hax_monomorphized_update_at"
  "spec_utils" -> "rust_primitives_hax_monomorphized_update_at"
  "spec_utils" -> "core_ops_range"
  "spec_utils" -> "lib_inttypes"
  "spec_utils" -> "lib_inttypes"
  "spec_utils" -> "lib_rawinttypes"
  "spec_utils" -> "lib_rawinttypes"
  "spec_utils" -> "spec_sha3"
  "spec_utils" -> "spec_sha3"
  "spec_utils" -> "fstar_list_tot"
  "spec_utils" -> "fstar_list_tot"
  "spec_utils" -> "rust_primitives_hax"
  "spec_utils" -> "rust_primitives_hax"
  "spec_utils" -> "lib_loopcombinators"
  "spec_utils" -> "lib_loopcombinators"
  "spec_utils" -> "fstar_seq"
  "spec_utils" -> "fstar_seq"
  "spec_utils" -> "core"
  "spec_utils" -> "core"
  "spec_utils" -> "fstar_mul"
  "spec_utils" -> "fstar_mul"
  "spec_utils" -> "fstar_pervasives"
  "spec_utils" -> "fstar_pervasives"
  "spec_utils" -> "prims"
  "spec_utils" -> "prims"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "core_num"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "core_ops_arith_neg"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "core"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "core"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "prims"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "prims"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_ml_dsa_simd_avx2_arithmetic"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_simd_avx2"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_simd256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "prims"
  "fstar_stubs_reflection_types" -> "fstar_sealed"
  "fstar_stubs_reflection_types" -> "fstar_range"
  "fstar_stubs_reflection_types" -> "fstar_pervasives"
  "fstar_stubs_reflection_types" -> "fstar_pervasives"
  "fstar_stubs_reflection_types" -> "prims"
  "fstar_stubs_reflection_types" -> "prims"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_effect"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_effect"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_reflection_v2"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_reflection_v2"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_pervasives"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_pervasives"
  "fstar_tactics_v2_syntaxhelpers" -> "prims"
  "fstar_tactics_v2_syntaxhelpers" -> "prims"
  "lib_inttypes" -> "fstar_uint"
  "lib_inttypes" -> "fstar_uint"
  "lib_inttypes" -> "fstar_int"
  "lib_inttypes" -> "fstar_int"
  "lib_inttypes" -> "fstar_int128"
  "lib_inttypes" -> "fstar_int128"
  "lib_inttypes" -> "fstar_int64"
  "lib_inttypes" -> "fstar_int64"
  "lib_inttypes" -> "fstar_int32"
  "lib_inttypes" -> "fstar_int32"
  "lib_inttypes" -> "fstar_int16"
  "lib_inttypes" -> "fstar_int16"
  "lib_inttypes" -> "fstar_int8"
  "lib_inttypes" -> "fstar_int8"
  "lib_inttypes" -> "fstar_uint128"
  "lib_inttypes" -> "fstar_uint128"
  "lib_inttypes" -> "fstar_uint64"
  "lib_inttypes" -> "fstar_uint64"
  "lib_inttypes" -> "fstar_uint32"
  "lib_inttypes" -> "fstar_uint32"
  "lib_inttypes" -> "fstar_uint16"
  "lib_inttypes" -> "fstar_uint16"
  "lib_inttypes" -> "fstar_uint8"
  "lib_inttypes" -> "fstar_uint8"
  "lib_inttypes" -> "fstar_mul"
  "lib_inttypes" -> "fstar_mul"
  "lib_inttypes" -> "fstar_pervasives"
  "lib_inttypes" -> "fstar_pervasives"
  "lib_inttypes" -> "prims"
  "lib_inttypes" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_t0" -> "prims"
  "core_iter_traits_collect" -> "core_iter_traits_iterator"
  "core_iter_traits_collect" -> "core_iter_traits_iterator"
  "core_iter_traits_collect" -> "fstar_tactics_typeclasses"
  "core_iter_traits_collect" -> "fstar_tactics_typeclasses"
  "core_iter_traits_collect" -> "fstar_pervasives"
  "core_iter_traits_collect" -> "fstar_pervasives"
  "core_iter_traits_collect" -> "prims"
  "core_iter_traits_collect" -> "prims"
  "libcrux_ml_dsa_encoding_signature" -> "core_convert"
  "libcrux_ml_dsa_encoding_signature" -> "core_convert"
  "libcrux_ml_dsa_encoding_signature" -> "core_array"
  "libcrux_ml_dsa_encoding_signature" -> "core_array"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_encoding_signature" -> "core_result"
  "libcrux_ml_dsa_encoding_signature" -> "core_result"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_signature" -> "rust_primitives"
  "libcrux_ml_dsa_encoding_signature" -> "rust_primitives"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_int32"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_int32"
  "libcrux_ml_dsa_encoding_signature" -> "core_ops_range"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_encoding_gamma1"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_encoding_gamma1"
  "libcrux_ml_dsa_encoding_signature" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_signature" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_signature" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_encoding_signature" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_signature" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_signature" -> "core_slice"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_signature" -> "core"
  "libcrux_ml_dsa_encoding_signature" -> "core"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_signature" -> "prims"
  "libcrux_ml_dsa_encoding_signature" -> "prims"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_encoding_signature"
  "hax_lib" -> "fstar_tactics"
  "hax_lib" -> "fstar_tactics"
  "hax_lib" -> "fstar_pervasives"
  "hax_lib" -> "fstar_pervasives"
  "hax_lib" -> "prims"
  "hax_lib" -> "prims"
  "libcrux_ml_dsa_utils" -> "core_ops_range"
  "libcrux_ml_dsa_utils" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_utils" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_utils" -> "fstar_uint8"
  "libcrux_ml_dsa_utils" -> "fstar_uint8"
  "libcrux_ml_dsa_utils" -> "rust_primitives_hax"
  "libcrux_ml_dsa_utils" -> "rust_primitives_hax"
  "libcrux_ml_dsa_utils" -> "core_slice"
  "libcrux_ml_dsa_utils" -> "hax_lib"
  "libcrux_ml_dsa_utils" -> "hax_lib"
  "libcrux_ml_dsa_utils" -> "fstar_mul"
  "libcrux_ml_dsa_utils" -> "fstar_mul"
  "libcrux_ml_dsa_utils" -> "core"
  "libcrux_ml_dsa_utils" -> "core"
  "libcrux_ml_dsa_utils" -> "fstar_pervasives"
  "libcrux_ml_dsa_utils" -> "fstar_pervasives"
  "libcrux_ml_dsa_utils" -> "prims"
  "libcrux_ml_dsa_utils" -> "prims"
  "libcrux_ml_dsa_utils" -> "libcrux_ml_dsa_utils"
  "fstar_math_lemmas" -> "fstar_calc"
  "fstar_math_lemmas" -> "fstar_calc"
  "fstar_math_lemmas" -> "fstar_math_lib"
  "fstar_math_lemmas" -> "fstar_math_lib"
  "fstar_math_lemmas" -> "fstar_mul"
  "fstar_math_lemmas" -> "fstar_mul"
  "fstar_math_lemmas" -> "fstar_pervasives"
  "fstar_math_lemmas" -> "fstar_pervasives"
  "fstar_math_lemmas" -> "prims"
  "fstar_math_lemmas" -> "prims"
  "fstar_math_lemmas" -> "fstar_math_lemmas"
  "fstar_calc" -> "fstar_range"
  "fstar_calc" -> "fstar_preorder"
  "fstar_calc" -> "fstar_preorder"
  "fstar_calc" -> "fstar_pervasives"
  "fstar_calc" -> "fstar_pervasives"
  "fstar_calc" -> "prims"
  "fstar_calc" -> "prims"
  "fstar_bitvector" -> "fstar_seq_base"
  "fstar_bitvector" -> "fstar_seq_base"
  "fstar_bitvector" -> "fstar_mul"
  "fstar_bitvector" -> "fstar_mul"
  "fstar_bitvector" -> "fstar_pervasives"
  "fstar_bitvector" -> "fstar_pervasives"
  "fstar_bitvector" -> "prims"
  "fstar_bitvector" -> "prims"
  "fstar_tactics_util" -> "fstar_pervasives_native"
  "fstar_tactics_util" -> "fstar_pervasives_native"
  "fstar_tactics_util" -> "fstar_list_tot_base"
  "fstar_tactics_util" -> "fstar_list_tot_base"
  "fstar_tactics_util" -> "fstar_tactics_effect"
  "fstar_tactics_util" -> "fstar_tactics_effect"
  "fstar_tactics_util" -> "fstar_pervasives"
  "fstar_tactics_util" -> "fstar_pervasives"
  "fstar_tactics_util" -> "prims"
  "fstar_tactics_util" -> "prims"
  "core_ops_arith" -> "fstar_tactics_typeclasses"
  "core_ops_arith" -> "fstar_tactics_typeclasses"
  "core_ops_arith" -> "rust_primitives"
  "core_ops_arith" -> "rust_primitives"
  "core_ops_arith" -> "fstar_pervasives"
  "core_ops_arith" -> "fstar_pervasives"
  "core_ops_arith" -> "prims"
  "core_ops_arith" -> "prims"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "prims"
  "fstar_order" -> "fstar_pervasives_native"
  "fstar_order" -> "fstar_pervasives_native"
  "fstar_order" -> "fstar_pervasives"
  "fstar_order" -> "fstar_pervasives"
  "fstar_order" -> "prims"
  "fstar_order" -> "prims"
  "fstar_tactics_smt" -> "fstar_vconfig"
  "fstar_tactics_smt" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_smt" -> "fstar_tactics_effect"
  "fstar_tactics_smt" -> "fstar_tactics_effect"
  "fstar_tactics_smt" -> "fstar_pervasives"
  "fstar_tactics_smt" -> "fstar_pervasives"
  "fstar_tactics_smt" -> "prims"
  "fstar_tactics_smt" -> "prims"
  "fstar_tactics_smt" -> "fstar_tactics_smt"
  "rust_primitives_hax_monomorphized_update_at" -> "fstar_seq"
  "rust_primitives_hax_monomorphized_update_at" -> "fstar_seq"
  "rust_primitives_hax_monomorphized_update_at" -> "core_ops_range"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives_hax"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives_hax"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives"
  "rust_primitives_hax_monomorphized_update_at" -> "fstar_pervasives"
  "rust_primitives_hax_monomorphized_update_at" -> "fstar_pervasives"
  "rust_primitives_hax_monomorphized_update_at" -> "prims"
  "rust_primitives_hax_monomorphized_update_at" -> "prims"
  "core_core_arch_arm_shared_neon" -> "fstar_pervasives"
  "core_core_arch_arm_shared_neon" -> "fstar_pervasives"
  "core_core_arch_arm_shared_neon" -> "prims"
  "core_core_arch_arm_shared_neon" -> "prims"
  "fstar_tactics_smt" -> "fstar_tactics_effect"
  "fstar_tactics_smt" -> "fstar_tactics_effect"
  "fstar_tactics_smt" -> "fstar_pervasives"
  "fstar_tactics_smt" -> "fstar_pervasives"
  "fstar_tactics_smt" -> "prims"
  "fstar_tactics_smt" -> "prims"
  "fstar_stubs_reflection_v2_builtins" -> "fstar_stubs_reflection_v2_data"
  "fstar_stubs_reflection_v2_builtins" -> "fstar_stubs_reflection_types"
  "fstar_stubs_reflection_v2_builtins" -> "fstar_vconfig"
  "fstar_stubs_reflection_v2_builtins" -> "fstar_stubs_syntax_syntax"
  "fstar_stubs_reflection_v2_builtins" -> "fstar_order"
  "fstar_stubs_reflection_v2_builtins" -> "fstar_order"
  "fstar_stubs_reflection_v2_builtins" -> "fstar_pervasives"
  "fstar_stubs_reflection_v2_builtins" -> "fstar_pervasives"
  "fstar_stubs_reflection_v2_builtins" -> "prims"
  "fstar_stubs_reflection_v2_builtins" -> "prims"
  "fstar_tactics_names" -> "fstar_tactics_effect"
  "fstar_tactics_names" -> "fstar_tactics_effect"
  "fstar_tactics_names" -> "fstar_stubs_reflection_types"
  "fstar_tactics_names" -> "fstar_pervasives"
  "fstar_tactics_names" -> "fstar_pervasives"
  "fstar_tactics_names" -> "prims"
  "fstar_tactics_names" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_ops_range"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_int16"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_int16"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core_slice"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "libcrux_ml_dsa_simd_avx2_encoding_error"
  "fstar_list_tot_properties" -> "fstar_strongexcludedmiddle"
  "fstar_list_tot_properties" -> "fstar_strongexcludedmiddle"
  "fstar_list_tot_properties" -> "fstar_pervasives_native"
  "fstar_list_tot_properties" -> "fstar_pervasives_native"
  "fstar_list_tot_properties" -> "fstar_list_tot_base"
  "fstar_list_tot_properties" -> "fstar_list_tot_base"
  "fstar_list_tot_properties" -> "fstar_pervasives"
  "fstar_list_tot_properties" -> "fstar_pervasives"
  "fstar_list_tot_properties" -> "prims"
  "fstar_list_tot_properties" -> "prims"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "core"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "core"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "prims"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "prims"
  "libcrux_sha3_avx2_x4" -> "fstar_mul"
  "libcrux_sha3_avx2_x4" -> "fstar_mul"
  "libcrux_sha3_avx2_x4" -> "core"
  "libcrux_sha3_avx2_x4" -> "core"
  "libcrux_sha3_avx2_x4" -> "fstar_pervasives"
  "libcrux_sha3_avx2_x4" -> "fstar_pervasives"
  "libcrux_sha3_avx2_x4" -> "prims"
  "libcrux_sha3_avx2_x4" -> "prims"
  "libcrux_ml_dsa_hash_functions_shake128" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_shake128" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_shake128" -> "core"
  "libcrux_ml_dsa_hash_functions_shake128" -> "core"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_shake128" -> "prims"
  "libcrux_ml_dsa_hash_functions_shake128" -> "prims"
  "libcrux_sha3_portable" -> "fstar_mul"
  "libcrux_sha3_portable" -> "fstar_mul"
  "libcrux_sha3_portable" -> "core"
  "libcrux_sha3_portable" -> "core"
  "libcrux_sha3_portable" -> "fstar_pervasives"
  "libcrux_sha3_portable" -> "fstar_pervasives"
  "libcrux_sha3_portable" -> "prims"
  "libcrux_sha3_portable" -> "prims"
  "libcrux_sha3_portable" -> "libcrux_sha3_portable"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "prims"
  "fstar_reflection_termeq" -> "fstar_classical_sugar"
  "fstar_reflection_termeq" -> "fstar_classical_sugar"
  "fstar_reflection_termeq" -> "fstar_sealed"
  "fstar_reflection_termeq" -> "fstar_pervasives_native"
  "fstar_reflection_termeq" -> "fstar_pervasives_native"
  "fstar_reflection_termeq" -> "fstar_strongexcludedmiddle"
  "fstar_reflection_termeq" -> "fstar_strongexcludedmiddle"
  "fstar_reflection_termeq" -> "fstar_list_tot"
  "fstar_reflection_termeq" -> "fstar_list_tot"
  "fstar_reflection_termeq" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_reflection_termeq" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_termeq" -> "fstar_stubs_reflection_types"
  "fstar_reflection_termeq" -> "fstar_pervasives"
  "fstar_reflection_termeq" -> "fstar_pervasives"
  "fstar_reflection_termeq" -> "prims"
  "fstar_reflection_termeq" -> "prims"
  "fstar_reflection_termeq" -> "fstar_reflection_termeq"
  "rust_primitives_hax_folds" -> "fstar_math_lemmas"
  "rust_primitives_hax_folds" -> "fstar_math_lemmas"
  "rust_primitives_hax_folds" -> "lib_inttypes"
  "rust_primitives_hax_folds" -> "lib_inttypes"
  "rust_primitives_hax_folds" -> "fstar_seq"
  "rust_primitives_hax_folds" -> "fstar_seq"
  "rust_primitives_hax_folds" -> "fstar_mul"
  "rust_primitives_hax_folds" -> "fstar_mul"
  "rust_primitives_hax_folds" -> "core_ops_range"
  "rust_primitives_hax_folds" -> "rust_primitives"
  "rust_primitives_hax_folds" -> "rust_primitives"
  "rust_primitives_hax_folds" -> "fstar_pervasives"
  "rust_primitives_hax_folds" -> "fstar_pervasives"
  "rust_primitives_hax_folds" -> "prims"
  "rust_primitives_hax_folds" -> "prims"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_ops_range"
  "libcrux_ml_dsa_encoding_signing_key" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_signing_key" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_signing_key" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_signing_key" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_convert"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_convert"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_array"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_array"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_result"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_result"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_encoding_t0"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_encoding_t0"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_encoding_error"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_encoding_error"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_encoding_signing_key" -> "core_slice"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_signing_key" -> "core"
  "libcrux_ml_dsa_encoding_signing_key" -> "core"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_signing_key" -> "prims"
  "libcrux_ml_dsa_encoding_signing_key" -> "prims"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_encoding_signing_key"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "libcrux_ml_dsa_simd_portable_rec_bundle_437004224"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "prims"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "libcrux_ml_dsa_simd_portable_encoding_t0"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "prims"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "prims"
  "core_iter_adapters_step_by" -> "rust_primitives"
  "core_iter_adapters_step_by" -> "rust_primitives"
  "core_iter_adapters_step_by" -> "fstar_pervasives"
  "core_iter_adapters_step_by" -> "fstar_pervasives"
  "core_iter_adapters_step_by" -> "prims"
  "core_iter_adapters_step_by" -> "prims"
  "libcrux_ml_dsa_simd_portable_sample" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_portable_sample" -> "core_slice"
  "libcrux_ml_dsa_simd_portable_sample" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_portable_sample" -> "fstar_int32"
  "libcrux_ml_dsa_simd_portable_sample" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_portable_sample" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_portable_sample" -> "core_slice_iter"
  "libcrux_ml_dsa_simd_portable_sample" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_portable_sample" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_simd_portable_sample" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_simd_portable_sample" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_sample" -> "core"
  "libcrux_ml_dsa_simd_portable_sample" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_sample" -> "prims"
  "libcrux_ml_dsa_simd_portable_sample" -> "libcrux_ml_dsa_simd_portable_sample"
  "fstar_stubs_tactics_types" -> "fstar_issue"
  "fstar_stubs_tactics_types" -> "fstar_range"
  "fstar_stubs_tactics_types" -> "fstar_stubs_typechecker_core"
  "fstar_stubs_tactics_types" -> "fstar_stubs_tactics_common"
  "fstar_stubs_tactics_types" -> "fstar_stubs_reflection_types"
  "fstar_stubs_tactics_types" -> "fstar_pervasives"
  "fstar_stubs_tactics_types" -> "fstar_pervasives"
  "fstar_stubs_tactics_types" -> "prims"
  "fstar_stubs_tactics_types" -> "prims"
  "libcrux_ml_dsa_samplex4" -> "fstar_uint16"
  "libcrux_ml_dsa_samplex4" -> "fstar_uint16"
  "libcrux_ml_dsa_samplex4" -> "core_panicking"
  "libcrux_ml_dsa_samplex4" -> "core_panicking"
  "libcrux_ml_dsa_samplex4" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_samplex4" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_samplex4" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_samplex4" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_samplex4" -> "fstar_uint8"
  "libcrux_ml_dsa_samplex4" -> "fstar_uint8"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_sample"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_sample"
  "libcrux_ml_dsa_samplex4" -> "rust_primitives_hax"
  "libcrux_ml_dsa_samplex4" -> "rust_primitives_hax"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_samplex4" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_samplex4" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_samplex4" -> "fstar_int32"
  "libcrux_ml_dsa_samplex4" -> "fstar_int32"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_samplex4" -> "fstar_mul"
  "libcrux_ml_dsa_samplex4" -> "fstar_mul"
  "libcrux_ml_dsa_samplex4" -> "core"
  "libcrux_ml_dsa_samplex4" -> "core"
  "libcrux_ml_dsa_samplex4" -> "fstar_pervasives"
  "libcrux_ml_dsa_samplex4" -> "fstar_pervasives"
  "libcrux_ml_dsa_samplex4" -> "prims"
  "libcrux_ml_dsa_samplex4" -> "prims"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_samplex4"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "prims"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "core"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "core"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "prims"
  "libcrux_ml_dsa_simd_avx2_vector_type" -> "prims"
  "fstar_stubs_tactics_result" -> "fstar_stubs_tactics_types"
  "fstar_stubs_tactics_result" -> "fstar_pervasives"
  "fstar_stubs_tactics_result" -> "fstar_pervasives"
  "fstar_stubs_tactics_result" -> "prims"
  "fstar_stubs_tactics_result" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "prims"
  "libcrux_ml_dsa_constants" -> "fstar_int32"
  "libcrux_ml_dsa_constants" -> "fstar_int32"
  "libcrux_ml_dsa_constants" -> "fstar_mul"
  "libcrux_ml_dsa_constants" -> "fstar_mul"
  "libcrux_ml_dsa_constants" -> "core"
  "libcrux_ml_dsa_constants" -> "core"
  "libcrux_ml_dsa_constants" -> "fstar_pervasives"
  "libcrux_ml_dsa_constants" -> "fstar_pervasives"
  "libcrux_ml_dsa_constants" -> "prims"
  "libcrux_ml_dsa_constants" -> "prims"
  "fstar_int32" -> "fstar_uint"
  "fstar_int32" -> "fstar_uint"
  "fstar_int32" -> "fstar_uint32"
  "fstar_int32" -> "fstar_uint32"
  "fstar_int32" -> "fstar_mul"
  "fstar_int32" -> "fstar_mul"
  "fstar_int32" -> "fstar_int"
  "fstar_int32" -> "fstar_int"
  "fstar_int32" -> "fstar_pervasives"
  "fstar_int32" -> "fstar_pervasives"
  "fstar_int32" -> "prims"
  "fstar_int32" -> "prims"
  "fstar_int" -> "fstar_seq"
  "fstar_int" -> "fstar_seq"
  "fstar_int" -> "fstar_uint"
  "fstar_int" -> "fstar_uint"
  "fstar_int" -> "fstar_math_lemmas"
  "fstar_int" -> "fstar_math_lemmas"
  "fstar_int" -> "fstar_bitvector"
  "fstar_int" -> "fstar_bitvector"
  "fstar_int" -> "fstar_mul"
  "fstar_int" -> "fstar_mul"
  "fstar_int" -> "fstar_pervasives"
  "fstar_int" -> "fstar_pervasives"
  "fstar_int" -> "prims"
  "fstar_int" -> "prims"
  "libcrux_ml_dsa_matrix" -> "fstar_int32"
  "libcrux_ml_dsa_matrix" -> "fstar_int32"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_arithmetic"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_arithmetic"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_ntt"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_ntt"
  "libcrux_ml_dsa_matrix" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_matrix" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_matrix" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_matrix" -> "rust_primitives_hax"
  "libcrux_ml_dsa_matrix" -> "rust_primitives_hax"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_matrix" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_matrix" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_matrix" -> "fstar_mul"
  "libcrux_ml_dsa_matrix" -> "fstar_mul"
  "libcrux_ml_dsa_matrix" -> "core"
  "libcrux_ml_dsa_matrix" -> "core"
  "libcrux_ml_dsa_matrix" -> "fstar_pervasives"
  "libcrux_ml_dsa_matrix" -> "fstar_pervasives"
  "libcrux_ml_dsa_matrix" -> "prims"
  "libcrux_ml_dsa_matrix" -> "prims"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_matrix"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "libcrux_ml_dsa_ml_dsa_44__neon"
  "fstar_uint16" -> "fstar_uint32"
  "fstar_uint16" -> "fstar_uint32"
  "fstar_uint16" -> "fstar_mul"
  "fstar_uint16" -> "fstar_mul"
  "fstar_uint16" -> "fstar_uint"
  "fstar_uint16" -> "fstar_uint"
  "fstar_uint16" -> "fstar_pervasives"
  "fstar_uint16" -> "fstar_pervasives"
  "fstar_uint16" -> "prims"
  "fstar_uint16" -> "prims"
  "fstar_tactics_print" -> "fstar_tactics_namedview"
  "fstar_tactics_print" -> "fstar_tactics_namedview"
  "fstar_tactics_print" -> "fstar_tactics_v2_derived"
  "fstar_tactics_print" -> "fstar_tactics_v2_derived"
  "fstar_tactics_print" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_print" -> "fstar_tactics_effect"
  "fstar_tactics_print" -> "fstar_tactics_effect"
  "fstar_tactics_print" -> "fstar_reflection_v2"
  "fstar_tactics_print" -> "fstar_reflection_v2"
  "fstar_tactics_print" -> "fstar_pervasives"
  "fstar_tactics_print" -> "fstar_pervasives"
  "fstar_tactics_print" -> "prims"
  "fstar_tactics_print" -> "prims"
  "fstar_tactics_print" -> "fstar_tactics_print"
  "lib_inttypes" -> "fstar_bitvector"
  "lib_inttypes" -> "fstar_bitvector"
  "lib_inttypes" -> "fstar_seq"
  "lib_inttypes" -> "fstar_seq"
  "lib_inttypes" -> "fstar_uint"
  "lib_inttypes" -> "fstar_uint"
  "lib_inttypes" -> "fstar_pervasives_native"
  "lib_inttypes" -> "fstar_pervasives_native"
  "lib_inttypes" -> "fstar_int_cast_full"
  "lib_inttypes" -> "fstar_int_cast_full"
  "lib_inttypes" -> "fstar_int"
  "lib_inttypes" -> "fstar_int"
  "lib_inttypes" -> "fstar_int_cast"
  "lib_inttypes" -> "fstar_int_cast"
  "lib_inttypes" -> "fstar_int128"
  "lib_inttypes" -> "fstar_int128"
  "lib_inttypes" -> "fstar_int64"
  "lib_inttypes" -> "fstar_int64"
  "lib_inttypes" -> "fstar_int32"
  "lib_inttypes" -> "fstar_int32"
  "lib_inttypes" -> "fstar_int16"
  "lib_inttypes" -> "fstar_int16"
  "lib_inttypes" -> "fstar_int8"
  "lib_inttypes" -> "fstar_int8"
  "lib_inttypes" -> "fstar_uint128"
  "lib_inttypes" -> "fstar_uint128"
  "lib_inttypes" -> "fstar_uint64"
  "lib_inttypes" -> "fstar_uint64"
  "lib_inttypes" -> "fstar_uint32"
  "lib_inttypes" -> "fstar_uint32"
  "lib_inttypes" -> "fstar_uint16"
  "lib_inttypes" -> "fstar_uint16"
  "lib_inttypes" -> "fstar_uint8"
  "lib_inttypes" -> "fstar_uint8"
  "lib_inttypes" -> "fstar_math_lemmas"
  "lib_inttypes" -> "fstar_math_lemmas"
  "lib_inttypes" -> "fstar_pervasives"
  "lib_inttypes" -> "fstar_pervasives"
  "lib_inttypes" -> "prims"
  "lib_inttypes" -> "prims"
  "lib_inttypes" -> "lib_inttypes"
  "rust_primitives_bitvectors" -> "fstar_uint8"
  "rust_primitives_bitvectors" -> "fstar_uint8"
  "rust_primitives_bitvectors" -> "fstar_uint16"
  "rust_primitives_bitvectors" -> "fstar_uint16"
  "rust_primitives_bitvectors" -> "fstar_uint32"
  "rust_primitives_bitvectors" -> "fstar_uint32"
  "rust_primitives_bitvectors" -> "fstar_int16"
  "rust_primitives_bitvectors" -> "fstar_int16"
  "rust_primitives_bitvectors" -> "fstar_int32"
  "rust_primitives_bitvectors" -> "fstar_int32"
  "rust_primitives_bitvectors" -> "fstar_seq"
  "rust_primitives_bitvectors" -> "fstar_seq"
  "rust_primitives_bitvectors" -> "fstar_functionalextensionality"
  "rust_primitives_bitvectors" -> "fstar_functionalextensionality"
  "rust_primitives_bitvectors" -> "rust_primitives_integers"
  "rust_primitives_bitvectors" -> "rust_primitives_integers"
  "rust_primitives_bitvectors" -> "rust_primitives_arrays"
  "rust_primitives_bitvectors" -> "rust_primitives_arrays"
  "rust_primitives_bitvectors" -> "fstar_mul"
  "rust_primitives_bitvectors" -> "fstar_mul"
  "rust_primitives_bitvectors" -> "fstar_pervasives"
  "rust_primitives_bitvectors" -> "fstar_pervasives"
  "rust_primitives_bitvectors" -> "prims"
  "rust_primitives_bitvectors" -> "prims"
  "fstar_monotonic_witnessed" -> "fstar_classical"
  "fstar_monotonic_witnessed" -> "fstar_classical"
  "fstar_monotonic_witnessed" -> "fstar_preorder"
  "fstar_monotonic_witnessed" -> "fstar_preorder"
  "fstar_monotonic_witnessed" -> "fstar_pervasives"
  "fstar_monotonic_witnessed" -> "fstar_pervasives"
  "fstar_monotonic_witnessed" -> "prims"
  "fstar_monotonic_witnessed" -> "prims"
  "fstar_monotonic_witnessed" -> "fstar_monotonic_witnessed"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_65__neon" -> "prims"
  "fstar_classical" -> "fstar_squash"
  "fstar_classical" -> "fstar_squash"
  "fstar_classical" -> "fstar_pervasives"
  "fstar_classical" -> "fstar_pervasives"
  "fstar_classical" -> "prims"
  "fstar_classical" -> "prims"
  "fstar_classical" -> "fstar_classical"
  "fstar_stubs_typechecker_core" -> "fstar_pervasives"
  "fstar_stubs_typechecker_core" -> "fstar_pervasives"
  "fstar_stubs_typechecker_core" -> "prims"
  "fstar_stubs_typechecker_core" -> "prims"
  "fstar_reflection_v1_formula" -> "fstar_pervasives_native"
  "fstar_reflection_v1_formula" -> "fstar_pervasives_native"
  "fstar_reflection_v1_formula" -> "fstar_stubs_reflection_v1_data"
  "fstar_reflection_v1_formula" -> "fstar_reflection_v1_derived"
  "fstar_reflection_v1_formula" -> "fstar_reflection_v1_derived"
  "fstar_reflection_v1_formula" -> "fstar_stubs_reflection_v1_builtins"
  "fstar_reflection_v1_formula" -> "fstar_reflection_const"
  "fstar_reflection_v1_formula" -> "fstar_reflection_const"
  "fstar_reflection_v1_formula" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v1_formula" -> "fstar_stubs_tactics_v1_builtins"
  "fstar_reflection_v1_formula" -> "fstar_tactics_effect"
  "fstar_reflection_v1_formula" -> "fstar_tactics_effect"
  "fstar_reflection_v1_formula" -> "fstar_list_tot_base"
  "fstar_reflection_v1_formula" -> "fstar_list_tot_base"
  "fstar_reflection_v1_formula" -> "fstar_pervasives"
  "fstar_reflection_v1_formula" -> "fstar_pervasives"
  "fstar_reflection_v1_formula" -> "prims"
  "fstar_reflection_v1_formula" -> "prims"
  "fstar_strongexcludedmiddle" -> "fstar_pervasives"
  "fstar_strongexcludedmiddle" -> "fstar_pervasives"
  "fstar_strongexcludedmiddle" -> "prims"
  "fstar_strongexcludedmiddle" -> "prims"
  "fstar_tactics_effect" -> "fstar_range"
  "fstar_tactics_effect" -> "fstar_stubs_tactics_result"
  "fstar_tactics_effect" -> "fstar_stubs_tactics_types"
  "fstar_tactics_effect" -> "fstar_stubs_reflection_types"
  "fstar_tactics_effect" -> "fstar_monotonic_pure"
  "fstar_tactics_effect" -> "fstar_monotonic_pure"
  "fstar_tactics_effect" -> "fstar_pervasives"
  "fstar_tactics_effect" -> "fstar_pervasives"
  "fstar_tactics_effect" -> "prims"
  "fstar_tactics_effect" -> "prims"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_encoding_signing_key" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_signing_key" -> "core"
  "libcrux_ml_dsa_encoding_signing_key" -> "core"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_signing_key" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_signing_key" -> "prims"
  "libcrux_ml_dsa_encoding_signing_key" -> "prims"
  "fstar_tactics_print" -> "fstar_tactics_effect"
  "fstar_tactics_print" -> "fstar_tactics_effect"
  "fstar_tactics_print" -> "fstar_stubs_reflection_v2_data"
  "fstar_tactics_print" -> "fstar_stubs_reflection_types"
  "fstar_tactics_print" -> "fstar_pervasives"
  "fstar_tactics_print" -> "fstar_pervasives"
  "fstar_tactics_print" -> "prims"
  "fstar_tactics_print" -> "prims"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "core_slice"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_ml_dsa_simd_avx2_arithmetic"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_ml_dsa_simd_avx2_arithmetic"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "core"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "core"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "prims"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "prims"
  "libcrux_ml_dsa_simd_avx2_ntt" -> "libcrux_ml_dsa_simd_avx2_ntt"
  "fstar_tactics_bv" -> "fstar_tactics_bv_lemmas"
  "fstar_tactics_bv" -> "fstar_tactics_bv_lemmas"
  "fstar_tactics_bv" -> "fstar_tactics_effect"
  "fstar_tactics_bv" -> "fstar_tactics_effect"
  "fstar_tactics_bv" -> "fstar_pervasives"
  "fstar_tactics_bv" -> "fstar_pervasives"
  "fstar_tactics_bv" -> "prims"
  "fstar_tactics_bv" -> "prims"
  "fstar_stubs_syntax_syntax" -> "fstar_stubs_reflection_types"
  "fstar_stubs_syntax_syntax" -> "fstar_pervasives"
  "fstar_stubs_syntax_syntax" -> "fstar_pervasives"
  "fstar_stubs_syntax_syntax" -> "prims"
  "fstar_stubs_syntax_syntax" -> "prims"
  "libcrux_ml_dsa_polynomial" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_polynomial" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_polynomial" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_polynomial" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_polynomial" -> "fstar_mul"
  "libcrux_ml_dsa_polynomial" -> "fstar_mul"
  "libcrux_ml_dsa_polynomial" -> "core"
  "libcrux_ml_dsa_polynomial" -> "core"
  "libcrux_ml_dsa_polynomial" -> "fstar_pervasives"
  "libcrux_ml_dsa_polynomial" -> "fstar_pervasives"
  "libcrux_ml_dsa_polynomial" -> "prims"
  "libcrux_ml_dsa_polynomial" -> "prims"
  "core_fmt_rt" -> "fstar_pervasives"
  "core_fmt_rt" -> "fstar_pervasives"
  "core_fmt_rt" -> "prims"
  "core_fmt_rt" -> "prims"
  "libcrux_ml_dsa_types" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_types" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_types" -> "fstar_mul"
  "libcrux_ml_dsa_types" -> "fstar_mul"
  "libcrux_ml_dsa_types" -> "core"
  "libcrux_ml_dsa_types" -> "core"
  "libcrux_ml_dsa_types" -> "fstar_pervasives"
  "libcrux_ml_dsa_types" -> "fstar_pervasives"
  "libcrux_ml_dsa_types" -> "prims"
  "libcrux_ml_dsa_types" -> "prims"
  "libcrux_ml_dsa_types" -> "libcrux_ml_dsa_types"
  "lib_bytesequence" -> "fstar_pervasives_native"
  "lib_bytesequence" -> "fstar_pervasives_native"
  "lib_bytesequence" -> "fstar_calc"
  "lib_bytesequence" -> "fstar_calc"
  "lib_bytesequence" -> "fstar_math_lemmas"
  "lib_bytesequence" -> "fstar_math_lemmas"
  "lib_bytesequence" -> "fstar_classical"
  "lib_bytesequence" -> "fstar_classical"
  "lib_bytesequence" -> "fstar_uint8"
  "lib_bytesequence" -> "fstar_uint8"
  "lib_bytesequence" -> "fstar_seq"
  "lib_bytesequence" -> "fstar_seq"
  "lib_bytesequence" -> "lib_loopcombinators"
  "lib_bytesequence" -> "lib_loopcombinators"
  "lib_bytesequence" -> "lib_rawinttypes"
  "lib_bytesequence" -> "lib_rawinttypes"
  "lib_bytesequence" -> "lib_sequence"
  "lib_bytesequence" -> "lib_sequence"
  "lib_bytesequence" -> "lib_inttypes"
  "lib_bytesequence" -> "lib_inttypes"
  "lib_bytesequence" -> "fstar_mul"
  "lib_bytesequence" -> "fstar_mul"
  "lib_bytesequence" -> "fstar_pervasives"
  "lib_bytesequence" -> "fstar_pervasives"
  "lib_bytesequence" -> "prims"
  "lib_bytesequence" -> "prims"
  "lib_bytesequence" -> "lib_bytesequence"
  "fstar_uint64" -> "fstar_uint32"
  "fstar_uint64" -> "fstar_uint32"
  "fstar_uint64" -> "fstar_mul"
  "fstar_uint64" -> "fstar_mul"
  "fstar_uint64" -> "fstar_uint"
  "fstar_uint64" -> "fstar_uint"
  "fstar_uint64" -> "fstar_pervasives"
  "fstar_uint64" -> "fstar_pervasives"
  "fstar_uint64" -> "prims"
  "fstar_uint64" -> "prims"
  "fstar_uint64" -> "fstar_uint64"
  "spec_sha3_constants" -> "fstar_uint64"
  "spec_sha3_constants" -> "fstar_uint64"
  "spec_sha3_constants" -> "fstar_list_tot"
  "spec_sha3_constants" -> "fstar_list_tot"
  "spec_sha3_constants" -> "fstar_uint32"
  "spec_sha3_constants" -> "fstar_uint32"
  "spec_sha3_constants" -> "lib_sequence"
  "spec_sha3_constants" -> "lib_sequence"
  "spec_sha3_constants" -> "lib_inttypes"
  "spec_sha3_constants" -> "lib_inttypes"
  "spec_sha3_constants" -> "fstar_pervasives"
  "spec_sha3_constants" -> "fstar_pervasives"
  "spec_sha3_constants" -> "prims"
  "spec_sha3_constants" -> "prims"
  "libcrux_ml_dsa_pre_hash" -> "rust_primitives_hax"
  "libcrux_ml_dsa_pre_hash" -> "rust_primitives_hax"
  "libcrux_ml_dsa_pre_hash" -> "fstar_list_tot"
  "libcrux_ml_dsa_pre_hash" -> "fstar_list_tot"
  "libcrux_ml_dsa_pre_hash" -> "fstar_uint8"
  "libcrux_ml_dsa_pre_hash" -> "fstar_uint8"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_pre_hash" -> "core_convert"
  "libcrux_ml_dsa_pre_hash" -> "core_convert"
  "libcrux_ml_dsa_pre_hash" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_pre_hash" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_pre_hash" -> "core_result"
  "libcrux_ml_dsa_pre_hash" -> "core_result"
  "libcrux_ml_dsa_pre_hash" -> "core_option"
  "libcrux_ml_dsa_pre_hash" -> "core_option"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_pre_hash" -> "fstar_mul"
  "libcrux_ml_dsa_pre_hash" -> "fstar_mul"
  "libcrux_ml_dsa_pre_hash" -> "core"
  "libcrux_ml_dsa_pre_hash" -> "core"
  "libcrux_ml_dsa_pre_hash" -> "fstar_pervasives"
  "libcrux_ml_dsa_pre_hash" -> "fstar_pervasives"
  "libcrux_ml_dsa_pre_hash" -> "prims"
  "libcrux_ml_dsa_pre_hash" -> "prims"
  "fstar_tactics_v1" -> "fstar_tactics_smt"
  "fstar_tactics_v1" -> "fstar_tactics_smt"
  "fstar_tactics_v1" -> "fstar_tactics_visit"
  "fstar_tactics_v1" -> "fstar_tactics_visit"
  "fstar_tactics_v1" -> "fstar_tactics_print"
  "fstar_tactics_v1" -> "fstar_tactics_print"
  "fstar_tactics_v1" -> "fstar_tactics_util"
  "fstar_tactics_v1" -> "fstar_tactics_util"
  "fstar_tactics_v1" -> "fstar_tactics_v1_logic"
  "fstar_tactics_v1" -> "fstar_tactics_v1_logic"
  "fstar_tactics_v1" -> "fstar_tactics_v1_syntaxhelpers"
  "fstar_tactics_v1" -> "fstar_tactics_v1_syntaxhelpers"
  "fstar_tactics_v1" -> "fstar_tactics_v1_derived"
  "fstar_tactics_v1" -> "fstar_tactics_v1_derived"
  "fstar_tactics_v1" -> "fstar_stubs_tactics_v1_builtins"
  "fstar_tactics_v1" -> "fstar_tactics_effect"
  "fstar_tactics_v1" -> "fstar_tactics_effect"
  "fstar_tactics_v1" -> "fstar_stubs_tactics_types"
  "fstar_tactics_v1" -> "fstar_reflection_v1_compare"
  "fstar_tactics_v1" -> "fstar_reflection_v1_formula"
  "fstar_tactics_v1" -> "fstar_reflection_v1_formula"
  "fstar_tactics_v1" -> "fstar_reflection_v1_derived"
  "fstar_tactics_v1" -> "fstar_reflection_v1_derived"
  "fstar_tactics_v1" -> "fstar_stubs_reflection_v1_builtins"
  "fstar_tactics_v1" -> "fstar_stubs_reflection_v1_data"
  "fstar_tactics_v1" -> "fstar_reflection_const"
  "fstar_tactics_v1" -> "fstar_reflection_const"
  "fstar_tactics_v1" -> "fstar_stubs_reflection_types"
  "fstar_tactics_v1" -> "fstar_pervasives"
  "fstar_tactics_v1" -> "fstar_pervasives"
  "fstar_tactics_v1" -> "prims"
  "fstar_tactics_v1" -> "prims"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_ntt"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_ntt"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_t1"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_t1"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_t0"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_t0"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_error"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_error"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_commitment"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_commitment"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_gamma1"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_encoding_gamma1"
  "libcrux_ml_dsa_simd_portable" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_portable" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_sample"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_sample"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_arithmetic"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_arithmetic"
  "libcrux_ml_dsa_simd_portable" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_portable" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable" -> "core"
  "libcrux_ml_dsa_simd_portable" -> "core"
  "libcrux_ml_dsa_simd_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable" -> "prims"
  "libcrux_ml_dsa_simd_portable" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_error" -> "prims"
  "fstar_seq_base" -> "fstar_list_tot"
  "fstar_seq_base" -> "fstar_list_tot"
  "fstar_seq_base" -> "fstar_pervasives"
  "fstar_seq_base" -> "fstar_pervasives"
  "fstar_seq_base" -> "prims"
  "fstar_seq_base" -> "prims"
  "fstar_seq_base" -> "fstar_seq_base"
  "fstar_int8" -> "fstar_uint32"
  "fstar_int8" -> "fstar_uint32"
  "fstar_int8" -> "fstar_math_lemmas"
  "fstar_int8" -> "fstar_math_lemmas"
  "fstar_int8" -> "fstar_mul"
  "fstar_int8" -> "fstar_mul"
  "fstar_int8" -> "fstar_int"
  "fstar_int8" -> "fstar_int"
  "fstar_int8" -> "fstar_pervasives"
  "fstar_int8" -> "fstar_pervasives"
  "fstar_int8" -> "prims"
  "fstar_int8" -> "prims"
  "fstar_int8" -> "fstar_int8"
  "bitvec_utils" -> "fstar_list_tot"
  "bitvec_utils" -> "fstar_list_tot"
  "bitvec_utils" -> "rust_primitives_bitvectors"
  "bitvec_utils" -> "rust_primitives_bitvectors"
  "bitvec_utils" -> "bitvec_equality"
  "bitvec_utils" -> "bitvec_equality"
  "bitvec_utils" -> "fstar_functionalextensionality"
  "bitvec_utils" -> "fstar_functionalextensionality"
  "bitvec_utils" -> "core"
  "bitvec_utils" -> "core"
  "bitvec_utils" -> "fstar_pervasives"
  "bitvec_utils" -> "fstar_pervasives"
  "bitvec_utils" -> "prims"
  "bitvec_utils" -> "prims"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_sha3_portable_incremental"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_sha3_portable"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_sha3_portable"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_portable" -> "core"
  "libcrux_ml_dsa_hash_functions_portable" -> "core"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_portable" -> "prims"
  "libcrux_ml_dsa_hash_functions_portable" -> "prims"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_ml_dsa_hash_functions_portable"
  "core_clone" -> "fstar_tactics_typeclasses"
  "core_clone" -> "fstar_tactics_typeclasses"
  "core_clone" -> "fstar_pervasives"
  "core_clone" -> "fstar_pervasives"
  "core_clone" -> "prims"
  "core_clone" -> "prims"
  "libcrux_ml_dsa_simd_portable_ntt" -> "libcrux_ml_dsa_simd_portable_rec_bundle_437004224"
  "libcrux_ml_dsa_simd_portable_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_ntt" -> "core"
  "libcrux_ml_dsa_simd_portable_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_ntt" -> "prims"
  "libcrux_ml_dsa_simd_portable_ntt" -> "libcrux_ml_dsa_simd_portable_ntt"
  "fstar_bv" -> "fstar_list"
  "fstar_bv" -> "fstar_list"
  "fstar_bv" -> "fstar_uint"
  "fstar_bv" -> "fstar_uint"
  "fstar_bv" -> "fstar_pervasives"
  "fstar_bv" -> "fstar_pervasives"
  "fstar_bv" -> "prims"
  "fstar_bv" -> "prims"
  "libcrux_ml_dsa_polynomial" -> "core_ops_range"
  "libcrux_ml_dsa_polynomial" -> "fstar_int32"
  "libcrux_ml_dsa_polynomial" -> "fstar_int32"
  "libcrux_ml_dsa_polynomial" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_polynomial" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_polynomial" -> "core_option"
  "libcrux_ml_dsa_polynomial" -> "core_option"
  "libcrux_ml_dsa_polynomial" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_polynomial" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_polynomial" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_polynomial" -> "core_slice_iter"
  "libcrux_ml_dsa_polynomial" -> "core_slice_iter"
  "libcrux_ml_dsa_polynomial" -> "core_slice"
  "libcrux_ml_dsa_polynomial" -> "hax_lib"
  "libcrux_ml_dsa_polynomial" -> "hax_lib"
  "libcrux_ml_dsa_polynomial" -> "rust_primitives_hax"
  "libcrux_ml_dsa_polynomial" -> "rust_primitives_hax"
  "libcrux_ml_dsa_polynomial" -> "core_array_iter"
  "libcrux_ml_dsa_polynomial" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_polynomial" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_polynomial" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_polynomial" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_polynomial" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_polynomial" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_polynomial" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_polynomial" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_polynomial" -> "fstar_mul"
  "libcrux_ml_dsa_polynomial" -> "fstar_mul"
  "libcrux_ml_dsa_polynomial" -> "core"
  "libcrux_ml_dsa_polynomial" -> "core"
  "libcrux_ml_dsa_polynomial" -> "fstar_pervasives"
  "libcrux_ml_dsa_polynomial" -> "fstar_pervasives"
  "libcrux_ml_dsa_polynomial" -> "prims"
  "libcrux_ml_dsa_polynomial" -> "prims"
  "libcrux_ml_dsa_polynomial" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_types" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_types" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_types" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_types" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_types" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_types" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_types" -> "fstar_mul"
  "libcrux_ml_dsa_types" -> "fstar_mul"
  "libcrux_ml_dsa_types" -> "core"
  "libcrux_ml_dsa_types" -> "core"
  "libcrux_ml_dsa_types" -> "fstar_pervasives"
  "libcrux_ml_dsa_types" -> "fstar_pervasives"
  "libcrux_ml_dsa_types" -> "prims"
  "libcrux_ml_dsa_types" -> "prims"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "core"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "prims"
  "fstar_erasedlogic" -> "fstar_ghost"
  "fstar_erasedlogic" -> "fstar_ghost"
  "fstar_erasedlogic" -> "fstar_pervasives"
  "fstar_erasedlogic" -> "fstar_pervasives"
  "fstar_erasedlogic" -> "prims"
  "fstar_erasedlogic" -> "prims"
  "core_array" -> "rust_primitives"
  "core_array" -> "rust_primitives"
  "core_array" -> "fstar_pervasives"
  "core_array" -> "fstar_pervasives"
  "core_array" -> "prims"
  "core_array" -> "prims"
  "fstar_math_lemmas" -> "fstar_mul"
  "fstar_math_lemmas" -> "fstar_mul"
  "fstar_math_lemmas" -> "fstar_pervasives"
  "fstar_math_lemmas" -> "fstar_pervasives"
  "fstar_math_lemmas" -> "prims"
  "fstar_math_lemmas" -> "prims"
  "fstar_tactics_names" -> "fstar_tactics_visit"
  "fstar_tactics_names" -> "fstar_tactics_visit"
  "fstar_tactics_names" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_tactics_names" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_names" -> "fstar_tactics_effect"
  "fstar_tactics_names" -> "fstar_tactics_effect"
  "fstar_tactics_names" -> "fstar_tactics_namedview"
  "fstar_tactics_names" -> "fstar_tactics_namedview"
  "fstar_tactics_names" -> "fstar_pervasives"
  "fstar_tactics_names" -> "fstar_pervasives"
  "fstar_tactics_names" -> "prims"
  "fstar_tactics_names" -> "prims"
  "fstar_tactics_names" -> "fstar_tactics_names"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_list_tot_base"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_list_tot_base"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_pervasives_native"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_pervasives_native"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_stubs_tactics_types"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_effect"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_effect"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_reflection_v2"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_reflection_v2"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_pervasives"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_pervasives"
  "fstar_tactics_v2_syntaxhelpers" -> "prims"
  "fstar_tactics_v2_syntaxhelpers" -> "prims"
  "fstar_tactics_v2_syntaxhelpers" -> "fstar_tactics_v2_syntaxhelpers"
  "rust_primitives_integers" -> "fstar_int_cast"
  "rust_primitives_integers" -> "fstar_int_cast"
  "rust_primitives_integers" -> "fstar_pervasives"
  "rust_primitives_integers" -> "fstar_pervasives"
  "rust_primitives_integers" -> "prims"
  "rust_primitives_integers" -> "prims"
  "rust_primitives_integers" -> "rust_primitives_integers"
  "core_marker" -> "fstar_tactics_typeclasses"
  "core_marker" -> "fstar_tactics_typeclasses"
  "core_marker" -> "fstar_pervasives"
  "core_marker" -> "fstar_pervasives"
  "core_marker" -> "prims"
  "core_marker" -> "prims"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable_rec_bundle_437004224"
  "libcrux_ml_dsa_simd_portable" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable" -> "core"
  "libcrux_ml_dsa_simd_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable" -> "prims"
  "libcrux_ml_dsa_simd_portable" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_verification_key" -> "core_convert"
  "libcrux_ml_dsa_encoding_verification_key" -> "core_convert"
  "libcrux_ml_dsa_encoding_verification_key" -> "core_array"
  "libcrux_ml_dsa_encoding_verification_key" -> "core_array"
  "libcrux_ml_dsa_encoding_verification_key" -> "core_result"
  "libcrux_ml_dsa_encoding_verification_key" -> "core_result"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_verification_key" -> "core_ops_range"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_encoding_t1"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_encoding_t1"
  "libcrux_ml_dsa_encoding_verification_key" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_verification_key" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_verification_key" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_encoding_verification_key" -> "core_slice"
  "libcrux_ml_dsa_encoding_verification_key" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_verification_key" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_verification_key" -> "core"
  "libcrux_ml_dsa_encoding_verification_key" -> "core"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_verification_key" -> "prims"
  "libcrux_ml_dsa_encoding_verification_key" -> "prims"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_encoding_verification_key"
  "core_ops_control_flow" -> "fstar_pervasives"
  "core_ops_control_flow" -> "fstar_pervasives"
  "core_ops_control_flow" -> "prims"
  "core_ops_control_flow" -> "prims"
  "fstar_uint32" -> "fstar_mul"
  "fstar_uint32" -> "fstar_mul"
  "fstar_uint32" -> "fstar_uint"
  "fstar_uint32" -> "fstar_uint"
  "fstar_uint32" -> "fstar_pervasives"
  "fstar_uint32" -> "fstar_pervasives"
  "fstar_uint32" -> "prims"
  "fstar_uint32" -> "prims"
  "fstar_uint32" -> "fstar_uint32"
  "fstar_tactics_v2_derived" -> "fstar_propositionalextensionality"
  "fstar_tactics_v2_derived" -> "fstar_propositionalextensionality"
  "fstar_tactics_v2_derived" -> "fstar_squash"
  "fstar_tactics_v2_derived" -> "fstar_squash"
  "fstar_tactics_v2_derived" -> "fstar_range"
  "fstar_tactics_v2_derived" -> "fstar_pervasives_native"
  "fstar_tactics_v2_derived" -> "fstar_pervasives_native"
  "fstar_tactics_v2_derived" -> "fstar_reflection_termeq_simple"
  "fstar_tactics_v2_derived" -> "fstar_reflection_termeq_simple"
  "fstar_tactics_v2_derived" -> "fstar_tactics_visit"
  "fstar_tactics_v2_derived" -> "fstar_tactics_visit"
  "fstar_tactics_v2_derived" -> "fstar_list_tot_base"
  "fstar_tactics_v2_derived" -> "fstar_list_tot_base"
  "fstar_tactics_v2_derived" -> "fstar_tactics_names"
  "fstar_tactics_v2_derived" -> "fstar_tactics_names"
  "fstar_tactics_v2_derived" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_v2_derived" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_v2_derived" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_derived" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_derived" -> "fstar_vconfig"
  "fstar_tactics_v2_derived" -> "fstar_tactics_v2_syntaxhelpers"
  "fstar_tactics_v2_derived" -> "fstar_tactics_v2_syntaxhelpers"
  "fstar_tactics_v2_derived" -> "fstar_tactics_util"
  "fstar_tactics_v2_derived" -> "fstar_tactics_util"
  "fstar_tactics_v2_derived" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_v2_derived" -> "fstar_stubs_tactics_result"
  "fstar_tactics_v2_derived" -> "fstar_stubs_tactics_types"
  "fstar_tactics_v2_derived" -> "fstar_tactics_effect"
  "fstar_tactics_v2_derived" -> "fstar_tactics_effect"
  "fstar_tactics_v2_derived" -> "fstar_reflection_v2_formula"
  "fstar_tactics_v2_derived" -> "fstar_reflection_v2_formula"
  "fstar_tactics_v2_derived" -> "fstar_reflection_v2"
  "fstar_tactics_v2_derived" -> "fstar_reflection_v2"
  "fstar_tactics_v2_derived" -> "fstar_pervasives"
  "fstar_tactics_v2_derived" -> "fstar_pervasives"
  "fstar_tactics_v2_derived" -> "prims"
  "fstar_tactics_v2_derived" -> "prims"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "prims"
  "fstar_stubs_pprint" -> "fstar_float"
  "fstar_stubs_pprint" -> "fstar_char"
  "fstar_stubs_pprint" -> "fstar_pervasives"
  "fstar_stubs_pprint" -> "fstar_pervasives"
  "fstar_stubs_pprint" -> "prims"
  "fstar_stubs_pprint" -> "prims"
  "fstar_reflection_termeq" -> "fstar_list_tot"
  "fstar_reflection_termeq" -> "fstar_list_tot"
  "fstar_reflection_termeq" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_reflection_termeq" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_termeq" -> "fstar_stubs_reflection_types"
  "fstar_reflection_termeq" -> "fstar_pervasives"
  "fstar_reflection_termeq" -> "fstar_pervasives"
  "fstar_reflection_termeq" -> "prims"
  "fstar_reflection_termeq" -> "prims"
  "fstar_st" -> "fstar_set"
  "fstar_st" -> "fstar_set"
  "fstar_st" -> "fstar_monotonic_witnessed"
  "fstar_st" -> "fstar_monotonic_witnessed"
  "fstar_st" -> "fstar_preorder"
  "fstar_st" -> "fstar_preorder"
  "fstar_st" -> "fstar_heap"
  "fstar_st" -> "fstar_heap"
  "fstar_st" -> "fstar_tset"
  "fstar_st" -> "fstar_tset"
  "fstar_st" -> "fstar_pervasives"
  "fstar_st" -> "fstar_pervasives"
  "fstar_st" -> "prims"
  "fstar_st" -> "prims"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_list_tot_base"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_list_tot_base"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_pervasives_native"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_pervasives_native"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_stubs_tactics_v1_builtins"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_stubs_tactics_types"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_tactics_effect"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_tactics_effect"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_reflection_v1"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_reflection_v1"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_pervasives"
  "fstar_tactics_v1_syntaxhelpers" -> "fstar_pervasives"
  "fstar_tactics_v1_syntaxhelpers" -> "prims"
  "fstar_tactics_v1_syntaxhelpers" -> "prims"
  "lib_rawinttypes" -> "fstar_uint128"
  "lib_rawinttypes" -> "fstar_uint128"
  "lib_rawinttypes" -> "fstar_uint64"
  "lib_rawinttypes" -> "fstar_uint64"
  "lib_rawinttypes" -> "fstar_uint32"
  "lib_rawinttypes" -> "fstar_uint32"
  "lib_rawinttypes" -> "fstar_uint16"
  "lib_rawinttypes" -> "fstar_uint16"
  "lib_rawinttypes" -> "fstar_uint8"
  "lib_rawinttypes" -> "fstar_uint8"
  "lib_rawinttypes" -> "lib_inttypes"
  "lib_rawinttypes" -> "lib_inttypes"
  "lib_rawinttypes" -> "fstar_pervasives"
  "lib_rawinttypes" -> "fstar_pervasives"
  "lib_rawinttypes" -> "prims"
  "lib_rawinttypes" -> "prims"
  "fstar_uint8" -> "fstar_uint32"
  "fstar_uint8" -> "fstar_uint32"
  "fstar_uint8" -> "fstar_mul"
  "fstar_uint8" -> "fstar_mul"
  "fstar_uint8" -> "fstar_uint"
  "fstar_uint8" -> "fstar_uint"
  "fstar_uint8" -> "fstar_pervasives"
  "fstar_uint8" -> "fstar_pervasives"
  "fstar_uint8" -> "prims"
  "fstar_uint8" -> "prims"
  "fstar_uint8" -> "fstar_uint8"
  "libcrux_sha3_traits" -> "fstar_tactics_typeclasses"
  "libcrux_sha3_traits" -> "fstar_tactics_typeclasses"
  "libcrux_sha3_traits" -> "fstar_mul"
  "libcrux_sha3_traits" -> "fstar_mul"
  "libcrux_sha3_traits" -> "core"
  "libcrux_sha3_traits" -> "core"
  "libcrux_sha3_traits" -> "fstar_pervasives"
  "libcrux_sha3_traits" -> "fstar_pervasives"
  "libcrux_sha3_traits" -> "prims"
  "libcrux_sha3_traits" -> "prims"
  "rust_primitives" -> "fstar_seq"
  "rust_primitives" -> "fstar_seq"
  "rust_primitives" -> "fstar_tactics_typeclasses"
  "rust_primitives" -> "fstar_tactics_typeclasses"
  "rust_primitives" -> "core_ops_control_flow"
  "rust_primitives" -> "core_ops_control_flow"
  "rust_primitives" -> "core_result"
  "rust_primitives" -> "core_result"
  "rust_primitives" -> "core_option"
  "rust_primitives" -> "core_option"
  "rust_primitives" -> "rust_primitives_bitvectors"
  "rust_primitives" -> "rust_primitives_bitvectors"
  "rust_primitives" -> "rust_primitives_arrays"
  "rust_primitives" -> "rust_primitives_arrays"
  "rust_primitives" -> "rust_primitives_integers"
  "rust_primitives" -> "rust_primitives_integers"
  "rust_primitives" -> "fstar_pervasives"
  "rust_primitives" -> "fstar_pervasives"
  "rust_primitives" -> "prims"
  "rust_primitives" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_neon"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_neon"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "prims"
  "fstar_int16" -> "fstar_uint32"
  "fstar_int16" -> "fstar_uint32"
  "fstar_int16" -> "fstar_math_lemmas"
  "fstar_int16" -> "fstar_math_lemmas"
  "fstar_int16" -> "fstar_mul"
  "fstar_int16" -> "fstar_mul"
  "fstar_int16" -> "fstar_int"
  "fstar_int16" -> "fstar_int"
  "fstar_int16" -> "fstar_pervasives"
  "fstar_int16" -> "fstar_pervasives"
  "fstar_int16" -> "prims"
  "fstar_int16" -> "prims"
  "fstar_int16" -> "fstar_int16"
  "fstar_reflection_v1" -> "fstar_reflection_v1_compare"
  "fstar_reflection_v1" -> "fstar_reflection_const"
  "fstar_reflection_v1" -> "fstar_reflection_const"
  "fstar_reflection_v1" -> "fstar_reflection_v1_derived_lemmas"
  "fstar_reflection_v1" -> "fstar_reflection_v1_derived_lemmas"
  "fstar_reflection_v1" -> "fstar_reflection_v1_derived"
  "fstar_reflection_v1" -> "fstar_reflection_v1_derived"
  "fstar_reflection_v1" -> "fstar_stubs_reflection_v1_builtins"
  "fstar_reflection_v1" -> "fstar_stubs_reflection_v1_data"
  "fstar_reflection_v1" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v1" -> "fstar_pervasives"
  "fstar_reflection_v1" -> "fstar_pervasives"
  "fstar_reflection_v1" -> "prims"
  "fstar_reflection_v1" -> "prims"
  "fstar_tactics_v2_logic" -> "fstar_pervasives_native"
  "fstar_tactics_v2_logic" -> "fstar_pervasives_native"
  "fstar_tactics_v2_logic" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_v2_logic" -> "fstar_stubs_tactics_types"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v1_logic_lemmas"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v1_logic_lemmas"
  "fstar_tactics_v2_logic" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_logic" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_logic" -> "fstar_reflection_v2_formula"
  "fstar_tactics_v2_logic" -> "fstar_reflection_v2_formula"
  "fstar_tactics_v2_logic" -> "fstar_reflection_v2"
  "fstar_tactics_v2_logic" -> "fstar_reflection_v2"
  "fstar_tactics_v2_logic" -> "fstar_tactics_effect"
  "fstar_tactics_v2_logic" -> "fstar_tactics_effect"
  "fstar_tactics_v2_logic" -> "fstar_pervasives"
  "fstar_tactics_v2_logic" -> "fstar_pervasives"
  "fstar_tactics_v2_logic" -> "prims"
  "fstar_tactics_v2_logic" -> "prims"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_samplex4" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_samplex4" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_samplex4" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_samplex4" -> "fstar_mul"
  "libcrux_ml_dsa_samplex4" -> "fstar_mul"
  "libcrux_ml_dsa_samplex4" -> "core"
  "libcrux_ml_dsa_samplex4" -> "core"
  "libcrux_ml_dsa_samplex4" -> "fstar_pervasives"
  "libcrux_ml_dsa_samplex4" -> "fstar_pervasives"
  "libcrux_ml_dsa_samplex4" -> "prims"
  "libcrux_ml_dsa_samplex4" -> "prims"
  "fstar_functionalextensionality" -> "fstar_pervasives_native"
  "fstar_functionalextensionality" -> "fstar_pervasives_native"
  "fstar_functionalextensionality" -> "fstar_tactics_effect"
  "fstar_functionalextensionality" -> "fstar_tactics_effect"
  "fstar_functionalextensionality" -> "fstar_stubs_tactics_types"
  "fstar_functionalextensionality" -> "fstar_stubs_reflection_types"
  "fstar_functionalextensionality" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_functionalextensionality" -> "fstar_pervasives"
  "fstar_functionalextensionality" -> "fstar_pervasives"
  "fstar_functionalextensionality" -> "prims"
  "fstar_functionalextensionality" -> "prims"
  "fstar_functionalextensionality" -> "fstar_functionalextensionality"
  "rust_primitives_integers" -> "fstar_pervasives_native"
  "rust_primitives_integers" -> "fstar_pervasives_native"
  "rust_primitives_integers" -> "fstar_int"
  "rust_primitives_integers" -> "fstar_int"
  "rust_primitives_integers" -> "fstar_int128"
  "rust_primitives_integers" -> "fstar_int128"
  "rust_primitives_integers" -> "fstar_uint128"
  "rust_primitives_integers" -> "fstar_uint128"
  "rust_primitives_integers" -> "fstar_int64"
  "rust_primitives_integers" -> "fstar_int64"
  "rust_primitives_integers" -> "fstar_uint64"
  "rust_primitives_integers" -> "fstar_uint64"
  "rust_primitives_integers" -> "fstar_int32"
  "rust_primitives_integers" -> "fstar_int32"
  "rust_primitives_integers" -> "fstar_uint32"
  "rust_primitives_integers" -> "fstar_uint32"
  "rust_primitives_integers" -> "fstar_int16"
  "rust_primitives_integers" -> "fstar_int16"
  "rust_primitives_integers" -> "fstar_uint16"
  "rust_primitives_integers" -> "fstar_uint16"
  "rust_primitives_integers" -> "fstar_int8"
  "rust_primitives_integers" -> "fstar_int8"
  "rust_primitives_integers" -> "fstar_uint8"
  "rust_primitives_integers" -> "fstar_uint8"
  "rust_primitives_integers" -> "lib_inttypes"
  "rust_primitives_integers" -> "lib_inttypes"
  "rust_primitives_integers" -> "fstar_mul"
  "rust_primitives_integers" -> "fstar_mul"
  "rust_primitives_integers" -> "fstar_pervasives"
  "rust_primitives_integers" -> "fstar_pervasives"
  "rust_primitives_integers" -> "prims"
  "rust_primitives_integers" -> "prims"
  "fstar_set" -> "fstar_classical"
  "fstar_set" -> "fstar_classical"
  "fstar_set" -> "fstar_functionalextensionality"
  "fstar_set" -> "fstar_functionalextensionality"
  "fstar_set" -> "fstar_pervasives"
  "fstar_set" -> "fstar_pervasives"
  "fstar_set" -> "prims"
  "fstar_set" -> "prims"
  "fstar_set" -> "fstar_set"
  "fstar_tactics" -> "fstar_tactics_v1"
  "fstar_tactics" -> "fstar_tactics_v1"
  "fstar_tactics" -> "fstar_pervasives"
  "fstar_tactics" -> "fstar_pervasives"
  "fstar_tactics" -> "prims"
  "fstar_tactics" -> "prims"
  "lib_bytesequence" -> "fstar_seq"
  "lib_bytesequence" -> "fstar_seq"
  "lib_bytesequence" -> "fstar_seq_base"
  "lib_bytesequence" -> "fstar_seq_base"
  "lib_bytesequence" -> "lib_sequence"
  "lib_bytesequence" -> "lib_sequence"
  "lib_bytesequence" -> "lib_inttypes"
  "lib_bytesequence" -> "lib_inttypes"
  "lib_bytesequence" -> "fstar_mul"
  "lib_bytesequence" -> "fstar_mul"
  "lib_bytesequence" -> "fstar_pervasives"
  "lib_bytesequence" -> "fstar_pervasives"
  "lib_bytesequence" -> "prims"
  "lib_bytesequence" -> "prims"
  "rust_primitives_bitvectors" -> "fstar_math_lemmas"
  "rust_primitives_bitvectors" -> "fstar_math_lemmas"
  "rust_primitives_bitvectors" -> "rust_primitives_integers"
  "rust_primitives_bitvectors" -> "rust_primitives_integers"
  "rust_primitives_bitvectors" -> "rust_primitives_arrays"
  "rust_primitives_bitvectors" -> "rust_primitives_arrays"
  "rust_primitives_bitvectors" -> "fstar_mul"
  "rust_primitives_bitvectors" -> "fstar_mul"
  "rust_primitives_bitvectors" -> "fstar_pervasives"
  "rust_primitives_bitvectors" -> "fstar_pervasives"
  "rust_primitives_bitvectors" -> "prims"
  "rust_primitives_bitvectors" -> "prims"
  "rust_primitives_bitvectors" -> "rust_primitives_bitvectors"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_ntt" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_ntt" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_ntt" -> "rust_primitives_hax"
  "libcrux_ml_dsa_ntt" -> "rust_primitives_hax"
  "libcrux_ml_dsa_ntt" -> "fstar_list_tot"
  "libcrux_ml_dsa_ntt" -> "fstar_list_tot"
  "libcrux_ml_dsa_ntt" -> "fstar_int32"
  "libcrux_ml_dsa_ntt" -> "fstar_int32"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ntt" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_ntt" -> "core"
  "libcrux_ml_dsa_ntt" -> "core"
  "libcrux_ml_dsa_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_ntt" -> "prims"
  "libcrux_ml_dsa_ntt" -> "prims"
  "fstar_classical_sugar" -> "fstar_pervasives"
  "fstar_classical_sugar" -> "fstar_pervasives"
  "fstar_classical_sugar" -> "prims"
  "fstar_classical_sugar" -> "prims"
  "fstar_tactics_bv_lemmas" -> "fstar_uint"
  "fstar_tactics_bv_lemmas" -> "fstar_uint"
  "fstar_tactics_bv_lemmas" -> "fstar_bv"
  "fstar_tactics_bv_lemmas" -> "fstar_bv"
  "fstar_tactics_bv_lemmas" -> "fstar_pervasives"
  "fstar_tactics_bv_lemmas" -> "fstar_pervasives"
  "fstar_tactics_bv_lemmas" -> "prims"
  "fstar_tactics_bv_lemmas" -> "prims"
  "fstar_tactics_bv_lemmas" -> "fstar_tactics_bv_lemmas"
  "fstar_int8" -> "fstar_uint"
  "fstar_int8" -> "fstar_uint"
  "fstar_int8" -> "fstar_uint32"
  "fstar_int8" -> "fstar_uint32"
  "fstar_int8" -> "fstar_mul"
  "fstar_int8" -> "fstar_mul"
  "fstar_int8" -> "fstar_int"
  "fstar_int8" -> "fstar_int"
  "fstar_int8" -> "fstar_pervasives"
  "fstar_int8" -> "fstar_pervasives"
  "fstar_int8" -> "prims"
  "fstar_int8" -> "prims"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_sha3_neon_x2"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_list_tot"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_list_tot"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_sha3_neon_x2_incremental"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_neon" -> "core"
  "libcrux_ml_dsa_hash_functions_neon" -> "core"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_neon" -> "prims"
  "libcrux_ml_dsa_hash_functions_neon" -> "prims"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_neon"
  "libcrux_ml_dsa_ml_dsa_44_" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_44_" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44_" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_44_" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_ml_dsa_44_" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44_" -> "core"
  "libcrux_ml_dsa_ml_dsa_44_" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44_" -> "prims"
  "libcrux_ml_dsa_ml_dsa_87_" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_87_" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_87_" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_87_" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_ml_dsa_87_" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_87_" -> "core"
  "libcrux_ml_dsa_ml_dsa_87_" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_87_" -> "prims"
  "fstar_tactics_unseal" -> "fstar_tactics_effect"
  "fstar_tactics_unseal" -> "fstar_tactics_effect"
  "fstar_tactics_unseal" -> "fstar_sealed"
  "fstar_tactics_unseal" -> "fstar_pervasives"
  "fstar_tactics_unseal" -> "fstar_pervasives"
  "fstar_tactics_unseal" -> "prims"
  "fstar_tactics_unseal" -> "prims"
  "libcrux_ml_dsa_pre_hash" -> "core_result"
  "libcrux_ml_dsa_pre_hash" -> "core_result"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_pre_hash" -> "core_slice"
  "libcrux_ml_dsa_pre_hash" -> "core_option"
  "libcrux_ml_dsa_pre_hash" -> "core_option"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_pre_hash" -> "fstar_mul"
  "libcrux_ml_dsa_pre_hash" -> "fstar_mul"
  "libcrux_ml_dsa_pre_hash" -> "core"
  "libcrux_ml_dsa_pre_hash" -> "core"
  "libcrux_ml_dsa_pre_hash" -> "fstar_pervasives"
  "libcrux_ml_dsa_pre_hash" -> "fstar_pervasives"
  "libcrux_ml_dsa_pre_hash" -> "prims"
  "libcrux_ml_dsa_pre_hash" -> "prims"
  "libcrux_ml_dsa_pre_hash" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "prims"
  "fstar_bv" -> "fstar_math_lemmas"
  "fstar_bv" -> "fstar_math_lemmas"
  "fstar_bv" -> "fstar_seq"
  "fstar_bv" -> "fstar_seq"
  "fstar_bv" -> "fstar_bitvector"
  "fstar_bv" -> "fstar_bitvector"
  "fstar_bv" -> "fstar_uint"
  "fstar_bv" -> "fstar_uint"
  "fstar_bv" -> "fstar_pervasives"
  "fstar_bv" -> "fstar_pervasives"
  "fstar_bv" -> "prims"
  "fstar_bv" -> "prims"
  "fstar_bv" -> "fstar_bv"
  "fstar_pervasives_native" -> "prims"
  "fstar_pervasives_native" -> "prims"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_ops_range"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_gamma1" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_gamma1" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_option"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_option"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_gamma1" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_panicking"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_panicking"
  "libcrux_ml_dsa_encoding_gamma1" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_gamma1" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_slice"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_gamma1" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_gamma1" -> "prims"
  "libcrux_ml_dsa_encoding_gamma1" -> "prims"
  "libcrux_ml_dsa_encoding_gamma1" -> "libcrux_ml_dsa_encoding_gamma1"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_87__avx2" -> "libcrux_ml_dsa_ml_dsa_87__avx2"
  "fstar_list_tot_base" -> "fstar_classical_sugar"
  "fstar_list_tot_base" -> "fstar_classical_sugar"
  "fstar_list_tot_base" -> "fstar_pervasives_native"
  "fstar_list_tot_base" -> "fstar_pervasives_native"
  "fstar_list_tot_base" -> "fstar_pervasives"
  "fstar_list_tot_base" -> "fstar_pervasives"
  "fstar_list_tot_base" -> "prims"
  "fstar_list_tot_base" -> "prims"
  "fstar_option" -> "fstar_pervasives_native"
  "fstar_option" -> "fstar_pervasives_native"
  "fstar_option" -> "fstar_all"
  "fstar_option" -> "fstar_all"
  "fstar_option" -> "fstar_pervasives"
  "fstar_option" -> "fstar_pervasives"
  "fstar_option" -> "prims"
  "fstar_option" -> "prims"
  "libcrux_ml_dsa_simd_portable_sample" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_sample" -> "core"
  "libcrux_ml_dsa_simd_portable_sample" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_sample" -> "prims"
  "fstar_reflection_v2_formula" -> "fstar_pervasives_native"
  "fstar_reflection_v2_formula" -> "fstar_pervasives_native"
  "fstar_reflection_v2_formula" -> "fstar_reflection_termeq_simple"
  "fstar_reflection_v2_formula" -> "fstar_reflection_termeq_simple"
  "fstar_reflection_v2_formula" -> "fstar_tactics_namedview"
  "fstar_reflection_v2_formula" -> "fstar_tactics_namedview"
  "fstar_reflection_v2_formula" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_reflection_v2_formula" -> "fstar_tactics_effect"
  "fstar_reflection_v2_formula" -> "fstar_tactics_effect"
  "fstar_reflection_v2_formula" -> "fstar_stubs_tactics_common"
  "fstar_reflection_v2_formula" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_v2_formula" -> "fstar_reflection_v2_derived"
  "fstar_reflection_v2_formula" -> "fstar_reflection_v2_derived"
  "fstar_reflection_v2_formula" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_reflection_v2_formula" -> "fstar_reflection_const"
  "fstar_reflection_v2_formula" -> "fstar_reflection_const"
  "fstar_reflection_v2_formula" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v2_formula" -> "fstar_list_tot_base"
  "fstar_reflection_v2_formula" -> "fstar_list_tot_base"
  "fstar_reflection_v2_formula" -> "fstar_pervasives"
  "fstar_reflection_v2_formula" -> "fstar_pervasives"
  "fstar_reflection_v2_formula" -> "prims"
  "fstar_reflection_v2_formula" -> "prims"
  "core_panicking" -> "core_fmt"
  "core_panicking" -> "core_option"
  "core_panicking" -> "core_option"
  "core_panicking" -> "rust_primitives_hax"
  "core_panicking" -> "rust_primitives_hax"
  "core_panicking" -> "rust_primitives"
  "core_panicking" -> "rust_primitives"
  "core_panicking" -> "fstar_pervasives"
  "core_panicking" -> "fstar_pervasives"
  "core_panicking" -> "prims"
  "core_panicking" -> "prims"
  "fstar_char" -> "fstar_uint32"
  "fstar_char" -> "fstar_uint32"
  "fstar_char" -> "fstar_pervasives"
  "fstar_char" -> "fstar_pervasives"
  "fstar_char" -> "prims"
  "fstar_char" -> "prims"
  "fstar_tactics_mapply" -> "fstar_squash"
  "fstar_tactics_mapply" -> "fstar_squash"
  "fstar_tactics_mapply" -> "fstar_tactics_typeclasses"
  "fstar_tactics_mapply" -> "fstar_tactics_typeclasses"
  "fstar_tactics_mapply" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_mapply" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_mapply" -> "fstar_tactics_v2_derived"
  "fstar_tactics_mapply" -> "fstar_tactics_v2_derived"
  "fstar_tactics_mapply" -> "fstar_tactics_v2_syntaxhelpers"
  "fstar_tactics_mapply" -> "fstar_tactics_v2_syntaxhelpers"
  "fstar_tactics_mapply" -> "fstar_tactics_namedview"
  "fstar_tactics_mapply" -> "fstar_tactics_namedview"
  "fstar_tactics_mapply" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_mapply" -> "fstar_tactics_effect"
  "fstar_tactics_mapply" -> "fstar_tactics_effect"
  "fstar_tactics_mapply" -> "fstar_reflection_v2_formula"
  "fstar_tactics_mapply" -> "fstar_reflection_v2_formula"
  "fstar_tactics_mapply" -> "fstar_reflection_v2"
  "fstar_tactics_mapply" -> "fstar_reflection_v2"
  "fstar_tactics_mapply" -> "fstar_pervasives"
  "fstar_tactics_mapply" -> "fstar_pervasives"
  "fstar_tactics_mapply" -> "prims"
  "fstar_tactics_mapply" -> "prims"
  "fstar_tactics_mapply" -> "fstar_tactics_mapply"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_error" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_error" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_error" -> "core"
  "libcrux_ml_dsa_encoding_error" -> "core"
  "libcrux_ml_dsa_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_error" -> "prims"
  "libcrux_ml_dsa_encoding_error" -> "prims"
  "lib_loopcombinators" -> "fstar_tactics_effect"
  "lib_loopcombinators" -> "fstar_tactics_effect"
  "lib_loopcombinators" -> "fstar_propositionalextensionality"
  "lib_loopcombinators" -> "fstar_propositionalextensionality"
  "lib_loopcombinators" -> "fstar_tactics"
  "lib_loopcombinators" -> "fstar_tactics"
  "lib_loopcombinators" -> "fstar_pervasives"
  "lib_loopcombinators" -> "fstar_pervasives"
  "lib_loopcombinators" -> "prims"
  "lib_loopcombinators" -> "prims"
  "lib_loopcombinators" -> "lib_loopcombinators"
  "fstar_seq_base" -> "fstar_list_tot"
  "fstar_seq_base" -> "fstar_list_tot"
  "fstar_seq_base" -> "fstar_pervasives"
  "fstar_seq_base" -> "fstar_pervasives"
  "fstar_seq_base" -> "prims"
  "fstar_seq_base" -> "prims"
  "fstar_uint64" -> "fstar_uint32"
  "fstar_uint64" -> "fstar_uint32"
  "fstar_uint64" -> "fstar_mul"
  "fstar_uint64" -> "fstar_mul"
  "fstar_uint64" -> "fstar_uint"
  "fstar_uint64" -> "fstar_uint"
  "fstar_uint64" -> "fstar_pervasives"
  "fstar_uint64" -> "fstar_pervasives"
  "fstar_uint64" -> "prims"
  "fstar_uint64" -> "prims"
  "fstar_classical_sugar" -> "fstar_squash"
  "fstar_classical_sugar" -> "fstar_squash"
  "fstar_classical_sugar" -> "fstar_pervasives"
  "fstar_classical_sugar" -> "fstar_pervasives"
  "fstar_classical_sugar" -> "prims"
  "fstar_classical_sugar" -> "prims"
  "fstar_classical_sugar" -> "fstar_classical_sugar"
  "core_result" -> "fstar_pervasives"
  "core_result" -> "fstar_pervasives"
  "core_result" -> "prims"
  "core_result" -> "prims"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_int32"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_int32"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core_ops_range"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core_convert"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core_convert"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core_array"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core_array"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core_result"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core_result"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "core"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "prims"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "prims"
  "libcrux_ml_dsa_simd_portable_vector_type" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "prims"
  "fstar_exn" -> "fstar_pervasives"
  "fstar_exn" -> "fstar_pervasives"
  "fstar_exn" -> "prims"
  "fstar_exn" -> "prims"
  "fstar_reflection_termeq_simple" -> "fstar_stubs_reflection_types"
  "fstar_reflection_termeq_simple" -> "fstar_pervasives"
  "fstar_reflection_termeq_simple" -> "fstar_pervasives"
  "fstar_reflection_termeq_simple" -> "prims"
  "fstar_reflection_termeq_simple" -> "prims"
  "core_ops" -> "core_ops_index"
  "core_ops" -> "core_ops_index"
  "core_ops" -> "fstar_tactics_typeclasses"
  "core_ops" -> "fstar_tactics_typeclasses"
  "core_ops" -> "rust_primitives"
  "core_ops" -> "rust_primitives"
  "core_ops" -> "fstar_pervasives"
  "core_ops" -> "fstar_pervasives"
  "core_ops" -> "prims"
  "core_ops" -> "prims"
  "fstar_tactics_typeclasses" -> "fstar_stubs_reflection_types"
  "fstar_tactics_typeclasses" -> "fstar_tactics_effect"
  "fstar_tactics_typeclasses" -> "fstar_tactics_effect"
  "fstar_tactics_typeclasses" -> "fstar_pervasives"
  "fstar_tactics_typeclasses" -> "fstar_pervasives"
  "fstar_tactics_typeclasses" -> "prims"
  "fstar_tactics_typeclasses" -> "prims"
  "fstar_pervasives" -> "fstar_pervasives_native"
  "fstar_pervasives" -> "fstar_pervasives_native"
  "fstar_pervasives" -> "prims"
  "fstar_pervasives" -> "prims"
  "libcrux_ml_dsa_utils" -> "fstar_mul"
  "libcrux_ml_dsa_utils" -> "fstar_mul"
  "libcrux_ml_dsa_utils" -> "core"
  "libcrux_ml_dsa_utils" -> "core"
  "libcrux_ml_dsa_utils" -> "fstar_pervasives"
  "libcrux_ml_dsa_utils" -> "fstar_pervasives"
  "libcrux_ml_dsa_utils" -> "prims"
  "libcrux_ml_dsa_utils" -> "prims"
  "libcrux_sha3_traits" -> "fstar_mul"
  "libcrux_sha3_traits" -> "fstar_mul"
  "libcrux_sha3_traits" -> "core"
  "libcrux_sha3_traits" -> "core"
  "libcrux_sha3_traits" -> "fstar_pervasives"
  "libcrux_sha3_traits" -> "fstar_pervasives"
  "libcrux_sha3_traits" -> "prims"
  "libcrux_sha3_traits" -> "prims"
  "libcrux_sha3_traits" -> "libcrux_sha3_traits"
  "fstar_ghost" -> "fstar_pervasives"
  "fstar_ghost" -> "fstar_pervasives"
  "fstar_ghost" -> "prims"
  "fstar_ghost" -> "prims"
  "fstar_list_tot_properties" -> "fstar_classical"
  "fstar_list_tot_properties" -> "fstar_classical"
  "fstar_list_tot_properties" -> "fstar_classical_sugar"
  "fstar_list_tot_properties" -> "fstar_classical_sugar"
  "fstar_list_tot_properties" -> "fstar_pervasives_native"
  "fstar_list_tot_properties" -> "fstar_pervasives_native"
  "fstar_list_tot_properties" -> "fstar_list_tot_base"
  "fstar_list_tot_properties" -> "fstar_list_tot_base"
  "fstar_list_tot_properties" -> "fstar_pervasives"
  "fstar_list_tot_properties" -> "fstar_pervasives"
  "fstar_list_tot_properties" -> "prims"
  "fstar_list_tot_properties" -> "prims"
  "fstar_list_tot_properties" -> "fstar_list_tot_properties"
  "fstar_preorder" -> "fstar_pervasives"
  "fstar_preorder" -> "fstar_pervasives"
  "fstar_preorder" -> "prims"
  "fstar_preorder" -> "prims"
  "fstar_monotonic_pure" -> "fstar_pervasives"
  "fstar_monotonic_pure" -> "fstar_pervasives"
  "fstar_monotonic_pure" -> "prims"
  "fstar_monotonic_pure" -> "prims"
  "fstar_stubs_reflection_v2_data" -> "fstar_sealed_inhabited"
  "fstar_stubs_reflection_v2_data" -> "fstar_sealed_inhabited"
  "fstar_stubs_reflection_v2_data" -> "fstar_stubs_reflection_types"
  "fstar_stubs_reflection_v2_data" -> "fstar_stubs_syntax_syntax"
  "fstar_stubs_reflection_v2_data" -> "fstar_pervasives"
  "fstar_stubs_reflection_v2_data" -> "fstar_pervasives"
  "fstar_stubs_reflection_v2_data" -> "prims"
  "fstar_stubs_reflection_v2_data" -> "prims"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_issue"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_list_tot"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_list_tot"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_ghost"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_ghost"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_pervasives_native"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_pervasives_native"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_stubs_pprint"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_tactics_unseal"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_stubs_tactics_types"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_tactics_effect"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_tactics_effect"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_stubs_reflection_v2_data"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_reflection_const"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_reflection_const"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_stubs_reflection_types"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_vconfig"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_pervasives"
  "fstar_stubs_tactics_v2_builtins" -> "fstar_pervasives"
  "fstar_stubs_tactics_v2_builtins" -> "prims"
  "fstar_stubs_tactics_v2_builtins" -> "prims"
  "core_num_error" -> "rust_primitives"
  "core_num_error" -> "rust_primitives"
  "core_num_error" -> "fstar_pervasives"
  "core_num_error" -> "fstar_pervasives"
  "core_num_error" -> "prims"
  "core_num_error" -> "prims"
  "fstar_int_cast_full" -> "fstar_uint128"
  "fstar_int_cast_full" -> "fstar_uint128"
  "fstar_int_cast_full" -> "fstar_uint64"
  "fstar_int_cast_full" -> "fstar_uint64"
  "fstar_int_cast_full" -> "fstar_int_cast"
  "fstar_int_cast_full" -> "fstar_int_cast"
  "fstar_int_cast_full" -> "fstar_pervasives"
  "fstar_int_cast_full" -> "fstar_pervasives"
  "fstar_int_cast_full" -> "prims"
  "fstar_int_cast_full" -> "prims"
  "fstar_all" -> "fstar_exn"
  "fstar_all" -> "fstar_exn"
  "fstar_all" -> "fstar_st"
  "fstar_all" -> "fstar_st"
  "fstar_all" -> "fstar_heap"
  "fstar_all" -> "fstar_heap"
  "fstar_all" -> "fstar_pervasives"
  "fstar_all" -> "fstar_pervasives"
  "fstar_all" -> "prims"
  "fstar_all" -> "prims"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "hax_lib"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core_slice"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core_array_iter"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core_fmt_rt"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_list_tot"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core_fmt"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core_panicking"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_uint64"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_int32"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core_ops_arith_neg"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "core"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "prims"
  "libcrux_ml_dsa_simd_portable_rec_bundle_437004224" -> "libcrux_ml_dsa_simd_portable_rec_bundle_437004224"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "core"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "prims"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_commitment" -> "core"
  "libcrux_ml_dsa_encoding_commitment" -> "core"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_commitment" -> "prims"
  "libcrux_ml_dsa_encoding_commitment" -> "prims"
  "core_convert" -> "rust_primitives_integers"
  "core_convert" -> "rust_primitives_integers"
  "core_convert" -> "core_slice"
  "core_convert" -> "core_array"
  "core_convert" -> "core_array"
  "core_convert" -> "core_result"
  "core_convert" -> "core_result"
  "core_convert" -> "fstar_tactics_typeclasses"
  "core_convert" -> "fstar_tactics_typeclasses"
  "core_convert" -> "rust_primitives"
  "core_convert" -> "rust_primitives"
  "core_convert" -> "fstar_pervasives"
  "core_convert" -> "fstar_pervasives"
  "core_convert" -> "prims"
  "core_convert" -> "prims"
  "libcrux_sha3_portable_incremental" -> "libcrux_sha3_portable"
  "libcrux_sha3_portable_incremental" -> "libcrux_sha3_portable"
  "libcrux_sha3_portable_incremental" -> "fstar_mul"
  "libcrux_sha3_portable_incremental" -> "fstar_mul"
  "libcrux_sha3_portable_incremental" -> "core"
  "libcrux_sha3_portable_incremental" -> "core"
  "libcrux_sha3_portable_incremental" -> "fstar_pervasives"
  "libcrux_sha3_portable_incremental" -> "fstar_pervasives"
  "libcrux_sha3_portable_incremental" -> "prims"
  "libcrux_sha3_portable_incremental" -> "prims"
  "fstar_seq_properties" -> "fstar_list_tot_properties"
  "fstar_seq_properties" -> "fstar_list_tot_properties"
  "fstar_seq_properties" -> "fstar_list_tot_base"
  "fstar_seq_properties" -> "fstar_list_tot_base"
  "fstar_seq_properties" -> "fstar_list_tot"
  "fstar_seq_properties" -> "fstar_list_tot"
  "fstar_seq_properties" -> "fstar_pervasives_native"
  "fstar_seq_properties" -> "fstar_pervasives_native"
  "fstar_seq_properties" -> "fstar_seq_base"
  "fstar_seq_properties" -> "fstar_seq_base"
  "fstar_seq_properties" -> "fstar_pervasives"
  "fstar_seq_properties" -> "fstar_pervasives"
  "fstar_seq_properties" -> "prims"
  "fstar_seq_properties" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_int16"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_int16"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core_ops_range"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_commitment" -> "libcrux_ml_dsa_simd_avx2_encoding_commitment"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "core"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "prims"
  "libcrux_ml_dsa_ml_dsa_87__portable" -> "libcrux_ml_dsa_ml_dsa_87__portable"
  "fstar_range" -> "fstar_sealed"
  "fstar_range" -> "fstar_pervasives"
  "fstar_range" -> "fstar_pervasives"
  "fstar_range" -> "prims"
  "fstar_range" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_option"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_option"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_sha3_portable_incremental"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic" -> "prims"
  "fstar_squash" -> "fstar_pervasives"
  "fstar_squash" -> "fstar_pervasives"
  "fstar_squash" -> "prims"
  "fstar_squash" -> "prims"
  "fstar_squash" -> "fstar_squash"
  "fstar_monotonic_heap" -> "fstar_erasedlogic"
  "fstar_monotonic_heap" -> "fstar_erasedlogic"
  "fstar_monotonic_heap" -> "fstar_squash"
  "fstar_monotonic_heap" -> "fstar_squash"
  "fstar_monotonic_heap" -> "fstar_set"
  "fstar_monotonic_heap" -> "fstar_set"
  "fstar_monotonic_heap" -> "fstar_pervasives_native"
  "fstar_monotonic_heap" -> "fstar_pervasives_native"
  "fstar_monotonic_heap" -> "fstar_functionalextensionality"
  "fstar_monotonic_heap" -> "fstar_functionalextensionality"
  "fstar_monotonic_heap" -> "fstar_classical"
  "fstar_monotonic_heap" -> "fstar_classical"
  "fstar_monotonic_heap" -> "fstar_preorder"
  "fstar_monotonic_heap" -> "fstar_preorder"
  "fstar_monotonic_heap" -> "fstar_pervasives"
  "fstar_monotonic_heap" -> "fstar_pervasives"
  "fstar_monotonic_heap" -> "prims"
  "fstar_monotonic_heap" -> "prims"
  "fstar_monotonic_heap" -> "fstar_monotonic_heap"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_tactics_unseal"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_stubs_tactics_types"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_tactics_effect"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_tactics_effect"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_reflection_const"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_reflection_const"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_stubs_reflection_v1_data"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_stubs_reflection_types"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_stubs_reflection_v1_builtins"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_vconfig"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_pervasives"
  "fstar_stubs_tactics_v1_builtins" -> "fstar_pervasives"
  "fstar_stubs_tactics_v1_builtins" -> "prims"
  "fstar_stubs_tactics_v1_builtins" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_int64"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_int64"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_panicking"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_ops_range"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core_slice"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_gamma1" -> "libcrux_ml_dsa_simd_avx2_encoding_gamma1"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_ml_dsa_generic"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_hash_functions_neon"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon"
  "bitvec_intrinsics" -> "fstar_string"
  "bitvec_intrinsics" -> "fstar_tactics_v2_derived"
  "bitvec_intrinsics" -> "fstar_tactics_v2_derived"
  "bitvec_intrinsics" -> "fstar_stubs_tactics_v2_builtins"
  "bitvec_intrinsics" -> "fstar_int8"
  "bitvec_intrinsics" -> "fstar_int8"
  "bitvec_intrinsics" -> "fstar_uint8"
  "bitvec_intrinsics" -> "fstar_uint8"
  "bitvec_intrinsics" -> "fstar_list_tot"
  "bitvec_intrinsics" -> "fstar_list_tot"
  "bitvec_intrinsics" -> "fstar_tactics_v2"
  "bitvec_intrinsics" -> "fstar_tactics_v2"
  "bitvec_intrinsics" -> "fstar_int16"
  "bitvec_intrinsics" -> "fstar_int16"
  "bitvec_intrinsics" -> "fstar_tactics"
  "bitvec_intrinsics" -> "fstar_tactics"
  "bitvec_intrinsics" -> "fstar_seq"
  "bitvec_intrinsics" -> "fstar_seq"
  "bitvec_intrinsics" -> "fstar_int32"
  "bitvec_intrinsics" -> "fstar_int32"
  "bitvec_intrinsics" -> "tactics_utils"
  "bitvec_intrinsics" -> "tactics_utils"
  "bitvec_intrinsics" -> "bitvec_equality"
  "bitvec_intrinsics" -> "bitvec_equality"
  "bitvec_intrinsics" -> "bitvec_utils"
  "bitvec_intrinsics" -> "bitvec_utils"
  "bitvec_intrinsics" -> "fstar_mul"
  "bitvec_intrinsics" -> "fstar_mul"
  "bitvec_intrinsics" -> "rust_primitives"
  "bitvec_intrinsics" -> "rust_primitives"
  "bitvec_intrinsics" -> "core"
  "bitvec_intrinsics" -> "core"
  "bitvec_intrinsics" -> "fstar_pervasives"
  "bitvec_intrinsics" -> "fstar_pervasives"
  "bitvec_intrinsics" -> "prims"
  "bitvec_intrinsics" -> "prims"
  "core_ops_arith_neg" -> "rust_primitives"
  "core_ops_arith_neg" -> "rust_primitives"
  "core_ops_arith_neg" -> "fstar_pervasives"
  "core_ops_arith_neg" -> "fstar_pervasives"
  "core_ops_arith_neg" -> "prims"
  "core_ops_arith_neg" -> "prims"
  "libcrux_ml_dsa_arithmetic" -> "fstar_int32"
  "libcrux_ml_dsa_arithmetic" -> "fstar_int32"
  "libcrux_ml_dsa_arithmetic" -> "core_slice_iter"
  "libcrux_ml_dsa_arithmetic" -> "core_slice_iter"
  "libcrux_ml_dsa_arithmetic" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_arithmetic" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_arithmetic" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_arithmetic" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_arithmetic" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_arithmetic" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_arithmetic" -> "core_slice"
  "libcrux_ml_dsa_arithmetic" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_arithmetic" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_arithmetic" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_arithmetic" -> "rust_primitives_hax"
  "libcrux_ml_dsa_arithmetic" -> "rust_primitives_hax"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_arithmetic" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_arithmetic" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_arithmetic" -> "core"
  "libcrux_ml_dsa_arithmetic" -> "core"
  "libcrux_ml_dsa_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_arithmetic" -> "prims"
  "libcrux_ml_dsa_arithmetic" -> "prims"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_arithmetic"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table"
  "fstar_uint128" -> "fstar_pervasives_native"
  "fstar_uint128" -> "fstar_pervasives_native"
  "fstar_uint128" -> "fstar_int_cast"
  "fstar_uint128" -> "fstar_int_cast"
  "fstar_uint128" -> "fstar_calc"
  "fstar_uint128" -> "fstar_calc"
  "fstar_uint128" -> "fstar_classical_sugar"
  "fstar_uint128" -> "fstar_classical_sugar"
  "fstar_uint128" -> "fstar_tactics_bv_lemmas"
  "fstar_uint128" -> "fstar_tactics_bv_lemmas"
  "fstar_uint128" -> "fstar_tactics_bv"
  "fstar_uint128" -> "fstar_tactics_bv"
  "fstar_uint128" -> "fstar_tactics_effect"
  "fstar_uint128" -> "fstar_tactics_effect"
  "fstar_uint128" -> "fstar_tactics_mapply"
  "fstar_uint128" -> "fstar_tactics_mapply"
  "fstar_uint128" -> "fstar_tactics_v2_derived"
  "fstar_uint128" -> "fstar_tactics_v2_derived"
  "fstar_uint128" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_uint128" -> "fstar_bv"
  "fstar_uint128" -> "fstar_bv"
  "fstar_uint128" -> "fstar_math_lemmas"
  "fstar_uint128" -> "fstar_math_lemmas"
  "fstar_uint128" -> "fstar_uint64"
  "fstar_uint128" -> "fstar_uint64"
  "fstar_uint128" -> "fstar_uint32"
  "fstar_uint128" -> "fstar_uint32"
  "fstar_uint128" -> "fstar_bitvector"
  "fstar_uint128" -> "fstar_bitvector"
  "fstar_uint128" -> "fstar_seq"
  "fstar_uint128" -> "fstar_seq"
  "fstar_uint128" -> "fstar_uint"
  "fstar_uint128" -> "fstar_uint"
  "fstar_uint128" -> "fstar_mul"
  "fstar_uint128" -> "fstar_mul"
  "fstar_uint128" -> "fstar_pervasives"
  "fstar_uint128" -> "fstar_pervasives"
  "fstar_uint128" -> "prims"
  "fstar_uint128" -> "prims"
  "fstar_uint128" -> "fstar_uint128"
  "fstar_tactics_v1_derived" -> "fstar_propositionalextensionality"
  "fstar_tactics_v1_derived" -> "fstar_propositionalextensionality"
  "fstar_tactics_v1_derived" -> "fstar_squash"
  "fstar_tactics_v1_derived" -> "fstar_squash"
  "fstar_tactics_v1_derived" -> "fstar_range"
  "fstar_tactics_v1_derived" -> "fstar_pervasives_native"
  "fstar_tactics_v1_derived" -> "fstar_pervasives_native"
  "fstar_tactics_v1_derived" -> "fstar_tactics_visit"
  "fstar_tactics_v1_derived" -> "fstar_tactics_visit"
  "fstar_tactics_v1_derived" -> "fstar_list_tot_base"
  "fstar_tactics_v1_derived" -> "fstar_list_tot_base"
  "fstar_tactics_v1_derived" -> "fstar_tactics_names"
  "fstar_tactics_v1_derived" -> "fstar_tactics_names"
  "fstar_tactics_v1_derived" -> "fstar_vconfig"
  "fstar_tactics_v1_derived" -> "fstar_tactics_v1_syntaxhelpers"
  "fstar_tactics_v1_derived" -> "fstar_tactics_v1_syntaxhelpers"
  "fstar_tactics_v1_derived" -> "fstar_stubs_tactics_v1_builtins"
  "fstar_tactics_v1_derived" -> "fstar_tactics_util"
  "fstar_tactics_v1_derived" -> "fstar_tactics_util"
  "fstar_tactics_v1_derived" -> "fstar_stubs_tactics_result"
  "fstar_tactics_v1_derived" -> "fstar_stubs_tactics_types"
  "fstar_tactics_v1_derived" -> "fstar_tactics_effect"
  "fstar_tactics_v1_derived" -> "fstar_tactics_effect"
  "fstar_tactics_v1_derived" -> "fstar_reflection_v1_formula"
  "fstar_tactics_v1_derived" -> "fstar_reflection_v1_formula"
  "fstar_tactics_v1_derived" -> "fstar_reflection_v1"
  "fstar_tactics_v1_derived" -> "fstar_reflection_v1"
  "fstar_tactics_v1_derived" -> "fstar_pervasives"
  "fstar_tactics_v1_derived" -> "fstar_pervasives"
  "fstar_tactics_v1_derived" -> "prims"
  "fstar_tactics_v1_derived" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_ml_dsa_generic"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_hash_functions_portable"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable"
  "libcrux_ml_dsa_hash_functions_shake128" -> "rust_primitives"
  "libcrux_ml_dsa_hash_functions_shake128" -> "rust_primitives"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_shake128" -> "core"
  "libcrux_ml_dsa_hash_functions_shake128" -> "core"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_shake128" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_shake128" -> "prims"
  "libcrux_ml_dsa_hash_functions_shake128" -> "prims"
  "libcrux_ml_dsa_hash_functions_shake128" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_neon"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "prims"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "libcrux_ml_dsa_ml_dsa_87__neon"
  "fstar_tactics_typeclasses" -> "fstar_stubs_pprint"
  "fstar_tactics_typeclasses" -> "fstar_list_tot"
  "fstar_tactics_typeclasses" -> "fstar_list_tot"
  "fstar_tactics_typeclasses" -> "fstar_tactics_util"
  "fstar_tactics_typeclasses" -> "fstar_tactics_util"
  "fstar_tactics_typeclasses" -> "fstar_reflection_termeq_simple"
  "fstar_tactics_typeclasses" -> "fstar_reflection_termeq_simple"
  "fstar_tactics_typeclasses" -> "fstar_pervasives_native"
  "fstar_tactics_typeclasses" -> "fstar_pervasives_native"
  "fstar_tactics_typeclasses" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_tactics_typeclasses" -> "fstar_list_tot_base"
  "fstar_tactics_typeclasses" -> "fstar_list_tot_base"
  "fstar_tactics_typeclasses" -> "fstar_tactics_namedview"
  "fstar_tactics_typeclasses" -> "fstar_tactics_namedview"
  "fstar_tactics_typeclasses" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_typeclasses" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_typeclasses" -> "fstar_tactics_v2_derived"
  "fstar_tactics_typeclasses" -> "fstar_tactics_v2_derived"
  "fstar_tactics_typeclasses" -> "fstar_tactics_v2_syntaxhelpers"
  "fstar_tactics_typeclasses" -> "fstar_tactics_v2_syntaxhelpers"
  "fstar_tactics_typeclasses" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_typeclasses" -> "fstar_tactics_effect"
  "fstar_tactics_typeclasses" -> "fstar_tactics_effect"
  "fstar_tactics_typeclasses" -> "fstar_stubs_tactics_common"
  "fstar_tactics_typeclasses" -> "fstar_reflection_v2"
  "fstar_tactics_typeclasses" -> "fstar_reflection_v2"
  "fstar_tactics_typeclasses" -> "fstar_pervasives"
  "fstar_tactics_typeclasses" -> "fstar_pervasives"
  "fstar_tactics_typeclasses" -> "prims"
  "fstar_tactics_typeclasses" -> "prims"
  "fstar_tactics_typeclasses" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_list_tot"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_list_tot"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table" -> "prims"
  "core_num" -> "fstar_tactics_typeclasses"
  "core_num" -> "fstar_tactics_typeclasses"
  "core_num" -> "core_ops_arith"
  "core_num" -> "core_num_error"
  "core_num" -> "core_result"
  "core_num" -> "core_result"
  "core_num" -> "fstar_math_lemmas"
  "core_num" -> "fstar_math_lemmas"
  "core_num" -> "lib_inttypes"
  "core_num" -> "lib_inttypes"
  "core_num" -> "fstar_uint128"
  "core_num" -> "fstar_uint128"
  "core_num" -> "fstar_uint32"
  "core_num" -> "fstar_uint32"
  "core_num" -> "rust_primitives"
  "core_num" -> "rust_primitives"
  "core_num" -> "fstar_pervasives"
  "core_num" -> "fstar_pervasives"
  "core_num" -> "prims"
  "core_num" -> "prims"
  "fstar_tactics_v1_logic" -> "fstar_pervasives_native"
  "fstar_tactics_v1_logic" -> "fstar_pervasives_native"
  "fstar_tactics_v1_logic" -> "fstar_squash"
  "fstar_tactics_v1_logic" -> "fstar_squash"
  "fstar_tactics_v1_logic" -> "fstar_tactics_v1_logic_lemmas"
  "fstar_tactics_v1_logic" -> "fstar_tactics_v1_logic_lemmas"
  "fstar_tactics_v1_logic" -> "fstar_reflection_v1_formula"
  "fstar_tactics_v1_logic" -> "fstar_reflection_v1_formula"
  "fstar_tactics_v1_logic" -> "fstar_reflection_v1"
  "fstar_tactics_v1_logic" -> "fstar_reflection_v1"
  "fstar_tactics_v1_logic" -> "fstar_tactics_util"
  "fstar_tactics_v1_logic" -> "fstar_tactics_util"
  "fstar_tactics_v1_logic" -> "fstar_tactics_v1_derived"
  "fstar_tactics_v1_logic" -> "fstar_tactics_v1_derived"
  "fstar_tactics_v1_logic" -> "fstar_stubs_tactics_v1_builtins"
  "fstar_tactics_v1_logic" -> "fstar_tactics_effect"
  "fstar_tactics_v1_logic" -> "fstar_tactics_effect"
  "fstar_tactics_v1_logic" -> "fstar_pervasives"
  "fstar_tactics_v1_logic" -> "fstar_pervasives"
  "fstar_tactics_v1_logic" -> "prims"
  "fstar_tactics_v1_logic" -> "prims"
  "fstar_tactics_v1_logic" -> "fstar_tactics_v1_logic"
  "fstar_classical" -> "fstar_pervasives"
  "fstar_classical" -> "fstar_pervasives"
  "fstar_classical" -> "prims"
  "fstar_classical" -> "prims"
  "fstar_int128" -> "fstar_int64"
  "fstar_int128" -> "fstar_int64"
  "fstar_int128" -> "fstar_uint32"
  "fstar_int128" -> "fstar_uint32"
  "fstar_int128" -> "fstar_math_lemmas"
  "fstar_int128" -> "fstar_math_lemmas"
  "fstar_int128" -> "fstar_mul"
  "fstar_int128" -> "fstar_mul"
  "fstar_int128" -> "fstar_int"
  "fstar_int128" -> "fstar_int"
  "fstar_int128" -> "fstar_pervasives"
  "fstar_int128" -> "fstar_pervasives"
  "fstar_int128" -> "prims"
  "fstar_int128" -> "prims"
  "fstar_int128" -> "fstar_int128"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_uint8"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_uint8"
  "libcrux_ml_dsa_hash_functions_portable" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_portable" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_sha3_portable_incremental"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_sha3_portable"
  "libcrux_ml_dsa_hash_functions_portable" -> "libcrux_sha3_portable"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_portable" -> "core"
  "libcrux_ml_dsa_hash_functions_portable" -> "core"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_portable" -> "prims"
  "libcrux_ml_dsa_hash_functions_portable" -> "prims"
  "libcrux_ml_dsa_simd_avx2" -> "core_array"
  "libcrux_ml_dsa_simd_avx2" -> "core_array"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_ntt"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_ntt"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_t1"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_t1"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_t0"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_t0"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_error"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_error"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_commitment"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_commitment"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_gamma1"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_encoding_gamma1"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus"
  "libcrux_ml_dsa_simd_avx2" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_arithmetic"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_arithmetic"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_vector_type"
  "libcrux_ml_dsa_simd_avx2" -> "libcrux_ml_dsa_simd_avx2_vector_type"
  "libcrux_ml_dsa_simd_avx2" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2" -> "core"
  "libcrux_ml_dsa_simd_avx2" -> "core"
  "libcrux_ml_dsa_simd_avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2" -> "prims"
  "libcrux_ml_dsa_simd_avx2" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core_slice"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core_convert"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core_array"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core_result"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core_ops_range"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "core"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "prims"
  "libcrux_ml_dsa_simd_avx2_encoding_t1" -> "libcrux_ml_dsa_simd_avx2_encoding_t1"
  "libcrux_ml_dsa_hash_functions_shake256" -> "rust_primitives"
  "libcrux_ml_dsa_hash_functions_shake256" -> "rust_primitives"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_shake256" -> "core"
  "libcrux_ml_dsa_hash_functions_shake256" -> "core"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_shake256" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_shake256" -> "prims"
  "libcrux_ml_dsa_hash_functions_shake256" -> "prims"
  "libcrux_ml_dsa_hash_functions_shake256" -> "libcrux_ml_dsa_hash_functions_shake256"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_squash"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_squash"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_indefinitedescription"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_indefinitedescription"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_classical"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_classical"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_pervasives"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_pervasives"
  "fstar_tactics_v1_logic_lemmas" -> "prims"
  "fstar_tactics_v1_logic_lemmas" -> "prims"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_tactics_v1_logic_lemmas"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_t0" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_t0" -> "core"
  "libcrux_ml_dsa_encoding_t0" -> "core"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_t0" -> "prims"
  "libcrux_ml_dsa_encoding_t0" -> "prims"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "core"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "core"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "prims"
  "libcrux_ml_dsa_simd_avx2_arithmetic" -> "prims"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_sample" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_sample" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_sample" -> "fstar_mul"
  "libcrux_ml_dsa_sample" -> "fstar_mul"
  "libcrux_ml_dsa_sample" -> "core"
  "libcrux_ml_dsa_sample" -> "core"
  "libcrux_ml_dsa_sample" -> "fstar_pervasives"
  "libcrux_ml_dsa_sample" -> "fstar_pervasives"
  "libcrux_ml_dsa_sample" -> "prims"
  "libcrux_ml_dsa_sample" -> "prims"
  "fstar_sealed" -> "fstar_pervasives"
  "fstar_sealed" -> "fstar_pervasives"
  "fstar_sealed" -> "prims"
  "fstar_sealed" -> "prims"
  "fstar_vconfig" -> "fstar_pervasives"
  "fstar_vconfig" -> "fstar_pervasives"
  "fstar_vconfig" -> "prims"
  "fstar_vconfig" -> "prims"
  "libcrux_intrinsics_avx2_extract" -> "core_slice"
  "libcrux_intrinsics_avx2_extract" -> "bitvec_intrinsics"
  "libcrux_intrinsics_avx2_extract" -> "fstar_int32"
  "libcrux_intrinsics_avx2_extract" -> "fstar_int32"
  "libcrux_intrinsics_avx2_extract" -> "spec_utils"
  "libcrux_intrinsics_avx2_extract" -> "spec_utils"
  "libcrux_intrinsics_avx2_extract" -> "fstar_seq"
  "libcrux_intrinsics_avx2_extract" -> "fstar_seq"
  "libcrux_intrinsics_avx2_extract" -> "fstar_mul"
  "libcrux_intrinsics_avx2_extract" -> "fstar_mul"
  "libcrux_intrinsics_avx2_extract" -> "core"
  "libcrux_intrinsics_avx2_extract" -> "core"
  "libcrux_intrinsics_avx2_extract" -> "fstar_pervasives"
  "libcrux_intrinsics_avx2_extract" -> "fstar_pervasives"
  "libcrux_intrinsics_avx2_extract" -> "prims"
  "libcrux_intrinsics_avx2_extract" -> "prims"
  "fstar_seq_properties" -> "fstar_list_tot_properties"
  "fstar_seq_properties" -> "fstar_list_tot_properties"
  "fstar_seq_properties" -> "fstar_list_tot_base"
  "fstar_seq_properties" -> "fstar_list_tot_base"
  "fstar_seq_properties" -> "fstar_squash"
  "fstar_seq_properties" -> "fstar_squash"
  "fstar_seq_properties" -> "fstar_list_tot"
  "fstar_seq_properties" -> "fstar_list_tot"
  "fstar_seq_properties" -> "fstar_pervasives_native"
  "fstar_seq_properties" -> "fstar_pervasives_native"
  "fstar_seq_properties" -> "fstar_classical"
  "fstar_seq_properties" -> "fstar_classical"
  "fstar_seq_properties" -> "fstar_seq_base"
  "fstar_seq_properties" -> "fstar_seq_base"
  "fstar_seq_properties" -> "fstar_pervasives"
  "fstar_seq_properties" -> "fstar_pervasives"
  "fstar_seq_properties" -> "prims"
  "fstar_seq_properties" -> "prims"
  "fstar_seq_properties" -> "fstar_seq_properties"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_t0" -> "prims"
  "core_iter_adapters_enumerate" -> "rust_primitives"
  "core_iter_adapters_enumerate" -> "rust_primitives"
  "core_iter_adapters_enumerate" -> "fstar_pervasives"
  "core_iter_adapters_enumerate" -> "fstar_pervasives"
  "core_iter_adapters_enumerate" -> "prims"
  "core_iter_adapters_enumerate" -> "prims"
  "core_ops_index" -> "fstar_tactics_typeclasses"
  "core_ops_index" -> "fstar_tactics_typeclasses"
  "core_ops_index" -> "fstar_pervasives"
  "core_ops_index" -> "fstar_pervasives"
  "core_ops_index" -> "prims"
  "core_ops_index" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "libcrux_ml_dsa_ml_dsa_44__portable"
  "fstar_float" -> "fstar_pervasives"
  "fstar_float" -> "fstar_pervasives"
  "fstar_float" -> "prims"
  "fstar_float" -> "prims"
  "bitvec_equality" -> "fstar_functionalextensionality"
  "bitvec_equality" -> "fstar_functionalextensionality"
  "bitvec_equality" -> "fstar_mul"
  "bitvec_equality" -> "fstar_mul"
  "bitvec_equality" -> "rust_primitives"
  "bitvec_equality" -> "rust_primitives"
  "bitvec_equality" -> "core"
  "bitvec_equality" -> "core"
  "bitvec_equality" -> "fstar_pervasives"
  "bitvec_equality" -> "fstar_pervasives"
  "bitvec_equality" -> "prims"
  "bitvec_equality" -> "prims"
  "bitvec_equality" -> "bitvec_equality"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "prims"
  "rust_primitives_hax_monomorphized_update_at" -> "core_ops_range"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives_hax"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives_hax"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives"
  "rust_primitives_hax_monomorphized_update_at" -> "fstar_pervasives"
  "rust_primitives_hax_monomorphized_update_at" -> "fstar_pervasives"
  "rust_primitives_hax_monomorphized_update_at" -> "prims"
  "rust_primitives_hax_monomorphized_update_at" -> "prims"
  "rust_primitives_hax_monomorphized_update_at" -> "rust_primitives_hax_monomorphized_update_at"
  "fstar_tactics_v2" -> "fstar_reflection_termeq_simple"
  "fstar_tactics_v2" -> "fstar_reflection_termeq_simple"
  "fstar_tactics_v2" -> "fstar_tactics_smt"
  "fstar_tactics_v2" -> "fstar_tactics_smt"
  "fstar_tactics_v2" -> "fstar_tactics_mapply"
  "fstar_tactics_v2" -> "fstar_tactics_mapply"
  "fstar_tactics_v2" -> "fstar_tactics_namedview"
  "fstar_tactics_v2" -> "fstar_tactics_namedview"
  "fstar_tactics_v2" -> "fstar_tactics_visit"
  "fstar_tactics_v2" -> "fstar_tactics_visit"
  "fstar_tactics_v2" -> "fstar_tactics_print"
  "fstar_tactics_v2" -> "fstar_tactics_print"
  "fstar_tactics_v2" -> "fstar_tactics_util"
  "fstar_tactics_v2" -> "fstar_tactics_util"
  "fstar_tactics_v2" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_v2" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_v2" -> "fstar_tactics_v2_logic"
  "fstar_tactics_v2" -> "fstar_tactics_v2_logic"
  "fstar_tactics_v2" -> "fstar_tactics_v2_syntaxhelpers"
  "fstar_tactics_v2" -> "fstar_tactics_v2_syntaxhelpers"
  "fstar_tactics_v2" -> "fstar_tactics_v2_derived"
  "fstar_tactics_v2" -> "fstar_tactics_v2_derived"
  "fstar_tactics_v2" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_v2" -> "fstar_tactics_effect"
  "fstar_tactics_v2" -> "fstar_tactics_effect"
  "fstar_tactics_v2" -> "fstar_stubs_tactics_types"
  "fstar_tactics_v2" -> "fstar_reflection_v2_formula"
  "fstar_tactics_v2" -> "fstar_reflection_v2_formula"
  "fstar_tactics_v2" -> "fstar_reflection_v2"
  "fstar_tactics_v2" -> "fstar_reflection_v2"
  "fstar_tactics_v2" -> "fstar_stubs_reflection_types"
  "fstar_tactics_v2" -> "fstar_pervasives"
  "fstar_tactics_v2" -> "fstar_pervasives"
  "fstar_tactics_v2" -> "prims"
  "fstar_tactics_v2" -> "prims"
  "fstar_int32" -> "fstar_uint32"
  "fstar_int32" -> "fstar_uint32"
  "fstar_int32" -> "fstar_math_lemmas"
  "fstar_int32" -> "fstar_math_lemmas"
  "fstar_int32" -> "fstar_mul"
  "fstar_int32" -> "fstar_mul"
  "fstar_int32" -> "fstar_int"
  "fstar_int32" -> "fstar_int"
  "fstar_int32" -> "fstar_pervasives"
  "fstar_int32" -> "fstar_pervasives"
  "fstar_int32" -> "prims"
  "fstar_int32" -> "prims"
  "fstar_int32" -> "fstar_int32"
  "fstar_reflection_v2_derived" -> "fstar_list_tot_base"
  "fstar_reflection_v2_derived" -> "fstar_list_tot_base"
  "fstar_reflection_v2_derived" -> "fstar_pervasives_native"
  "fstar_reflection_v2_derived" -> "fstar_pervasives_native"
  "fstar_reflection_v2_derived" -> "fstar_list_tot"
  "fstar_reflection_v2_derived" -> "fstar_list_tot"
  "fstar_reflection_v2_derived" -> "fstar_reflection_v2_collect"
  "fstar_reflection_v2_derived" -> "fstar_reflection_v2_collect"
  "fstar_reflection_v2_derived" -> "fstar_vconfig"
  "fstar_reflection_v2_derived" -> "fstar_order"
  "fstar_reflection_v2_derived" -> "fstar_order"
  "fstar_reflection_v2_derived" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_v2_derived" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_reflection_v2_derived" -> "fstar_reflection_const"
  "fstar_reflection_v2_derived" -> "fstar_reflection_const"
  "fstar_reflection_v2_derived" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v2_derived" -> "fstar_pervasives"
  "fstar_reflection_v2_derived" -> "fstar_pervasives"
  "fstar_reflection_v2_derived" -> "prims"
  "fstar_reflection_v2_derived" -> "prims"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_t1" -> "core"
  "libcrux_ml_dsa_encoding_t1" -> "core"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_t1" -> "prims"
  "libcrux_ml_dsa_encoding_t1" -> "prims"
  "fstar_uint32" -> "fstar_mul"
  "fstar_uint32" -> "fstar_mul"
  "fstar_uint32" -> "fstar_uint"
  "fstar_uint32" -> "fstar_uint"
  "fstar_uint32" -> "fstar_pervasives"
  "fstar_uint32" -> "fstar_pervasives"
  "fstar_uint32" -> "prims"
  "fstar_uint32" -> "prims"
  "fstar_tactics_v2_syntaxcoercions" -> "fstar_sealed"
  "fstar_tactics_v2_syntaxcoercions" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_syntaxcoercions" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_syntaxcoercions" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_v2_syntaxcoercions" -> "fstar_pervasives"
  "fstar_tactics_v2_syntaxcoercions" -> "fstar_pervasives"
  "fstar_tactics_v2_syntaxcoercions" -> "prims"
  "fstar_tactics_v2_syntaxcoercions" -> "prims"
  "fstar_monotonic_heap" -> "fstar_preorder"
  "fstar_monotonic_heap" -> "fstar_preorder"
  "fstar_monotonic_heap" -> "fstar_tset"
  "fstar_monotonic_heap" -> "fstar_tset"
  "fstar_monotonic_heap" -> "fstar_set"
  "fstar_monotonic_heap" -> "fstar_set"
  "fstar_monotonic_heap" -> "fstar_pervasives"
  "fstar_monotonic_heap" -> "fstar_pervasives"
  "fstar_monotonic_heap" -> "prims"
  "fstar_monotonic_heap" -> "prims"
  "fstar_stubs_tactics_common" -> "fstar_range"
  "fstar_stubs_tactics_common" -> "fstar_stubs_errors_msg"
  "fstar_stubs_tactics_common" -> "fstar_pervasives"
  "fstar_stubs_tactics_common" -> "fstar_pervasives"
  "fstar_stubs_tactics_common" -> "prims"
  "fstar_stubs_tactics_common" -> "prims"
  "fstar_int_cast" -> "fstar_int"
  "fstar_int_cast" -> "fstar_int"
  "fstar_int_cast" -> "fstar_int64"
  "fstar_int_cast" -> "fstar_int64"
  "fstar_int_cast" -> "fstar_int32"
  "fstar_int_cast" -> "fstar_int32"
  "fstar_int_cast" -> "fstar_int16"
  "fstar_int_cast" -> "fstar_int16"
  "fstar_int_cast" -> "fstar_int8"
  "fstar_int_cast" -> "fstar_int8"
  "fstar_int_cast" -> "fstar_uint64"
  "fstar_int_cast" -> "fstar_uint64"
  "fstar_int_cast" -> "fstar_uint32"
  "fstar_int_cast" -> "fstar_uint32"
  "fstar_int_cast" -> "fstar_uint16"
  "fstar_int_cast" -> "fstar_uint16"
  "fstar_int_cast" -> "fstar_uint8"
  "fstar_int_cast" -> "fstar_uint8"
  "fstar_int_cast" -> "fstar_pervasives"
  "fstar_int_cast" -> "fstar_pervasives"
  "fstar_int_cast" -> "prims"
  "fstar_int_cast" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__neon" -> "prims"
  "libcrux_ml_dsa_simd_portable_ntt" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable_ntt" -> "rust_primitives"
  "libcrux_ml_dsa_simd_portable_ntt" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_ntt" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_ntt" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_ntt" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_portable_ntt" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_simd_portable_ntt" -> "libcrux_ml_dsa_simd_portable"
  "libcrux_ml_dsa_simd_portable_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_ntt" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_ntt" -> "core"
  "libcrux_ml_dsa_simd_portable_ntt" -> "core"
  "libcrux_ml_dsa_simd_portable_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_ntt" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_ntt" -> "prims"
  "libcrux_ml_dsa_simd_portable_ntt" -> "prims"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_commitment" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_commitment" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_commitment" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_encoding_commitment" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_encoding_commitment" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_commitment" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_commitment" -> "core_panicking"
  "libcrux_ml_dsa_encoding_commitment" -> "core_panicking"
  "libcrux_ml_dsa_encoding_commitment" -> "core_slice"
  "libcrux_ml_dsa_encoding_commitment" -> "core_ops_range"
  "libcrux_ml_dsa_encoding_commitment" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_commitment" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_commitment" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_commitment" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_commitment" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_commitment" -> "core"
  "libcrux_ml_dsa_encoding_commitment" -> "core"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_commitment" -> "prims"
  "libcrux_ml_dsa_encoding_commitment" -> "prims"
  "libcrux_ml_dsa_encoding_commitment" -> "libcrux_ml_dsa_encoding_commitment"
  "fstar_reflection_v2" -> "fstar_reflection_v2_collect"
  "fstar_reflection_v2" -> "fstar_reflection_v2_collect"
  "fstar_reflection_v2" -> "fstar_reflection_v2_compare"
  "fstar_reflection_v2" -> "fstar_reflection_v2_compare"
  "fstar_reflection_v2" -> "fstar_reflection_const"
  "fstar_reflection_v2" -> "fstar_reflection_const"
  "fstar_reflection_v2" -> "fstar_reflection_v2_derived_lemmas"
  "fstar_reflection_v2" -> "fstar_reflection_v2_derived_lemmas"
  "fstar_reflection_v2" -> "fstar_reflection_v2_derived"
  "fstar_reflection_v2" -> "fstar_reflection_v2_derived"
  "fstar_reflection_v2" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_reflection_v2" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_v2" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v2" -> "fstar_pervasives"
  "fstar_reflection_v2" -> "fstar_pervasives"
  "fstar_reflection_v2" -> "prims"
  "fstar_reflection_v2" -> "prims"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_sha3_neon_x2"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_uint8"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_uint8"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_neon" -> "rust_primitives_hax"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_list_tot"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_list_tot"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_hash_functions_neon" -> "libcrux_sha3_neon_x2_incremental"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_mul"
  "libcrux_ml_dsa_hash_functions_neon" -> "core"
  "libcrux_ml_dsa_hash_functions_neon" -> "core"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_hash_functions_neon" -> "prims"
  "libcrux_ml_dsa_hash_functions_neon" -> "prims"
  "lib_rawinttypes" -> "lib_inttypes"
  "lib_rawinttypes" -> "lib_inttypes"
  "lib_rawinttypes" -> "lib_inttypes"
  "lib_rawinttypes" -> "fstar_pervasives"
  "lib_rawinttypes" -> "fstar_pervasives"
  "lib_rawinttypes" -> "prims"
  "lib_rawinttypes" -> "prims"
  "lib_rawinttypes" -> "lib_rawinttypes"
  "libcrux_sha3_avx2_x4_incremental" -> "libcrux_sha3_neon_x2_incremental"
  "libcrux_sha3_avx2_x4_incremental" -> "fstar_mul"
  "libcrux_sha3_avx2_x4_incremental" -> "fstar_mul"
  "libcrux_sha3_avx2_x4_incremental" -> "core"
  "libcrux_sha3_avx2_x4_incremental" -> "core"
  "libcrux_sha3_avx2_x4_incremental" -> "fstar_pervasives"
  "libcrux_sha3_avx2_x4_incremental" -> "fstar_pervasives"
  "libcrux_sha3_avx2_x4_incremental" -> "prims"
  "libcrux_sha3_avx2_x4_incremental" -> "prims"
  "fstar_tactics_namedview" -> "fstar_range"
  "fstar_tactics_namedview" -> "fstar_reflection_v2"
  "fstar_tactics_namedview" -> "fstar_reflection_v2"
  "fstar_tactics_namedview" -> "fstar_tactics_effect"
  "fstar_tactics_namedview" -> "fstar_tactics_effect"
  "fstar_tactics_namedview" -> "fstar_pervasives"
  "fstar_tactics_namedview" -> "fstar_pervasives"
  "fstar_tactics_namedview" -> "prims"
  "fstar_tactics_namedview" -> "prims"
  "fstar_indefinitedescription" -> "fstar_ghost"
  "fstar_indefinitedescription" -> "fstar_ghost"
  "fstar_indefinitedescription" -> "fstar_squash"
  "fstar_indefinitedescription" -> "fstar_squash"
  "fstar_indefinitedescription" -> "fstar_classical"
  "fstar_indefinitedescription" -> "fstar_classical"
  "fstar_indefinitedescription" -> "fstar_pervasives"
  "fstar_indefinitedescription" -> "fstar_pervasives"
  "fstar_indefinitedescription" -> "prims"
  "fstar_indefinitedescription" -> "prims"
  "fstar_indefinitedescription" -> "fstar_indefinitedescription"
  "fstar_stubs_reflection_v1_data" -> "fstar_sealed_inhabited"
  "fstar_stubs_reflection_v1_data" -> "fstar_sealed_inhabited"
  "fstar_stubs_reflection_v1_data" -> "fstar_stubs_reflection_types"
  "fstar_stubs_reflection_v1_data" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_stubs_reflection_v1_data" -> "fstar_stubs_reflection_v2_data"
  "fstar_stubs_reflection_v1_data" -> "fstar_pervasives"
  "fstar_stubs_reflection_v1_data" -> "fstar_pervasives"
  "fstar_stubs_reflection_v1_data" -> "prims"
  "fstar_stubs_reflection_v1_data" -> "prims"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_matrix" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_matrix" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_matrix" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_matrix" -> "fstar_mul"
  "libcrux_ml_dsa_matrix" -> "fstar_mul"
  "libcrux_ml_dsa_matrix" -> "core"
  "libcrux_ml_dsa_matrix" -> "core"
  "libcrux_ml_dsa_matrix" -> "fstar_pervasives"
  "libcrux_ml_dsa_matrix" -> "fstar_pervasives"
  "libcrux_ml_dsa_matrix" -> "prims"
  "libcrux_ml_dsa_matrix" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_portable"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "core"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65__portable" -> "libcrux_ml_dsa_ml_dsa_65__portable"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "core_panicking"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "fstar_int32"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "libcrux_ml_dsa_simd_portable_vector_type"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "prims"
  "libcrux_ml_dsa_simd_portable_encoding_commitment" -> "libcrux_ml_dsa_simd_portable_encoding_commitment"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_arithmetic" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_arithmetic" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_arithmetic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_arithmetic" -> "core"
  "libcrux_ml_dsa_arithmetic" -> "core"
  "libcrux_ml_dsa_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_arithmetic" -> "prims"
  "libcrux_ml_dsa_arithmetic" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65__avx2" -> "libcrux_ml_dsa_ml_dsa_65__avx2"
  "fstar_tactics_namedview" -> "fstar_list_tot"
  "fstar_tactics_namedview" -> "fstar_list_tot"
  "fstar_tactics_namedview" -> "fstar_pervasives_native"
  "fstar_tactics_namedview" -> "fstar_pervasives_native"
  "fstar_tactics_namedview" -> "fstar_stubs_reflection_v2_data"
  "fstar_tactics_namedview" -> "fstar_reflection_v2"
  "fstar_tactics_namedview" -> "fstar_reflection_v2"
  "fstar_tactics_namedview" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_namedview" -> "fstar_tactics_util"
  "fstar_tactics_namedview" -> "fstar_tactics_util"
  "fstar_tactics_namedview" -> "fstar_tactics_effect"
  "fstar_tactics_namedview" -> "fstar_tactics_effect"
  "fstar_tactics_namedview" -> "fstar_pervasives"
  "fstar_tactics_namedview" -> "fstar_pervasives"
  "fstar_tactics_namedview" -> "prims"
  "fstar_tactics_namedview" -> "prims"
  "fstar_tactics_namedview" -> "fstar_tactics_namedview"
  "core_slice" -> "fstar_tactics_typeclasses"
  "core_slice" -> "fstar_tactics_typeclasses"
  "core_slice" -> "core_ops_index"
  "core_slice" -> "core_ops_index"
  "core_slice" -> "core_slice_iter"
  "core_slice" -> "core_slice_iter"
  "core_slice" -> "fstar_seq"
  "core_slice" -> "fstar_seq"
  "core_slice" -> "rust_primitives_integers"
  "core_slice" -> "rust_primitives_integers"
  "core_slice" -> "rust_primitives_arrays"
  "core_slice" -> "rust_primitives_arrays"
  "core_slice" -> "fstar_pervasives"
  "core_slice" -> "fstar_pervasives"
  "core_slice" -> "prims"
  "core_slice" -> "prims"
  "libcrux_ml_dsa_constants" -> "rust_primitives"
  "libcrux_ml_dsa_constants" -> "rust_primitives"
  "libcrux_ml_dsa_constants" -> "fstar_mul"
  "libcrux_ml_dsa_constants" -> "fstar_mul"
  "libcrux_ml_dsa_constants" -> "core"
  "libcrux_ml_dsa_constants" -> "core"
  "libcrux_ml_dsa_constants" -> "fstar_pervasives"
  "libcrux_ml_dsa_constants" -> "fstar_pervasives"
  "libcrux_ml_dsa_constants" -> "prims"
  "libcrux_ml_dsa_constants" -> "prims"
  "libcrux_ml_dsa_constants" -> "libcrux_ml_dsa_constants"
  "fstar_tactics_mapply" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_mapply" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_mapply" -> "fstar_tactics_typeclasses"
  "fstar_tactics_mapply" -> "fstar_tactics_typeclasses"
  "fstar_tactics_mapply" -> "fstar_tactics_effect"
  "fstar_tactics_mapply" -> "fstar_tactics_effect"
  "fstar_tactics_mapply" -> "fstar_reflection_v2"
  "fstar_tactics_mapply" -> "fstar_reflection_v2"
  "fstar_tactics_mapply" -> "fstar_pervasives"
  "fstar_tactics_mapply" -> "fstar_pervasives"
  "fstar_tactics_mapply" -> "prims"
  "fstar_tactics_mapply" -> "prims"
  "fstar_int" -> "fstar_uint"
  "fstar_int" -> "fstar_uint"
  "fstar_int" -> "fstar_seq"
  "fstar_int" -> "fstar_seq"
  "fstar_int" -> "fstar_math_lib"
  "fstar_int" -> "fstar_math_lib"
  "fstar_int" -> "fstar_math_lemmas"
  "fstar_int" -> "fstar_math_lemmas"
  "fstar_int" -> "fstar_bitvector"
  "fstar_int" -> "fstar_bitvector"
  "fstar_int" -> "fstar_mul"
  "fstar_int" -> "fstar_mul"
  "fstar_int" -> "fstar_pervasives"
  "fstar_int" -> "fstar_pervasives"
  "fstar_int" -> "prims"
  "fstar_int" -> "prims"
  "fstar_int" -> "fstar_int"
  "fstar_uint16" -> "fstar_uint32"
  "fstar_uint16" -> "fstar_uint32"
  "fstar_uint16" -> "fstar_mul"
  "fstar_uint16" -> "fstar_mul"
  "fstar_uint16" -> "fstar_uint"
  "fstar_uint16" -> "fstar_uint"
  "fstar_uint16" -> "fstar_pervasives"
  "fstar_uint16" -> "fstar_pervasives"
  "fstar_uint16" -> "prims"
  "fstar_uint16" -> "prims"
  "fstar_uint16" -> "fstar_uint16"
  "fstar_int64" -> "fstar_uint32"
  "fstar_int64" -> "fstar_uint32"
  "fstar_int64" -> "fstar_math_lemmas"
  "fstar_int64" -> "fstar_math_lemmas"
  "fstar_int64" -> "fstar_mul"
  "fstar_int64" -> "fstar_mul"
  "fstar_int64" -> "fstar_int"
  "fstar_int64" -> "fstar_int"
  "fstar_int64" -> "fstar_pervasives"
  "fstar_int64" -> "fstar_pervasives"
  "fstar_int64" -> "prims"
  "fstar_int64" -> "prims"
  "fstar_int64" -> "fstar_int64"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_encoding_verification_key"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_encoding_verification_key"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_convert"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_convert"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_encoding_signature"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_encoding_signature"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_ntt"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_ntt"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_encoding_commitment"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_encoding_commitment"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_arithmetic"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_arithmetic"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_matrix"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_matrix"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_sample"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_sample"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_ml_dsa_generic" -> "rust_primitives"
  "libcrux_ml_dsa_ml_dsa_generic" -> "rust_primitives"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_uint16"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_uint16"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_uint8"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_uint8"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_utils"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_utils"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_samplex4"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_samplex4"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_encoding_signing_key"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_encoding_signing_key"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_slice"
  "libcrux_ml_dsa_ml_dsa_generic" -> "rust_primitives_hax"
  "libcrux_ml_dsa_ml_dsa_generic" -> "rust_primitives_hax"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_list_tot"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_list_tot"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_option"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core_option"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_sha3_portable_incremental"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic" -> "libcrux_ml_dsa_ml_dsa_generic"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "core"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_87__neon" -> "prims"
  "fstar_mul" -> "fstar_pervasives"
  "fstar_mul" -> "fstar_pervasives"
  "fstar_mul" -> "prims"
  "fstar_mul" -> "prims"
  "fstar_reflection_termeq_simple" -> "fstar_reflection_termeq"
  "fstar_reflection_termeq_simple" -> "fstar_reflection_termeq"
  "fstar_reflection_termeq_simple" -> "fstar_stubs_reflection_types"
  "fstar_reflection_termeq_simple" -> "fstar_pervasives"
  "fstar_reflection_termeq_simple" -> "fstar_pervasives"
  "fstar_reflection_termeq_simple" -> "prims"
  "fstar_reflection_termeq_simple" -> "prims"
  "fstar_reflection_termeq_simple" -> "fstar_reflection_termeq_simple"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_simd_avx2_vector_type"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_simd_avx2_vector_type"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_ml_dsa_generic"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_ml_dsa_generic"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_simd_avx2"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_pre_hash"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_simd256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2"
  "fstar_propositionalextensionality" -> "fstar_pervasives"
  "fstar_propositionalextensionality" -> "fstar_pervasives"
  "fstar_propositionalextensionality" -> "prims"
  "fstar_propositionalextensionality" -> "prims"
  "fstar_predicateextensionality" -> "fstar_propositionalextensionality"
  "fstar_predicateextensionality" -> "fstar_propositionalextensionality"
  "fstar_predicateextensionality" -> "fstar_functionalextensionality"
  "fstar_predicateextensionality" -> "fstar_functionalextensionality"
  "fstar_predicateextensionality" -> "fstar_pervasives"
  "fstar_predicateextensionality" -> "fstar_pervasives"
  "fstar_predicateextensionality" -> "prims"
  "fstar_predicateextensionality" -> "prims"
  "libcrux_ml_dsa_encoding_t1" -> "core_ops_range"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_t1" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_t1" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_t1" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_t1" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_t1" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_t1" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_t1" -> "core_option"
  "libcrux_ml_dsa_encoding_t1" -> "core_option"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_t1" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_t1" -> "core_slice"
  "libcrux_ml_dsa_encoding_t1" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_t1" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_t1" -> "core"
  "libcrux_ml_dsa_encoding_t1" -> "core"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_t1" -> "prims"
  "libcrux_ml_dsa_encoding_t1" -> "prims"
  "libcrux_ml_dsa_encoding_t1" -> "libcrux_ml_dsa_encoding_t1"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "core_num"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_shuffle_table"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_int8"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_int32"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "core_ops_range"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_uint8"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "rust_primitives_hax"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "hax_lib"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "core_slice"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus" -> "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_field_modulus"
  "bitvec_equality" -> "fstar_functionalextensionality"
  "bitvec_equality" -> "fstar_functionalextensionality"
  "bitvec_equality" -> "fstar_mul"
  "bitvec_equality" -> "fstar_mul"
  "bitvec_equality" -> "rust_primitives"
  "bitvec_equality" -> "rust_primitives"
  "bitvec_equality" -> "core"
  "bitvec_equality" -> "core"
  "bitvec_equality" -> "fstar_pervasives"
  "bitvec_equality" -> "fstar_pervasives"
  "bitvec_equality" -> "prims"
  "bitvec_equality" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65_" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_65_" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_65_" -> "libcrux_ml_dsa_ml_dsa_generic_multiplexing"
  "libcrux_ml_dsa_ml_dsa_65_" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_65_" -> "core"
  "libcrux_ml_dsa_ml_dsa_65_" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_65_" -> "prims"
  "libcrux_ml_dsa_ml_dsa_65_" -> "libcrux_ml_dsa_ml_dsa_65_"
  "fstar_int16" -> "fstar_uint"
  "fstar_int16" -> "fstar_uint"
  "fstar_int16" -> "fstar_uint32"
  "fstar_int16" -> "fstar_uint32"
  "fstar_int16" -> "fstar_mul"
  "fstar_int16" -> "fstar_mul"
  "fstar_int16" -> "fstar_int"
  "fstar_int16" -> "fstar_int"
  "fstar_int16" -> "fstar_pervasives"
  "fstar_int16" -> "fstar_pervasives"
  "fstar_int16" -> "prims"
  "fstar_int16" -> "prims"
  "libcrux_ml_dsa_sample" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_sample" -> "hax_lib"
  "libcrux_ml_dsa_sample" -> "hax_lib"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_encoding_gamma1"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_encoding_gamma1"
  "libcrux_ml_dsa_sample" -> "fstar_uint8"
  "libcrux_ml_dsa_sample" -> "fstar_uint8"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_sample" -> "rust_primitives"
  "libcrux_ml_dsa_sample" -> "rust_primitives"
  "libcrux_ml_dsa_sample" -> "core_convert"
  "libcrux_ml_dsa_sample" -> "core_convert"
  "libcrux_ml_dsa_sample" -> "core_array"
  "libcrux_ml_dsa_sample" -> "core_array"
  "libcrux_ml_dsa_sample" -> "core_result"
  "libcrux_ml_dsa_sample" -> "core_result"
  "libcrux_ml_dsa_sample" -> "core_num"
  "libcrux_ml_dsa_sample" -> "fstar_uint64"
  "libcrux_ml_dsa_sample" -> "fstar_uint64"
  "libcrux_ml_dsa_sample" -> "core_panicking"
  "libcrux_ml_dsa_sample" -> "core_panicking"
  "libcrux_ml_dsa_sample" -> "rust_primitives_hax"
  "libcrux_ml_dsa_sample" -> "rust_primitives_hax"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_constants"
  "libcrux_ml_dsa_sample" -> "core_ops_range"
  "libcrux_ml_dsa_sample" -> "core_slice"
  "libcrux_ml_dsa_sample" -> "core_slice_iter"
  "libcrux_ml_dsa_sample" -> "core_slice_iter"
  "libcrux_ml_dsa_sample" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_sample" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_sample" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_sample" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_sample" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_sample" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_sample" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_sample" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_sample" -> "fstar_uint16"
  "libcrux_ml_dsa_sample" -> "fstar_uint16"
  "libcrux_ml_dsa_sample" -> "fstar_int32"
  "libcrux_ml_dsa_sample" -> "fstar_int32"
  "libcrux_ml_dsa_sample" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_sample" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_hash_functions_shake256"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_hash_functions_shake128"
  "libcrux_ml_dsa_sample" -> "fstar_mul"
  "libcrux_ml_dsa_sample" -> "fstar_mul"
  "libcrux_ml_dsa_sample" -> "core"
  "libcrux_ml_dsa_sample" -> "core"
  "libcrux_ml_dsa_sample" -> "fstar_pervasives"
  "libcrux_ml_dsa_sample" -> "fstar_pervasives"
  "libcrux_ml_dsa_sample" -> "prims"
  "libcrux_ml_dsa_sample" -> "prims"
  "libcrux_ml_dsa_sample" -> "libcrux_ml_dsa_sample"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "core"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_generic_multiplexing" -> "prims"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "libcrux_ml_dsa_simd_portable_rec_bundle_437004224"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "prims"
  "libcrux_ml_dsa_simd_portable_encoding_error" -> "libcrux_ml_dsa_simd_portable_encoding_error"
  "fstar_int128" -> "fstar_int64"
  "fstar_int128" -> "fstar_int64"
  "fstar_int128" -> "fstar_uint"
  "fstar_int128" -> "fstar_uint"
  "fstar_int128" -> "fstar_uint32"
  "fstar_int128" -> "fstar_uint32"
  "fstar_int128" -> "fstar_mul"
  "fstar_int128" -> "fstar_mul"
  "fstar_int128" -> "fstar_int"
  "fstar_int128" -> "fstar_int"
  "fstar_int128" -> "fstar_pervasives"
  "fstar_int128" -> "fstar_pervasives"
  "fstar_int128" -> "prims"
  "fstar_int128" -> "prims"
  "lib_loopcombinators" -> "fstar_all"
  "lib_loopcombinators" -> "fstar_all"
  "lib_loopcombinators" -> "fstar_pervasives"
  "lib_loopcombinators" -> "fstar_pervasives"
  "lib_loopcombinators" -> "prims"
  "lib_loopcombinators" -> "prims"
  "lib_sequence" -> "fstar_list_tot"
  "lib_sequence" -> "fstar_list_tot"
  "lib_sequence" -> "fstar_calc"
  "lib_sequence" -> "fstar_calc"
  "lib_sequence" -> "fstar_math_lemmas"
  "lib_sequence" -> "fstar_math_lemmas"
  "lib_sequence" -> "fstar_pervasives_native"
  "lib_sequence" -> "fstar_pervasives_native"
  "lib_sequence" -> "fstar_seq_properties"
  "lib_sequence" -> "fstar_seq_properties"
  "lib_sequence" -> "fstar_seq"
  "lib_sequence" -> "fstar_seq"
  "lib_sequence" -> "lib_loopcombinators"
  "lib_sequence" -> "lib_loopcombinators"
  "lib_sequence" -> "lib_inttypes"
  "lib_sequence" -> "lib_inttypes"
  "lib_sequence" -> "fstar_mul"
  "lib_sequence" -> "fstar_mul"
  "lib_sequence" -> "fstar_pervasives"
  "lib_sequence" -> "fstar_pervasives"
  "lib_sequence" -> "prims"
  "lib_sequence" -> "prims"
  "lib_sequence" -> "lib_sequence"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "libcrux_ml_dsa_simd_portable_rec_bundle_437004224"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "prims"
  "libcrux_ml_dsa_simd_portable_encoding_t1" -> "libcrux_ml_dsa_simd_portable_encoding_t1"
  "core" -> "core_ops"
  "core" -> "core_ops"
  "core" -> "core_iter"
  "core" -> "core_num"
  "core" -> "rust_primitives"
  "core" -> "rust_primitives"
  "core" -> "fstar_pervasives"
  "core" -> "fstar_pervasives"
  "core" -> "prims"
  "core" -> "prims"
  "fstar_class_printable" -> "fstar_seq"
  "fstar_class_printable" -> "fstar_seq"
  "fstar_class_printable" -> "fstar_uint64"
  "fstar_class_printable" -> "fstar_uint64"
  "fstar_class_printable" -> "fstar_int64"
  "fstar_class_printable" -> "fstar_int64"
  "fstar_class_printable" -> "fstar_uint32"
  "fstar_class_printable" -> "fstar_uint32"
  "fstar_class_printable" -> "fstar_int32"
  "fstar_class_printable" -> "fstar_int32"
  "fstar_class_printable" -> "fstar_uint16"
  "fstar_class_printable" -> "fstar_uint16"
  "fstar_class_printable" -> "fstar_int16"
  "fstar_class_printable" -> "fstar_int16"
  "fstar_class_printable" -> "fstar_int8"
  "fstar_class_printable" -> "fstar_int8"
  "fstar_class_printable" -> "fstar_uint8"
  "fstar_class_printable" -> "fstar_uint8"
  "fstar_class_printable" -> "fstar_char"
  "fstar_class_printable" -> "fstar_list_tot"
  "fstar_class_printable" -> "fstar_list_tot"
  "fstar_class_printable" -> "fstar_tactics_typeclasses"
  "fstar_class_printable" -> "fstar_tactics_typeclasses"
  "fstar_class_printable" -> "fstar_seq_properties"
  "fstar_class_printable" -> "fstar_seq_properties"
  "fstar_class_printable" -> "fstar_string"
  "fstar_class_printable" -> "fstar_pervasives"
  "fstar_class_printable" -> "fstar_pervasives"
  "fstar_class_printable" -> "prims"
  "fstar_class_printable" -> "prims"
  "fstar_uint128" -> "fstar_uint64"
  "fstar_uint128" -> "fstar_uint64"
  "fstar_uint128" -> "fstar_uint32"
  "fstar_uint128" -> "fstar_uint32"
  "fstar_uint128" -> "fstar_mul"
  "fstar_uint128" -> "fstar_mul"
  "fstar_uint128" -> "fstar_uint"
  "fstar_uint128" -> "fstar_uint"
  "fstar_uint128" -> "fstar_pervasives"
  "fstar_uint128" -> "fstar_pervasives"
  "fstar_uint128" -> "prims"
  "fstar_uint128" -> "prims"
  "fstar_tset" -> "fstar_set"
  "fstar_tset" -> "fstar_set"
  "fstar_tset" -> "fstar_pervasives"
  "fstar_tset" -> "fstar_pervasives"
  "fstar_tset" -> "prims"
  "fstar_tset" -> "prims"
  "fstar_list_tot" -> "fstar_list_tot_properties"
  "fstar_list_tot" -> "fstar_list_tot_properties"
  "fstar_list_tot" -> "fstar_list_tot_base"
  "fstar_list_tot" -> "fstar_list_tot_base"
  "fstar_list_tot" -> "fstar_pervasives"
  "fstar_list_tot" -> "fstar_pervasives"
  "fstar_list_tot" -> "prims"
  "fstar_list_tot" -> "prims"
  "fstar_reflection_v2_compare" -> "fstar_ghost"
  "fstar_reflection_v2_compare" -> "fstar_ghost"
  "fstar_reflection_v2_compare" -> "fstar_reflection_v2_derived_lemmas"
  "fstar_reflection_v2_compare" -> "fstar_reflection_v2_derived_lemmas"
  "fstar_reflection_v2_compare" -> "fstar_pervasives_native"
  "fstar_reflection_v2_compare" -> "fstar_pervasives_native"
  "fstar_reflection_v2_compare" -> "fstar_order"
  "fstar_reflection_v2_compare" -> "fstar_order"
  "fstar_reflection_v2_compare" -> "fstar_reflection_v2_derived"
  "fstar_reflection_v2_compare" -> "fstar_reflection_v2_derived"
  "fstar_reflection_v2_compare" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_reflection_v2_compare" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_v2_compare" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v2_compare" -> "fstar_pervasives"
  "fstar_reflection_v2_compare" -> "fstar_pervasives"
  "fstar_reflection_v2_compare" -> "prims"
  "fstar_reflection_v2_compare" -> "prims"
  "fstar_reflection_v2_compare" -> "fstar_reflection_v2_compare"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "libcrux_ml_dsa_simd_portable_rec_bundle_437004224"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "core"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "prims"
  "libcrux_ml_dsa_simd_portable_encoding_gamma1" -> "libcrux_ml_dsa_simd_portable_encoding_gamma1"
  "fstar_list" -> "fstar_pervasives_native"
  "fstar_list" -> "fstar_pervasives_native"
  "fstar_list" -> "fstar_list_tot"
  "fstar_list" -> "fstar_list_tot"
  "fstar_list" -> "fstar_all"
  "fstar_list" -> "fstar_all"
  "fstar_list" -> "fstar_pervasives"
  "fstar_list" -> "fstar_pervasives"
  "fstar_list" -> "prims"
  "fstar_list" -> "prims"
  "fstar_indefinitedescription" -> "fstar_ghost"
  "fstar_indefinitedescription" -> "fstar_ghost"
  "fstar_indefinitedescription" -> "fstar_pervasives"
  "fstar_indefinitedescription" -> "fstar_pervasives"
  "fstar_indefinitedescription" -> "prims"
  "fstar_indefinitedescription" -> "prims"
  "fstar_uint" -> "fstar_seq_base"
  "fstar_uint" -> "fstar_seq_base"
  "fstar_uint" -> "fstar_calc"
  "fstar_uint" -> "fstar_calc"
  "fstar_uint" -> "fstar_classical"
  "fstar_uint" -> "fstar_classical"
  "fstar_uint" -> "fstar_seq"
  "fstar_uint" -> "fstar_seq"
  "fstar_uint" -> "fstar_math_lib"
  "fstar_uint" -> "fstar_math_lib"
  "fstar_uint" -> "fstar_math_lemmas"
  "fstar_uint" -> "fstar_math_lemmas"
  "fstar_uint" -> "fstar_bitvector"
  "fstar_uint" -> "fstar_bitvector"
  "fstar_uint" -> "fstar_mul"
  "fstar_uint" -> "fstar_mul"
  "fstar_uint" -> "fstar_pervasives"
  "fstar_uint" -> "fstar_pervasives"
  "fstar_uint" -> "prims"
  "fstar_uint" -> "prims"
  "fstar_uint" -> "fstar_uint"
  "fstar_tset" -> "fstar_squash"
  "fstar_tset" -> "fstar_squash"
  "fstar_tset" -> "fstar_strongexcludedmiddle"
  "fstar_tset" -> "fstar_strongexcludedmiddle"
  "fstar_tset" -> "fstar_set"
  "fstar_tset" -> "fstar_set"
  "fstar_tset" -> "fstar_predicateextensionality"
  "fstar_tset" -> "fstar_predicateextensionality"
  "fstar_tset" -> "fstar_functionalextensionality"
  "fstar_tset" -> "fstar_functionalextensionality"
  "fstar_tset" -> "fstar_propositionalextensionality"
  "fstar_tset" -> "fstar_propositionalextensionality"
  "fstar_tset" -> "fstar_pervasives"
  "fstar_tset" -> "fstar_pervasives"
  "fstar_tset" -> "prims"
  "fstar_tset" -> "prims"
  "fstar_tset" -> "fstar_tset"
  "libcrux_sha3_neon_x2_incremental" -> "core_core_arch_arm_shared_neon"
  "libcrux_sha3_neon_x2_incremental" -> "libcrux_sha3_generic_keccak"
  "libcrux_sha3_neon_x2_incremental" -> "libcrux_sha3_generic_keccak"
  "libcrux_sha3_neon_x2_incremental" -> "fstar_mul"
  "libcrux_sha3_neon_x2_incremental" -> "fstar_mul"
  "libcrux_sha3_neon_x2_incremental" -> "core"
  "libcrux_sha3_neon_x2_incremental" -> "core"
  "libcrux_sha3_neon_x2_incremental" -> "fstar_pervasives"
  "libcrux_sha3_neon_x2_incremental" -> "fstar_pervasives"
  "libcrux_sha3_neon_x2_incremental" -> "prims"
  "libcrux_sha3_neon_x2_incremental" -> "prims"
  "fstar_tactics_visit" -> "fstar_pervasives_native"
  "fstar_tactics_visit" -> "fstar_pervasives_native"
  "fstar_tactics_visit" -> "fstar_tactics_util"
  "fstar_tactics_visit" -> "fstar_tactics_util"
  "fstar_tactics_visit" -> "fstar_tactics_effect"
  "fstar_tactics_visit" -> "fstar_tactics_effect"
  "fstar_tactics_visit" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_tactics_visit" -> "fstar_stubs_reflection_v2_data"
  "fstar_tactics_visit" -> "fstar_stubs_reflection_types"
  "fstar_tactics_visit" -> "fstar_pervasives"
  "fstar_tactics_visit" -> "fstar_pervasives"
  "fstar_tactics_visit" -> "prims"
  "fstar_tactics_visit" -> "prims"
  "libcrux_ml_dsa_simd_traits" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_traits" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_simd_traits" -> "fstar_mul"
  "libcrux_ml_dsa_simd_traits" -> "fstar_mul"
  "libcrux_ml_dsa_simd_traits" -> "core"
  "libcrux_ml_dsa_simd_traits" -> "core"
  "libcrux_ml_dsa_simd_traits" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_traits" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_traits" -> "prims"
  "libcrux_ml_dsa_simd_traits" -> "prims"
  "libcrux_ml_dsa_simd_traits" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "libcrux_intrinsics_avx2_extract"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_mul"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "core"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "prims"
  "libcrux_ml_dsa_simd_avx2_rejection_sample_less_than_eta" -> "prims"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_classical"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_classical"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_pervasives_native"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_pervasives_native"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_list_tot"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_list_tot"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_reflection_v2_collect"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_reflection_v2_collect"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_pervasives"
  "fstar_reflection_v2_derived_lemmas" -> "fstar_pervasives"
  "fstar_reflection_v2_derived_lemmas" -> "prims"
  "fstar_reflection_v2_derived_lemmas" -> "prims"
  "libcrux_ml_dsa_encoding_error" -> "core_ops_range"
  "libcrux_ml_dsa_encoding_error" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_error" -> "fstar_uint8"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_ntt"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_ntt"
  "libcrux_ml_dsa_encoding_error" -> "core_iter_adapters_enumerate"
  "libcrux_ml_dsa_encoding_error" -> "core_iter_adapters_enumerate"
  "libcrux_ml_dsa_encoding_error" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_encoding_error" -> "core_iter_traits_collect"
  "libcrux_ml_dsa_encoding_error" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_error" -> "rust_primitives_hax_monomorphized_update_at"
  "libcrux_ml_dsa_encoding_error" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_error" -> "core_iter_traits_iterator"
  "libcrux_ml_dsa_encoding_error" -> "core_option"
  "libcrux_ml_dsa_encoding_error" -> "core_option"
  "libcrux_ml_dsa_encoding_error" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_error" -> "fstar_pervasives_native"
  "libcrux_ml_dsa_encoding_error" -> "rust_primitives_hax_folds"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_error" -> "core_panicking"
  "libcrux_ml_dsa_encoding_error" -> "core_panicking"
  "libcrux_ml_dsa_encoding_error" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_error" -> "rust_primitives_hax"
  "libcrux_ml_dsa_encoding_error" -> "core_slice"
  "libcrux_ml_dsa_encoding_error" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_error" -> "core_slice_iter"
  "libcrux_ml_dsa_encoding_error" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_error" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_error" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_error" -> "core"
  "libcrux_ml_dsa_encoding_error" -> "core"
  "libcrux_ml_dsa_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_error" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_error" -> "prims"
  "libcrux_ml_dsa_encoding_error" -> "prims"
  "libcrux_ml_dsa_encoding_error" -> "libcrux_ml_dsa_encoding_error"
  "fstar_stubs_reflection_v1_builtins" -> "fstar_vconfig"
  "fstar_stubs_reflection_v1_builtins" -> "fstar_stubs_reflection_v1_data"
  "fstar_stubs_reflection_v1_builtins" -> "fstar_stubs_reflection_types"
  "fstar_stubs_reflection_v1_builtins" -> "fstar_order"
  "fstar_stubs_reflection_v1_builtins" -> "fstar_order"
  "fstar_stubs_reflection_v1_builtins" -> "fstar_pervasives"
  "fstar_stubs_reflection_v1_builtins" -> "fstar_pervasives"
  "fstar_stubs_reflection_v1_builtins" -> "prims"
  "fstar_stubs_reflection_v1_builtins" -> "prims"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_encoding_signature" -> "core_result"
  "libcrux_ml_dsa_encoding_signature" -> "core_result"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_signature" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_signature" -> "core"
  "libcrux_ml_dsa_encoding_signature" -> "core"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_signature" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_signature" -> "prims"
  "libcrux_ml_dsa_encoding_signature" -> "prims"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_polynomial"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_tactics_typeclasses"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_verification_key" -> "libcrux_ml_dsa_simd_traits"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_mul"
  "libcrux_ml_dsa_encoding_verification_key" -> "core"
  "libcrux_ml_dsa_encoding_verification_key" -> "core"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_verification_key" -> "fstar_pervasives"
  "libcrux_ml_dsa_encoding_verification_key" -> "prims"
  "libcrux_ml_dsa_encoding_verification_key" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "core_result"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__portable" -> "prims"
  "fstar_reflection_v2_collect" -> "fstar_list_tot_base"
  "fstar_reflection_v2_collect" -> "fstar_list_tot_base"
  "fstar_reflection_v2_collect" -> "fstar_pervasives_native"
  "fstar_reflection_v2_collect" -> "fstar_pervasives_native"
  "fstar_reflection_v2_collect" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_v2_collect" -> "fstar_stubs_reflection_v2_builtins"
  "fstar_reflection_v2_collect" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v2_collect" -> "fstar_pervasives"
  "fstar_reflection_v2_collect" -> "fstar_pervasives"
  "fstar_reflection_v2_collect" -> "prims"
  "fstar_reflection_v2_collect" -> "prims"
  "fstar_reflection_v2_compare" -> "fstar_order"
  "fstar_reflection_v2_compare" -> "fstar_order"
  "fstar_reflection_v2_compare" -> "fstar_stubs_reflection_v2_data"
  "fstar_reflection_v2_compare" -> "fstar_stubs_reflection_types"
  "fstar_reflection_v2_compare" -> "fstar_pervasives"
  "fstar_reflection_v2_compare" -> "fstar_pervasives"
  "fstar_reflection_v2_compare" -> "prims"
  "fstar_reflection_v2_compare" -> "prims"
  "libcrux_sha3_neon_x2" -> "fstar_mul"
  "libcrux_sha3_neon_x2" -> "fstar_mul"
  "libcrux_sha3_neon_x2" -> "core"
  "libcrux_sha3_neon_x2" -> "core"
  "libcrux_sha3_neon_x2" -> "fstar_pervasives"
  "libcrux_sha3_neon_x2" -> "fstar_pervasives"
  "libcrux_sha3_neon_x2" -> "prims"
  "libcrux_sha3_neon_x2" -> "prims"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_pervasives"
  "fstar_tactics_v1_logic_lemmas" -> "fstar_pervasives"
  "fstar_tactics_v1_logic_lemmas" -> "prims"
  "fstar_tactics_v1_logic_lemmas" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_int32"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "libcrux_ml_dsa_types"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "libcrux_ml_dsa_ml_dsa_generic_instantiations_avx2"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_mul"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "core"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "fstar_pervasives"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "prims"
  "libcrux_ml_dsa_ml_dsa_44__avx2" -> "libcrux_ml_dsa_ml_dsa_44__avx2"
  "fstar_tactics_effect" -> "fstar_stubs_tactics_result"
  "fstar_tactics_effect" -> "fstar_stubs_tactics_types"
  "fstar_tactics_effect" -> "fstar_stubs_reflection_types"
  "fstar_tactics_effect" -> "fstar_pervasives"
  "fstar_tactics_effect" -> "fstar_pervasives"
  "fstar_tactics_effect" -> "prims"
  "fstar_tactics_effect" -> "prims"
  "fstar_tactics_effect" -> "fstar_tactics_effect"
  "core_array_iter" -> "core_iter"
  "core_array_iter" -> "rust_primitives"
  "core_array_iter" -> "rust_primitives"
  "core_array_iter" -> "fstar_pervasives"
  "core_array_iter" -> "fstar_pervasives"
  "core_array_iter" -> "prims"
  "core_array_iter" -> "prims"
  "tactics_utils" -> "fstar_tactics_effect"
  "tactics_utils" -> "fstar_tactics_effect"
  "tactics_utils" -> "fstar_char"
  "tactics_utils" -> "fstar_string"
  "tactics_utils" -> "fstar_reflection_v2"
  "tactics_utils" -> "fstar_reflection_v2"
  "tactics_utils" -> "fstar_tactics_util"
  "tactics_utils" -> "fstar_tactics_util"
  "tactics_utils" -> "fstar_tactics_v1"
  "tactics_utils" -> "fstar_tactics_v1"
  "tactics_utils" -> "fstar_tactics"
  "tactics_utils" -> "fstar_tactics"
  "tactics_utils" -> "fstar_pervasives_native"
  "tactics_utils" -> "fstar_pervasives_native"
  "tactics_utils" -> "fstar_mul"
  "tactics_utils" -> "fstar_mul"
  "tactics_utils" -> "fstar_class_printable"
  "tactics_utils" -> "fstar_class_printable"
  "tactics_utils" -> "fstar_tactics_v2_syntaxhelpers"
  "tactics_utils" -> "fstar_tactics_v2_syntaxhelpers"
  "tactics_utils" -> "fstar_tactics_v2"
  "tactics_utils" -> "fstar_tactics_v2"
  "tactics_utils" -> "fstar_list_tot"
  "tactics_utils" -> "fstar_list_tot"
  "tactics_utils" -> "fstar_option"
  "tactics_utils" -> "fstar_option"
  "tactics_utils" -> "core"
  "tactics_utils" -> "core"
  "tactics_utils" -> "fstar_pervasives"
  "tactics_utils" -> "fstar_pervasives"
  "tactics_utils" -> "prims"
  "tactics_utils" -> "prims"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "libcrux_ml_dsa_simd_portable_rec_bundle_437004224"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "fstar_mul"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "core"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "fstar_pervasives"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "prims"
  "libcrux_ml_dsa_simd_portable_arithmetic" -> "libcrux_ml_dsa_simd_portable_arithmetic"
  "fstar_tactics_v2_logic" -> "fstar_pervasives_native"
  "fstar_tactics_v2_logic" -> "fstar_pervasives_native"
  "fstar_tactics_v2_logic" -> "fstar_squash"
  "fstar_tactics_v2_logic" -> "fstar_squash"
  "fstar_tactics_v2_logic" -> "fstar_reflection_termeq_simple"
  "fstar_tactics_v2_logic" -> "fstar_reflection_termeq_simple"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v1_logic_lemmas"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v1_logic_lemmas"
  "fstar_tactics_v2_logic" -> "fstar_tactics_util"
  "fstar_tactics_v2_logic" -> "fstar_tactics_util"
  "fstar_tactics_v2_logic" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_logic" -> "fstar_tactics_namedview"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v2_syntaxcoercions"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v2_derived"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v2_derived"
  "fstar_tactics_v2_logic" -> "fstar_stubs_tactics_v2_builtins"
  "fstar_tactics_v2_logic" -> "fstar_tactics_effect"
  "fstar_tactics_v2_logic" -> "fstar_tactics_effect"
  "fstar_tactics_v2_logic" -> "fstar_reflection_v2_formula"
  "fstar_tactics_v2_logic" -> "fstar_reflection_v2_formula"
  "fstar_tactics_v2_logic" -> "fstar_reflection_v2"
  "fstar_tactics_v2_logic" -> "fstar_reflection_v2"
  "fstar_tactics_v2_logic" -> "fstar_pervasives"
  "fstar_tactics_v2_logic" -> "fstar_pervasives"
  "fstar_tactics_v2_logic" -> "prims"
  "fstar_tactics_v2_logic" -> "prims"
  "fstar_tactics_v2_logic" -> "fstar_tactics_v2_logic"
  "core_iter" -> "rust_primitives_arrays"
  "core_iter" -> "rust_primitives_arrays"
  "core_iter" -> "core_ops_range"
  "core_iter" -> "core_iter_adapters_step_by"
  "core_iter" -> "core_iter_adapters_step_by"
  "core_iter" -> "fstar_pervasives_native"
  "core_iter" -> "fstar_pervasives_native"
  "core_iter" -> "core_ops"
  "core_iter" -> "core_ops"
  "core_iter" -> "fstar_tactics_typeclasses"
  "core_iter" -> "fstar_tactics_typeclasses"
  "core_iter" -> "core_iter_adapters_enumerate"
  "core_iter" -> "core_iter_adapters_enumerate"
  "core_iter" -> "core_iter_traits_iterator"
  "core_iter" -> "core_iter_traits_iterator"
  "core_iter" -> "rust_primitives"
  "core_iter" -> "rust_primitives"
  "core_iter" -> "fstar_pervasives"
  "core_iter" -> "fstar_pervasives"
  "core_iter" -> "prims"
  "core_iter" -> "prims"
}
